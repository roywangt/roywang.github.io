<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation â€“ Managing Workbooks and Worksheets</title>
    <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/</link>
    <description>Recent content in Managing Workbooks and Worksheets on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Java: Create Workbook (Global) and Worksheet Scoped Named Ranges</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/create&#43;workbook&#43;global&#43;and&#43;worksheet&#43;scoped&#43;named&#43;ranges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/create&#43;workbook&#43;global&#43;and&#43;worksheet&#43;scoped&#43;named&#43;ranges/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--create-workbook-global-and-worksheet-scoped-named-ranges&#34;&gt;Aspose.Cells for Java : Create Workbook (Global) and Worksheet Scoped Named Ranges&lt;/h1&gt;
&lt;p&gt;Microsoft Excel allows users to define named ranges with two different scopes: workbook (also known as global scope) and worksheet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Named ranges with a workbook scope can be accessed from any worksheet within that workbook by simply using its name.&lt;/li&gt;
&lt;li&gt;Worksheet scoped named ranges are accessed with the reference of the particular worksheet in which it was created.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Aspose.Cells provides the same functionality as Microsoft Excel for adding workbook and worksheet scoped named ranges. When creating a worksheet scoped named range, the worksheet reference should be used in the named range to specify it as a worksheet scoped named range.&lt;/p&gt;
&lt;p&gt;The following code samples show how to create workbook and worksheet scoped name ranges by using the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/Range&#34;&gt;Range&lt;/a&gt; class.&lt;/p&gt;
&lt;h4 id=&#34;adding-a-named-range-with-workbook-scope&#34;&gt;Adding a Named Range with Workbook Scope&lt;/h4&gt;
&lt;h4 id=&#34;adding-a-named-range-with-worksheet-scope&#34;&gt;Adding a Named Range with Worksheet Scope&lt;/h4&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Create Workbook (Global) and Worksheet Scoped Named Ranges</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/global/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/global/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Java: Copy and Move Worksheets Within and Between Workbooks</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/copy&#43;and&#43;move&#43;worksheets&#43;within&#43;and&#43;between&#43;workbooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/copy&#43;and&#43;move&#43;worksheets&#43;within&#43;and&#43;between&#43;workbooks/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--copy-and-move-worksheets-within-and-between-workbooks&#34;&gt;Aspose.Cells for Java : Copy and Move Worksheets Within and Between Workbooks&lt;/h1&gt;
&lt;p&gt;Sometimes, you do need a number of worksheets with common formatting and data entry. For example, if you work with quarterly budgets, you might want to create a workbook with sheets that contain the same column headings, row headings, and formulas. There is a way to do this: by creating one sheet and then copying it three times.&lt;/p&gt;
&lt;p&gt;Aspose.Cells supports copying or moving worksheets within or between workbooks. Worksheets including data, formatting, tables, matrices, charts, images and other objects are copied with the highest degree of precision.&lt;/p&gt;
&lt;h3 id=&#34;copying-and-moving-worksheets&#34;&gt;Copying and Moving Worksheets&lt;/h3&gt;
&lt;p&gt;This article explains how to use Aspose.Cells to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/copy+and+move+worksheets+within+and+between+workbooks&#34;&gt;Copy a worksheet within a workbook&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/copy+and+move+worksheets+within+and+between+workbooks&#34;&gt;Move a worksheet within a workbook&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/copy+and+move+worksheets+within+and+between+workbooks&#34;&gt;Copy a worksheet between workbooks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/copy+and+move+worksheets+within+and+between+workbooks&#34;&gt;Move a worksheet between workbooks&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;copying-a-worksheet-within-a-workbook&#34;&gt;Copying a Worksheet within a Workbook&lt;/h4&gt;
&lt;p&gt;The initial steps are the same for all examples.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create two workbooks with some data in Microsoft Excel.&lt;br&gt;
For the purposes of this example, we created two new workbooks in Microsoft Excel and input some data into the worksheets.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;FirstWorkbook.xls (3 worksheets).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SecondWorkbook.xls (1 worksheet).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FirstWorkbook.xls&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276649/5472980.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SecondWorkbook.xls&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276649/5472981.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download and install Aspose.Cells:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aspose.com/community/files/72/java-components/aspose.cells-for-java/default.aspx&#34;&gt;Download Aspose.Cells for Java&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Unzip it on your development computer.&lt;br&gt;
All &lt;a href=&#34;http://www.aspose.com/&#34;&gt;Aspose&lt;/a&gt; components, when installed, work in evaluation mode. The evaluation mode has no time limit and it only injects watermarks into produced documents.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a project:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a project using a Java editor such as Eclipse or create a simple program using a text editor.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add a class path:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Extract the Aspose.Cells.jar and dom4j_1.6.1.jar from Aspose.Cells.zip.&lt;/li&gt;
&lt;li&gt;Set the classpath of project in Eclipse:
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Select your project in Eclipse and click menus &lt;strong&gt;Project&lt;/strong&gt;, then &lt;strong&gt;Properties&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;strong&gt;Java Build Path&lt;/strong&gt; in the left side of thedialog, then select the Libraries tab,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;Add JARs&lt;/strong&gt; or &lt;strong&gt;Add External JARs&lt;/strong&gt; to select Aspose.Cells.jar and dom4j_1.6.1.jar and add them into build paths.&lt;/p&gt;
&lt;p&gt;Or you can set the classpath at runtime in a DOS prompt on Windows.&lt;br&gt;
For example:&lt;/p&gt;
&lt;p&gt;javac -classpath %classpath%;e:\Aspose.Cells.jar; ClassName .javajava -classpath %classpath%;e:\Aspose.Cells.jar; ClassName&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy worksheet within a workbook:&lt;br&gt;
Below is the code used by to accomplish the task. It copies the worksheet Copy within FirstWorkbook.xls.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Executing the codemoves the worksheet named Copy within FirstWorkbook.xls with the new name Last Sheet.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Output file&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276649/5472982.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;moving-a-worksheet-with-in-a-workbook&#34;&gt;Moving a Worksheet with in a Workbook&lt;/h4&gt;
&lt;p&gt;Below is the code used to accomplish the task.&lt;/p&gt;
&lt;p&gt;Executing the code moves the worksheet Move from index 1 to index 2 in FirstWorkbook.xls.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Output file&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276649/5472983.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;copying-a-worksheet-between-workbooks&#34;&gt;Copying a Worksheet between Workbooks&lt;/h4&gt;
&lt;p&gt;Executing the code copies the worksheet Copy to SecondWorkbook.xls with the new name Sheet2.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Output file&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276649/5472984.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;moving-a-worksheet-between-workbooks&#34;&gt;Moving a Worksheet between Workbooks&lt;/h4&gt;
&lt;p&gt;Executing the code moves the move worksheet from FirstWorkbook.xls to SecondWorkbook.xls with the new name Sheet3.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Output FirstWorkbook.xls&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276649/5472985.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Output SecondWorkbook.xls&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276649/5472986.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;This article explains how to copy and move worksheets within and between workbooks using Aspose.Cells.&lt;/p&gt;
&lt;p&gt;Aspose.Cells has benefited from years of research, design and careful tuning. We welcome your queries, comments and suggestions at &lt;a href=&#34;http://www.aspose.com/community/forums/aspose.cells-product-family/19/showforum.aspx&#34;&gt;Aspose.Cells Forum&lt;/a&gt;. We warranty a prompt reply.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Set Background Picture for a Worksheet</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/set&#43;background&#43;picture&#43;for&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/set&#43;background&#43;picture&#43;for&#43;a&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--set-background-picture-for-a-worksheet&#34;&gt;Aspose.Cells for Java : Set Background Picture for a Worksheet&lt;/h1&gt;
&lt;p&gt;You can make a worksheet more appealing by adding a picture as a sheet background. This feature can be quite effective if you have a special corporate graphic that adds a hint of the background without obscuring the data on the sheet. You can set the background picture for a sheet using Aspose.Cells API.&lt;/p&gt;
&lt;h4 id=&#34;setting-sheet-background-in-microsoft-excel&#34;&gt;Setting Sheet Background in Microsoft Excel&lt;/h4&gt;
&lt;p&gt;To set a sheet&amp;rsquo;s background image in Microsoft Excel (for example, Microsoft Excel 2003):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;From the &lt;strong&gt;Format&lt;/strong&gt; menu, select &lt;strong&gt;Sheet&lt;/strong&gt;, and then select the &lt;strong&gt;Background&lt;/strong&gt; option.&lt;/li&gt;
&lt;li&gt;Select a picture to set the sheet&amp;rsquo;s background picture.&lt;br&gt;
&lt;strong&gt;Setting a sheet background&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276650/5472994.jpg&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;setting-sheet-background-with-asposecells&#34;&gt;Setting Sheet Background with Aspose.cells&lt;/h4&gt;
&lt;p&gt;The code below sets a background image using an image from a stream.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Set Worksheet Tab Color</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/set&#43;worksheet&#43;tab&#43;color/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/set&#43;worksheet&#43;tab&#43;color/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--set-worksheet-tab-color&#34;&gt;Aspose.Cells for Java : Set Worksheet Tab Color&lt;/h1&gt;
&lt;p&gt;Aspose.Cells allows you to change the color of individual worksheet tabs to make them prominent from the rest. For example, you can make Expenses red, Sales green, Assets blue, etc.&lt;/p&gt;
&lt;h4 id=&#34;setting-worksheet-tab-color-with-microsoft-excel&#34;&gt;Setting Worksheet Tab Color with Microsoft Excel&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Right-click a tab in the tab-sheet at the bottom of the current worksheet.&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Tab color&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Select a color from the palette.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;The tabs have been colored red, green and blue&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276647/5472999.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;setting-worksheet-tab-color-with-asposecells&#34;&gt;Setting Worksheet Tab Color with Aspose.Cells&lt;/h4&gt;
&lt;p&gt;The sample code below shows how to set tab color with Aspose.Cells.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Insert a Linked Picture from Web Address</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/insert&#43;a&#43;linked&#43;picture&#43;from&#43;web&#43;address/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/insert&#43;a&#43;linked&#43;picture&#43;from&#43;web&#43;address/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--insert-a-linked-picture-from-web-address&#34;&gt;Aspose.Cells for Java : Insert a Linked Picture from Web Address&lt;/h1&gt;
&lt;p&gt;Sometimes you need to insert a picture from the web (http://) into a worksheet. To do so, specify the pictureâ€™s URL and the picture will be downloaded every time the spreadsheet is opened in Microsoft Excel. The image is not physically embedded into the Excel document, but points to a web resource.&lt;/p&gt;
&lt;h3 id=&#34;inserting-a-linked-picture-from-web-address&#34;&gt;Inserting a Linked Picture from Web Address&lt;/h3&gt;
&lt;h4 id=&#34;using-microsoft-excel&#34;&gt;Using Microsoft Excel&lt;/h4&gt;
&lt;p&gt;In Microsoft Excel (for example 2007):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Click the &lt;strong&gt;Insert&lt;/strong&gt; menu and select &lt;strong&gt;Picture&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276648/5473005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Specify the web address for the picture in the Insert Picture dialog.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276648/5473000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The image is inserted.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276648/5473076.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;using-asposecells-for-java&#34;&gt;Using Aspose.Cells for Java&lt;/h4&gt;
&lt;p&gt;Aspose.Cells for Java supports adding a linked image using the method &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/shapecollection#addLinkedPicture(int,%20int,%20int,%20int,%20java.lang.String)&#34;&gt;ShapeCollection.addLinkedPicture(int upperLeftRow, int upperLeftColumn, int height, int width, java.lang.String sourceFullName)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The method returns a &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/Picture&#34;&gt;Picture&lt;/a&gt;Â object.&lt;/p&gt;
&lt;p&gt;The following example shows how to add linked picture from web address to a worksheet.&lt;/p&gt;
&lt;p&gt;After running the code, the generated Excel file contains a linked image on the first worksheet.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The output file&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276648/5473004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Add a Picture to an Excel Comment</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/add&#43;a&#43;picture&#43;to&#43;an&#43;excel&#43;comment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/add&#43;a&#43;picture&#43;to&#43;an&#43;excel&#43;comment/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--add-a-picture-to-an-excel-comment&#34;&gt;Aspose.Cells for Java : Add a Picture to an Excel Comment&lt;/h1&gt;
&lt;p&gt;Microsoft Excel lets users customize the look and feel of spreadsheets to a great extent. It is even possible to add background pictures to comments.&lt;/p&gt;
&lt;p&gt;Comments are added to cells to record comments, anything from the details of how a formula is worked, where a value comes from or questions from reviewers. Adding a background image can be an aesthetic choice, or be used to strengthen branding.&lt;/p&gt;
&lt;h4 id=&#34;microsoft-excel&#34;&gt;Microsoft Excel&lt;/h4&gt;
&lt;p&gt;With Microsoft Excel 2007, it is possible to have an image as the background to a cell comment. In Excel 2007, this is accomplished (supposing the comment has already been added) this way:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Right-click the cell which contains the comment.&lt;/li&gt;
&lt;li&gt;Choose &lt;strong&gt;Show/Hide Comments&lt;/strong&gt; and clear any text from the comment.&lt;/li&gt;
&lt;li&gt;Click on the border of the comment to select it.&lt;/li&gt;
&lt;li&gt;Choose &lt;strong&gt;Format&lt;/strong&gt;, then &lt;strong&gt;Comment&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;On the Colors and Lines tab, click the arrow for &lt;strong&gt;Color&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Fill Effects&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;On the Picture tab, click &lt;strong&gt;Select Picture&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Locate and select the picture&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;asposecells&#34;&gt;Aspose.Cells&lt;/h4&gt;
&lt;p&gt;Aspose.Cells provides this valuable feature.&lt;/p&gt;
&lt;p&gt;The sample code below creates an XLSX file from scratch, and adds a comment with a picture background to cell A1.&lt;/p&gt;
&lt;p&gt;After executing the code, A1 has a comment with a background image.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The output file&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276645/5473085.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;java&#34;&gt;Java&lt;/h4&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Combine Multiple Worksheets into a Single Worksheet</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/combine&#43;multiple&#43;worksheets&#43;into&#43;a&#43;single&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/combine&#43;multiple&#43;worksheets&#43;into&#43;a&#43;single&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--combine-multiple-worksheets-into-a-single-worksheet&#34;&gt;Aspose.Cells for Java : Combine Multiple Worksheets into a Single Worksheet&lt;/h1&gt;
&lt;p&gt;Sometimes, you need to combine multiple worksheets into a single worksheet. This can easily be achieved using Aspose.Cells API. This article will show you a code example that reads a source workbook and combines the data of all source worksheets into a single worksheet inside a destination workbook.&lt;/p&gt;
&lt;h3 id=&#34;combining-worksheets&#34;&gt;Combining Worksheets&lt;/h3&gt;
&lt;p&gt;The sample below uses the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/range#copy(com.aspose.cells.Range)&#34;&gt;Range.copy()&lt;/a&gt;Â method to copy all source worksheets into a single sheet inside a destination workbook.&lt;/p&gt;
&lt;h4 id=&#34;source-workbook&#34;&gt;Source Workbook&lt;/h4&gt;
&lt;p&gt;You can use any source workbook. For this example, we are using a source workbook which has three worksheets.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Worksheet 1&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276646/5473081.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Worksheet 2&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276646/5473080.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Worksheet 3&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276646/5473092.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;output-workbook&#34;&gt;Output Workbook&lt;/h4&gt;
&lt;p&gt;Running the following code provides a workbook with a single worksheet containing the data of all three worksheets.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The output worksheet now contains the data of all 3 source worksheets&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276646/5473093.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;download-source-workbook-and-output-workbook&#34;&gt;Download Source Workbook and Output Workbook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/java/attachments/5276646/5473078.xlsx&#34;&gt;Source Workbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/java/attachments/5276646/5473079.xlsx&#34;&gt;Output Workbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;code-example&#34;&gt;Code Example&lt;/h4&gt;
&lt;p&gt;The following code snippet shows how to combine multiple worksheets into a single worksheet.&lt;/p&gt;
&lt;h3 id=&#34;additional-resources&#34;&gt;Additional Resources&lt;/h3&gt;
&lt;p&gt;You may find the &lt;a href=&#34;https://docs2.aspose.com/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/combine+multiple+workbooks+into+a+single+workbook&#34;&gt;Combine Multiple Workbooks into a Single Workbook&lt;/a&gt; article useful for more information.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Combine Multiple Workbooks into a Single Workbook</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/combine&#43;multiple&#43;workbooks&#43;into&#43;a&#43;single&#43;workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/combine&#43;multiple&#43;workbooks&#43;into&#43;a&#43;single&#43;workbook/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--combine-multiple-workbooks-into-a-single-workbook&#34;&gt;Aspose.Cells for Java : Combine Multiple Workbooks into a Single Workbook&lt;/h1&gt;
&lt;p&gt;Sometimes, you need to combine workbooks with various content like images, charts, and data into a single workbook. Aspose.Cells supports this feature. This article shows how to create a simple application to combine workbooks with a few, simple lines of code using Aspose.Cells.&lt;/p&gt;
&lt;h3 id=&#34;combining-workbooks&#34;&gt;Combining Workbooks&lt;/h3&gt;
&lt;p&gt;The example code combines two workbooks into a single workbook using Aspose.Cells for Java. The code loads the source workbooks, uses the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/workbook#combine(com.aspose.cells.Workbook)&#34;&gt;Workbook.combine()&lt;/a&gt;Â method to combine them and saves the output workbook.&lt;/p&gt;
&lt;h4 id=&#34;source-workbooks&#34;&gt;Source Workbooks&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/java/attachments/5276659/5473097.xlsx&#34;&gt;charts.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/java/attachments/5276659/5473096.xlsx&#34;&gt;picture.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;output-workbooks&#34;&gt;Output Workbooks&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/java/attachments/5276659/5473095.xlsx&#34;&gt;combined.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h4&gt;
&lt;p&gt;Below are screenshots of the source and output workbooks.&lt;/p&gt;
&lt;p&gt;You can use any source workbooks. These images are just for illustration purposes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The first worksheet of the charts workbook - stacked&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276659/5473100.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Second worksheet of charts workbook - line&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276659/5473099.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;First worksheet of the picture workbook - picture&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276659/5473098.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;All three worksheets in the combined workbook - stacked, line, picture&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276659/5473101.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The following code snippet shows how to combine multiple workbooks into a single workbook.&lt;/p&gt;
&lt;h3 id=&#34;additional-resources&#34;&gt;Additional Resources&lt;/h3&gt;
&lt;p&gt;You may find the &lt;a href=&#34;https://docs2.aspose.com/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/combine+multiple+worksheets+into+a+single+worksheet&#34;&gt;Combine Multiple Worksheets into a Single Worksheet&lt;/a&gt; article useful for more information.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: How to Detect a File Format and Check if the File is Encrypted</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/how&#43;to&#43;detect&#43;a&#43;file&#43;format&#43;and&#43;check&#43;if&#43;the&#43;file&#43;is&#43;encrypted/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/how&#43;to&#43;detect&#43;a&#43;file&#43;format&#43;and&#43;check&#43;if&#43;the&#43;file&#43;is&#43;encrypted/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--how-to-detect-a-file-format-and-check-if-the-file-is-encrypted&#34;&gt;Aspose.Cells for Java : How to Detect a File Format and Check if the File is Encrypted&lt;/h1&gt;
&lt;p&gt;Sometimes you need to detect a file&amp;rsquo;s format before opening it because the file extension does not guarantee that the file content is appropriate. The file might be encrypted (a password-protected file) so it can&amp;rsquo;t be read it directly, or we should not read it. Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/fileformatutil#detectFileFormat(java.io.InputStream)&#34;&gt;FileFormatUtil.detectFileFormat()&lt;/a&gt; static method and some relevant APIs which you can use to process documents.&lt;/p&gt;
&lt;h4 id=&#34;example&#34;&gt;Example&lt;/h4&gt;
&lt;p&gt;The following sample code illustrates how to detect a file format (using the file path) and check its extension. You can also determine whether the file is encrypted.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Show Formulas instead of Values in a Worksheet</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/show&#43;formulas&#43;instead&#43;of&#43;values&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/show&#43;formulas&#43;instead&#43;of&#43;values&#43;in&#43;a&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--show-formulas-instead-of-values-in-a-worksheet&#34;&gt;Aspose.Cells for Java : Show Formulas instead of Values in a Worksheet&lt;/h1&gt;
&lt;p&gt;It is possible to show formulas instead of calculated values in Microsoft Excel using t*Show Formulas* option from the &lt;strong&gt;Formulas&lt;/strong&gt; ribbon. When formulas are shown, Microsoft Excel displays formulas in the worksheet. You can achieve the same thing using Aspose.Cells.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides aÂ &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/worksheet#ShowFormulas&#34;&gt;Worksheet.setShowFormulas()&lt;/a&gt;Â property. Set this to **trueÂ **to set Microsoft Excel to display formulas.&lt;/p&gt;
&lt;p&gt;The following image shows the worksheet which has a formula in cell A3: &lt;code&gt;=Sum(A1:A2)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Worksheet with formula in cell A3&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276657/5473040.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The following image shows the formula instead of the calculated value, enabled by setting the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/worksheet#ShowFormulas&#34;&gt;Worksheet.setShowFormulas()&lt;/a&gt;Â property to &lt;strong&gt;true&lt;/strong&gt; with Aspose.Cells.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Worksheet now shows formula instead of the calculated value&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276657/5473041.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Optimizing Memory Usage while Working with Big Files having Large Datasets</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/optimizing&#43;memory&#43;usage&#43;while&#43;working&#43;with&#43;big&#43;files&#43;having&#43;large&#43;datasets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/optimizing&#43;memory&#43;usage&#43;while&#43;working&#43;with&#43;big&#43;files&#43;having&#43;large&#43;datasets/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--optimizing-memory-usage-while-working-with-big-files-having-large-datasets&#34;&gt;Aspose.Cells for Java : Optimizing Memory Usage while Working with Big Files having Large Datasets&lt;/h1&gt;
&lt;p&gt;When building a workbook with large data sets, or reading a big Microsoft Excel file, the total amount of RAM the process will take is always a concern. There are measures which can be adapted to cope with the challenge. Aspose.Cells provides some relevant options and API calls to lower, reduce and optimize memory use. Also, it can help the process to work more efficiently and run faster.&lt;/p&gt;
&lt;p&gt;Use &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/memorysetting#MEMORY_PREFERENCE&#34;&gt;MemorySetting.MEMORY_PREFERENCE&lt;/a&gt; option to optimize memory used for cells data to decrease the overall memory cost. When building large data set for cells, it can save a certain amount of memory compared to using the default setting &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/memorysetting#NORMAL&#34;&gt;MemorySetting.NORMAL&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;optimizing-memory&#34;&gt;Optimizing Memory&lt;/h2&gt;
&lt;h3 id=&#34;reading-large-excel-files&#34;&gt;Reading Large Excel Files&lt;/h3&gt;
&lt;p&gt;The following example shows how to read a large Microsoft Excel file in optimized mode.&lt;/p&gt;
&lt;h3 id=&#34;writing-large-excel-files&#34;&gt;Writing Large Excel Files&lt;/h3&gt;
&lt;p&gt;The following example shows how to write a large dataset to a worksheet in optimized mode.&lt;/p&gt;
&lt;h2 id=&#34;caution&#34;&gt;Caution&lt;/h2&gt;
&lt;p&gt;The default option, &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/memorysetting#NORMAL&#34;&gt;MemorySetting.NORMAL&lt;/a&gt;Â is applied for all versions. For some situations, such as building a workbook with a large data set for cells, the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/memorysetting#MEMORY_PREFERENCE&#34;&gt;MemorySetting.MEMORY_PREFERENCE&lt;/a&gt;Â option may optimize the memory use and decrease the memory cost for the application. However, this option may degrade performance in some special cases such as follow.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Accessing Cells Randomly and Repeatedly&lt;/strong&gt;: The most efficient sequence for accessing the cells collection is cell by cell in one row, and then row by row. Especially, if you access rows/cells by the Enumerator acquired from &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/Cells&#34;&gt;Cells&lt;/a&gt;, &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/RowCollection&#34;&gt;RowCollection&lt;/a&gt;Â and &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/Row&#34;&gt;Row&lt;/a&gt;, the performance would be maximized with &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/memorysetting#MEMORY_PREFERENCE&#34;&gt;MemorySetting.MEMORY_PREFERENCE&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inserting &amp;amp; Deleting Cells &amp;amp; Rows&lt;/strong&gt;: Please note that if there are lots of insert/delete operations for Cells/Rows, the performance degradation will be notable for &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/memorysetting#MEMORY_PREFERENCE&#34;&gt;MemorySetting.MEMORY_PREFERENCE&lt;/a&gt;Â mode as compared to the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/memorysetting#NORMAL&#34;&gt;MemorySetting.NORMAL&lt;/a&gt;Â mode.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Operating on Different Cell Types&lt;/strong&gt;: If most of the cells contain string values or formulas, the memory cost will be the same as &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/memorysetting#NORMAL&#34;&gt;MemorySetting.NORMAL&lt;/a&gt;Â mode but if there are lots of empty cells, or cell values are numeric, bool and so on, the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/memorysetting#MEMORY_PREFERENCE&#34;&gt;MemorySetting.MEMORY_PREFERENCE&lt;/a&gt;Â option will give better performance.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Create Manipulate or Remove Scenarios from Worksheets</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/create&#43;manipulate&#43;or&#43;remove&#43;scenarios&#43;from&#43;worksheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/create&#43;manipulate&#43;or&#43;remove&#43;scenarios&#43;from&#43;worksheets/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--create-manipulate-or-remove-scenarios-from-worksheets&#34;&gt;Aspose.Cells for Java : Create, Manipulate or Remove Scenarios from Worksheets&lt;/h1&gt;
&lt;p&gt;Sometimes, you need to create, manipulate or delete scenarios in spreadsheets. A scenario is a named what-if model that includes variable input cells linked together by one or more formulas. Before creating a scenario, design a worksheet so that it contains at least one formula that depends on cells into which different values can be inserted. The following example shows how to create and remove scenarios from a worksheet using the Aspose.Cells APIs.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides some useful classes, for example &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/ScenarioCollection&#34;&gt;ScenarioCollection&lt;/a&gt;, &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/Scenario&#34;&gt;Scenario&lt;/a&gt;, &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/ScenarioInputCellCollection&#34;&gt;ScenarioInputCellCollection&lt;/a&gt;Â and &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/ScenarioInputCell&#34;&gt;ScenarioInputCell&lt;/a&gt;. It also provides the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/worksheet#Scenarios&#34;&gt;Worksheet.Scenarios&lt;/a&gt;Â property. The sample code below opens an XLSX Excel file (that contains some scenarios) and removes an existing scenario from the worksheet. It also adds a new scenario before saving the Excel file. It uses a very simple template file that contains a scenario.&lt;/p&gt;
&lt;p&gt;After executing the code, an existing scenario is removed and a new scenario is added to the worksheet.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The output file&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276655/5473052.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Setting Formula Calculation Mode of Workbook</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/setting&#43;formula&#43;calculation&#43;mode&#43;of&#43;workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/setting&#43;formula&#43;calculation&#43;mode&#43;of&#43;workbook/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--setting-formula-calculation-mode-of-workbook&#34;&gt;Aspose.Cells for Java : Setting Formula Calculation Mode of Workbook&lt;/h1&gt;
&lt;p&gt;Microsoft Excel allows you to set the formula calculation mode, that is, the way formulas are calculated. There are three possible values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Automatic - recalculate whenever something is changed, and every time a workbook is opened.&lt;/li&gt;
&lt;li&gt;Automatic except for data tables - recalculate whenever something is changed, but leaving out data tables.&lt;/li&gt;
&lt;li&gt;Manual - recalculate only when the user explicitly requests it by pressing F9 or CTRL+ALT+F9, or when the workbook is saved.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To set the formula calculation mode in Microsoft Excel:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select &lt;strong&gt;Formulas&lt;/strong&gt; and then &lt;strong&gt;Calculation Options&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Select one of the options.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Aspose.Cells also allows you to set the &lt;strong&gt;Formula Calculation Mode&lt;/strong&gt; using the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/workbooksettings#CalcMode&#34;&gt;Workbook.getSettings().setCalcMode()&lt;/a&gt;Â property. You can assign it the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/CalcModeType&#34;&gt;CalcModeType&lt;/a&gt;Â enumeration which has one of the following values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/calcmodetype#AUTOMATIC&#34;&gt;CalcModeType.AUTOMATIC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/calcmodetype#AUTOMATIC_EXCEPT_TABLE&#34;&gt;CalcModeType.AUTOMATIC_EXCEPT_TABLE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/calcmodetype#MANUAL&#34;&gt;CalcModeType.MANUAL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following sample code first creates a workbook, then it sets the formula calculation mode to &lt;strong&gt;Manual&lt;/strong&gt; and saves the workbook as output Excel file on disk.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The output file. Note the formula calculation mode.&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276656/5473046.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Reading CSV File with Multiple Encodings</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/reading&#43;csv&#43;file&#43;with&#43;multiple&#43;encodings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/reading&#43;csv&#43;file&#43;with&#43;multiple&#43;encodings/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--reading-csv-file-with-multiple-encodings&#34;&gt;Aspose.Cells for Java : Reading CSV File with Multiple Encodings&lt;/h1&gt;
&lt;p&gt;Sometime, your CSV file contains multiple Encodings (Unicode, ANSI, UTF8, UTF7 etc). Aspose.Cells allows you to load such CSV files and converting them into other formats, for example PDF or XLSX.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides the &lt;code&gt;TxtLoadOptions.setMultiEncoded()&lt;/code&gt; method, which you need to set to &lt;strong&gt;true&lt;/strong&gt; to load your CSV file with multiple encodings properly.&lt;/p&gt;
&lt;p&gt;The following screenshot shows a sample CSV file which contains two lines. The first line is in &lt;strong&gt;ANSI&lt;/strong&gt; encoding and the second line is in &lt;strong&gt;Unicode&lt;/strong&gt; encoding&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Input file&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276653/5473048.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The following screenshot shows the XLSX file converted from the above CSV file without setting the &lt;code&gt;TxtLoadOptions.setMultiEncoded()&lt;/code&gt; method to true. As you can see, the Unicode text was not converted properly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Output file 1: no accommodation made for multiple encoding&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276653/5473049.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The following screenshot shows the XSLX file converted from the above CSV file after setting the &lt;code&gt;TxtLoadOptions.setMultiEncoded()&lt;/code&gt; method to true. As you can see, the Unicode text is now converted properly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Output file 2: IsMultiEncoded is set to true&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276653/5473059.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Below is the sample code that converts the above CSV file into XLSX format properly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;String filePath = &amp;ldquo;F:\\Downloads\\MutliEncoded.csv&amp;rdquo;;//Set Multi Encoded Property to TrueTxtLoadOptions options = new TxtLoadOptions();options.setMultiEncoded(true);//Load the CSV file into WorkbookWorkbook workbook = new Workbook(filePath, options);//Save it in XLSX formatworkbook.save(filePath + &amp;ldquo;.out.xlsx&amp;rdquo;, SaveFormat.XLSX);&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Get the Version Number of the Application that Created the Excel Document</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/get&#43;the&#43;version&#43;number&#43;of&#43;the&#43;application&#43;that&#43;created&#43;the&#43;excel&#43;document/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/get&#43;the&#43;version&#43;number&#43;of&#43;the&#43;application&#43;that&#43;created&#43;the&#43;excel&#43;document/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--get-the-version-number-of-the-application-that-created-the-excel-document&#34;&gt;Aspose.Cells for Java : Get the Version Number of the Application that Created the Excel Document&lt;/h1&gt;
&lt;p&gt;Often you need to know the version number of the application that created a Microsoft Excel document. Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/builtindocumentpropertycollection#Version&#34;&gt;Workbook.getBuiltInDocumentProperties().getVersion()&lt;/a&gt; property for this purpose.&lt;/p&gt;
&lt;p&gt;The following sample code demonstrates the use of the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/builtindocumentpropertycollection#Version&#34;&gt;Workbook.getBuiltInDocumentProperties().getVersion()&lt;/a&gt;Â property. It loads Excel files created with Microsoft Excel 2003, 2007, 2010 and 2013 and prints the version number of the application that created these Excel documents.&lt;/p&gt;
&lt;p&gt;For your reference, below is the console output the sample code creates.&lt;/p&gt;
&lt;p&gt;Excel 2003 XLS Version: 726502Excel 2007 XLS Version: 786432Excel 2010 XLS Version: 917504Excel 2013 XLS Version: 983040Excel 2007 XLSX Version: 12.0000Excel 2010 XLSX Version: 14.0300Excel 2013 XLSX Version: 15.0300&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: How to set AutoRecover property of Workbook</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/how&#43;to&#43;set&#43;autorecover&#43;property&#43;of&#43;workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/how&#43;to&#43;set&#43;autorecover&#43;property&#43;of&#43;workbook/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--how-to-set-autorecover-property-of-workbook&#34;&gt;Aspose.Cells for Java : How to set AutoRecover property of Workbook&lt;/h1&gt;
&lt;p&gt;You can use Aspose.Cells to set AutoRecover property of workbook. The default value of this property is &lt;strong&gt;true&lt;/strong&gt;. When you set it &lt;strong&gt;false&lt;/strong&gt; on a workbook, Microsoft Excel disables Autorecover (Autosave) on that Excel file.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/workbooksettings#AutoRecover&#34;&gt;Workbook.getSettings().setAutoRecover()&lt;/a&gt; property to enable or disable this option.&lt;/p&gt;
&lt;h4 id=&#34;example&#34;&gt;Example&lt;/h4&gt;
&lt;p&gt;The following code explains how to use &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/workbooksettings#AutoRecover&#34;&gt;Workbook.getSettings().setAutoRecover()&lt;/a&gt;Â property of the workbook. The code first reads the default value of this property which is &lt;strong&gt;true&lt;/strong&gt;, then it sets it as &lt;strong&gt;false&lt;/strong&gt; and saves the workbook. Then it reads the workbook again and reads the value of this property which is false at this time.&lt;/p&gt;
&lt;h4 id=&#34;output&#34;&gt;Output&lt;/h4&gt;
&lt;p&gt;Here is the console output of the above sample code.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_2209007f03&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_2209007f03&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;AutoRecover&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;AutoRecover&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
    <item>
      <title>Java: Save ODS file in ODF 1.1 and 1.2 Specifications</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/save&#43;ods&#43;file&#43;in&#43;odf&#43;1.1&#43;and&#43;1.2&#43;specifications/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/save&#43;ods&#43;file&#43;in&#43;odf&#43;1.1&#43;and&#43;1.2&#43;specifications/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--save-ods-file-in-odf-11-and-12-specifications&#34;&gt;Aspose.Cells for Java : Save ODS file in ODF 1.1 and 1.2 Specifications&lt;/h1&gt;
&lt;p&gt;Aspose.Cells supports saving (&lt;strong&gt;OpenDocument Spreadsheet&lt;/strong&gt;) ODS file in (&lt;strong&gt;OpenDocument Format&lt;/strong&gt;) ODF 1.1 and ODF 1.2 specifications. Aspose.Cells has added &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/odssaveoptions#IsStrictSchema11&#34;&gt;OdsSaveOptions.setStrictSchema11()&lt;/a&gt; property to use ODF 1.1 specification for saving ODS files. The default value of this property is &lt;strong&gt;false&lt;/strong&gt;, so ODS file saved without this special settings will use the 1.2 specification.&lt;/p&gt;
&lt;p&gt;The sample code below creates the workbook object, adds some value in cell A1 of the first worksheet and then saves the ODS file in ODF 1.1 and 1.2 specifications. By default, ODS file is saved in ODF 1.2 specification.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Create Signature Line in an Excel Workbook using Aspose.Cells</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/create&#43;signature&#43;line&#43;in&#43;an&#43;excel&#43;workbook&#43;using&#43;aspose.cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/create&#43;signature&#43;line&#43;in&#43;an&#43;excel&#43;workbook&#43;using&#43;aspose.cells/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--create-signature-line-in-an-excel-workbook-using-asposecells&#34;&gt;Aspose.Cells for Java : Create Signature Line in an Excel Workbook using Aspose.Cells&lt;/h1&gt;
&lt;p&gt;Microsoft Excel provides a feature to add &lt;strong&gt;Signature Line&lt;/strong&gt; in Excel workbooks. You can add a Signature Line by clicking the &lt;strong&gt;Insert&lt;/strong&gt; Tab and then selecting &lt;strong&gt;Signature Line&lt;/strong&gt; from the &lt;strong&gt;Text&lt;/strong&gt; group.&lt;/p&gt;
&lt;p&gt;Aspose.Cells also provides this feature and has exposed the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/picture#SignatureLine&#34;&gt;Picture.setSignatureLine()&lt;/a&gt; property for this purpose. This article will explain how to use this property to add a Signature Line using Aspose.Cells.&lt;/p&gt;
&lt;h4 id=&#34;create-signature-line-in-an-excel-workbook-using-asposecells&#34;&gt;Create Signature Line in an Excel Workbook using Aspose.Cells&lt;/h4&gt;
&lt;p&gt;The following sample code adds a Signature Line using &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/picture#SignatureLine&#34;&gt;Picture.setSignatureLine()&lt;/a&gt;Â property and saves the workbook. The screenshot shows how the output workbook looks like in Microsoft Excel.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276700/5473055.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Check Password to modify using Aspose.Cells</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/check&#43;password&#43;to&#43;modify&#43;using&#43;aspose.cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/check&#43;password&#43;to&#43;modify&#43;using&#43;aspose.cells/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--check-password-to-modify-using-asposecells&#34;&gt;Aspose.Cells for Java : Check Password to modify using Aspose.Cells&lt;/h1&gt;
&lt;p&gt;You can assign a &lt;strong&gt;Password to open&lt;/strong&gt; and a &lt;strong&gt;Password to modify&lt;/strong&gt; while creating your workbooks in Microsoft Excel. Please see this screenshot which shows the interface Microsoft Excel provides to specify these passwords.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276699/5473056.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Sometimes, you need to check if the given password matches with the &lt;strong&gt;Password to modify&lt;/strong&gt; programmatically. Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/writeprotection#validatePassword(java.lang.String)&#34;&gt;workbook.getSettings().getWriteProtection().validatePassword()&lt;/a&gt; method which you can use to check if the given Password to modify is correct or not.&lt;/p&gt;
&lt;h4 id=&#34;check-password-to-modify-using-asposecells&#34;&gt;Check Password to modify using Aspose.Cells&lt;/h4&gt;
&lt;p&gt;The following sample codes load the &lt;a href=&#34;https://docs2.aspose.com/cells/java/attachments/5276699/5473057.xlsx&#34;&gt;source Excel&lt;/a&gt; file. It has a Password to open as 1234 and Password to modify as 5678. The code first checks if 567 is correct Password to modify and it returns false and then it checks if 5678 is Password to modify and it returns true.&lt;/p&gt;
&lt;h4 id=&#34;console-output&#34;&gt;Console Output&lt;/h4&gt;
&lt;p&gt;Here is the Console Output of the above sample code after loading the &lt;a href=&#34;https://docs2.aspose.com/cells/java/attachments/5276699/5473057.xlsx&#34;&gt;source Excel&lt;/a&gt; file.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_07fbc7ca13&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_07fbc7ca13&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;Is&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;567&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;correct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Password&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;modify&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Is&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5678&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;correct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Password&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;modify&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
    <item>
      <title>Java: Adding Custom Properties visible inside Document Information Panel</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/adding&#43;custom&#43;properties&#43;visible&#43;inside&#43;document&#43;information&#43;panel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/adding&#43;custom&#43;properties&#43;visible&#43;inside&#43;document&#43;information&#43;panel/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--adding-custom-properties-visible-inside-document-information-panel&#34;&gt;Aspose.Cells for Java : Adding Custom Properties visible inside Document Information Panel&lt;/h1&gt;
&lt;p&gt;Aspose.Cells can be used to add custom properties inside the workbook object which are visible inside the Document Information Panel. You can open the Document Information Panel in Microsoft Excel using &lt;code&gt;File &amp;gt; Info &amp;gt; Properties &amp;gt; Show Document Panel&lt;/code&gt; menu commands.&lt;/p&gt;
&lt;p&gt;Please use &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/contenttypepropertycollection#add(java.lang.Object)&#34;&gt;Workbook.getContentTypeProperties().add()&lt;/a&gt; method to add a custom property which will be visible in Document Information Panel&lt;/p&gt;
&lt;h4 id=&#34;example&#34;&gt;Example&lt;/h4&gt;
&lt;p&gt;The following sample code adds two custom properties. The first property is without any type and the second property has a type as DateTime. Once, you will open the output Excel file generated by this code, you will see these two properties inside the Document Information Panel.&lt;/p&gt;
&lt;h4 id=&#34;related-article&#34;&gt;Related Article&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/java/developerguide/technicalarticles/using+custom+xml+parts+in+aspose.cells&#34;&gt;Using Custom XML Parts in Aspose.Cells&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Determining if the License is loaded successfully</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/determining&#43;if&#43;the&#43;license&#43;is&#43;loaded&#43;successfully/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/determining&#43;if&#43;the&#43;license&#43;is&#43;loaded&#43;successfully/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--determining-if-the-license-is-loaded-successfully&#34;&gt;Aspose.Cells for Java : Determining if the License is loaded successfully&lt;/h1&gt;
&lt;p&gt;Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/workbook#IsLicensed&#34;&gt;Workbook.isLicensed()&lt;/a&gt; property which you can use to determine if the license is loaded successfully or not. If you call this method before setting the license, it will return false and if you will call this method after setting the license, it will return true indicating that license has been loaded successfully.&lt;/p&gt;
&lt;h4 id=&#34;determining-if-the-license-is-loaded-successfully&#34;&gt;Determining if the License is loaded successfully&lt;/h4&gt;
&lt;p&gt;The following code accesses the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/workbook#IsLicensed&#34;&gt;Workbook.isLicensed()&lt;/a&gt;Â method before setting a license and it returns false. Then it loads the license and accesses the property again which now returns true.&lt;/p&gt;
&lt;h4 id=&#34;console-output&#34;&gt;Console Output&lt;/h4&gt;
&lt;p&gt;Here is the console output of the above sample code&lt;/p&gt;
&lt;p&gt;falsetrue&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Activating Sheets and Activating a Cell in Worksheet</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/activating&#43;sheets&#43;and&#43;activating&#43;a&#43;cell&#43;in&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/activating&#43;sheets&#43;and&#43;activating&#43;a&#43;cell&#43;in&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--activating-sheets-and-activating-a-cell-in-worksheet&#34;&gt;Aspose.Cells for Java : Activating Sheets and Activating a Cell in Worksheet&lt;/h1&gt;
&lt;p&gt;Sometimes, you need a specific worksheet to be active and displayed when a user opens a Microsoft Excel file in Excel. Similarly, you might want to activate a specific cell and set the scrollbars to show the active cell. Aspose.Cells is capable of doing all these tasks as demonstrated below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An &lt;strong&gt;active sheet&lt;/strong&gt; is a sheet you&amp;rsquo;re working on: the active sheet&amp;rsquo;s name on the tab is bold by default.&lt;/li&gt;
&lt;li&gt;An &lt;strong&gt;active cell&lt;/strong&gt; is a selected cell, the cell into which data is entered when you begin typing. Only one cell is active at a time. The active cell is highlighted by a heavy border.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;activating-sheets-and-activating-a-cell&#34;&gt;Activating Sheets and Activating a Cell&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides specific API calls for activating a sheet and a cell. For Example, theÂ &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/worksheetcollection#ActiveSheetIndex&#34;&gt;WorksheetCollection.ActiveSheetIndex&lt;/a&gt;Â property is useful for setting the active sheet in a workbook. Similarly, theÂ &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/worksheet#ActiveCell&#34;&gt;Worksheet.ActiveCell&lt;/a&gt;Â property can be used to set and get an active cell in the worksheet.&lt;/p&gt;
&lt;p&gt;To make sure that the horizontal or vertical scrollbars are at the row and column index position you want to show specific data, use theÂ &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/worksheet#FirstVisibleRow&#34;&gt;Worksheet.FirstVisibleRow&lt;/a&gt;Â andÂ &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/worksheet#FirstVisibleColumn&#34;&gt;Worksheet.FirstVisibleColumn&lt;/a&gt;Â properties.&lt;/p&gt;
&lt;p&gt;The following example shows how to activate a worksheet and make an active cell in it. The following output is generated when executing the code. The scrollbars are scrolled to make the 2nd row and 2nd column as their first visible row and column.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setting B2 cell as an active cell&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276695/5473069.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In evaluation mode, that is; without setting a valid license, the active worksheet will always be the one containing the evaluation watermark. This behavior can only be overridden by setting the license at the start of the application.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Load Specific Worksheets in a Workbook</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/load&#43;specific&#43;worksheets&#43;in&#43;a&#43;workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/load&#43;specific&#43;worksheets&#43;in&#43;a&#43;workbook/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--load-specific-worksheets-in-a-workbook&#34;&gt;Aspose.Cells for Java : Load Specific Worksheets in a Workbook&lt;/h1&gt;
&lt;p&gt;By default, Aspose.Cells loads the whole spreadsheet into memory. It is possible to only load specific sheets. This can improve performance and consume less memory. This approach is useful when working with large workbook containing several worksheets.&lt;/p&gt;
&lt;h3 id=&#34;load-specific-worksheets-in-a-workbook&#34;&gt;Load Specific Worksheets in a Workbook&lt;/h3&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Insert Web Image from a URL into an Excel Worksheet</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/insert&#43;web&#43;image&#43;from&#43;a&#43;url&#43;into&#43;an&#43;excel&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/insert&#43;web&#43;image&#43;from&#43;a&#43;url&#43;into&#43;an&#43;excel&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--insert-web-image-from-a-url-into-an-excel-worksheet&#34;&gt;Aspose.Cells for Java : Insert Web Image from a URL into an Excel Worksheet&lt;/h1&gt;
&lt;p&gt;This article demonstrates how you can insert a web image directly into a &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/Worksheet&#34;&gt;Worksheet&lt;/a&gt;. The code snippet provided below uses the &lt;code&gt;java.net&lt;/code&gt; &amp;amp; &lt;code&gt;java.io&lt;/code&gt; namespaces along with &lt;code&gt;com.aspose.cells&lt;/code&gt; to achieve the desired result.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Hiding the Display of Zero Values in the Worksheet</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/hiding&#43;the&#43;display&#43;of&#43;zero&#43;values&#43;in&#43;the&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/hiding&#43;the&#43;display&#43;of&#43;zero&#43;values&#43;in&#43;the&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--hiding-the-display-of-zero-values-in-the-worksheet&#34;&gt;Aspose.Cells for Java : Hiding the Display of Zero Values in the Worksheet&lt;/h1&gt;
&lt;p&gt;Sometimes, you need to hide zero values in a spreadsheet. It might be personal preference, or a formatting standard.&lt;/p&gt;
&lt;p&gt;To hide zero values in a worksheet in Microsoft Excel (for example Microsoft Excel 2003):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;From the &lt;strong&gt;Tools&lt;/strong&gt; menu, select &lt;strong&gt;Options&lt;/strong&gt;, and then select the &lt;strong&gt;View&lt;/strong&gt; tab.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deselect the &lt;strong&gt;Zero values&lt;/strong&gt; option.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hiding zero values in Microsoft Excel&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276708/5473063.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Please see the following sample code that demonstrates how to hide zeros using Aspose.Cells.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Extract OLE Objects from Workbook</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/extract&#43;ole&#43;objects&#43;from&#43;workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/extract&#43;ole&#43;objects&#43;from&#43;workbook/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--extract-ole-objects-from-workbook&#34;&gt;Aspose.Cells for Java : Extract OLE Objects from Workbook&lt;/h1&gt;
&lt;p&gt;Sometimes, you do need to extract OLE objects from a workbook. Aspose.Cells supports extracting and saving those OLE objects as demonstrated in this article.&lt;/p&gt;
&lt;h3 id=&#34;extract-ole-objects-from-a-workbook&#34;&gt;Extract OLE Objects from a Workbook&lt;/h3&gt;
&lt;h4 id=&#34;creating-a-template-workbook&#34;&gt;Creating a Template Workbook&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Created a spreadsheet in Microsoft Excel.&lt;/li&gt;
&lt;li&gt;Add a Microsoft Word document, an Excel workbook and a PDF document as OLE objects on the first worksheet.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;extract-ole-objects&#34;&gt;Extract OLE Objects&lt;/h4&gt;
&lt;p&gt;The code below does the actual work of finding and extracting OLE objects as DOCX, XLSX, PPTX and PDF files.&lt;/p&gt;
&lt;h4 id=&#34;conclusion&#34;&gt;Conclusion:&lt;/h4&gt;
&lt;p&gt;This article shows how to extract OLE objects from a workbook using Aspose.Cells. Hopefully, it will give you some insight that will allow you to use these options in your own scenarios.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Disable Compatibility Checker in Excel</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/disable&#43;compatibility&#43;checker&#43;in&#43;excel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/disable&#43;compatibility&#43;checker&#43;in&#43;excel/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--disable-compatibility-checker-in-excel&#34;&gt;Aspose.Cells for Java : Disable Compatibility Checker in Excel&lt;/h1&gt;
&lt;p&gt;Microsoft Excel&amp;rsquo;s Compatibility Checker flags when saving a file in an earlier file format that saving the sile might cause functionality issues or loss of fidelity. The Compatibility Checker is a feature of Microsoft Office Excel 2007, 2010 &amp;amp; 2013.&lt;/p&gt;
&lt;p&gt;When you save a workbook in a previous version, Excel 97 through Excel 2003, from Excel 2007 or Excel 2010, the Compatibility Checker scans the workbook to see if it contains features that are not supported by the earlier version. To help you make decisions about how to handle compatibility issues, the Compatibility Checker displays dialog boxes with options. It can also be used to create a report on any issues in the workbook, or disable the feature.&lt;/p&gt;
&lt;p&gt;Sometimes, you need to disable the Compatibility Checker for a particular spreadsheet. With Aspose.Cells&amp;rsquo; APIs you can do this dynamically so that the users don&amp;rsquo;t get frustrated or confused by the Compatibility Checker dialog box popping up when they re-save the file in Microsoft Excel manually.&lt;/p&gt;
&lt;h3 id=&#34;using-microsoft-excel&#34;&gt;Using Microsoft Excel&lt;/h3&gt;
&lt;p&gt;To disable the Compatibility Checker in Microsoft Excel (for example Microsoft Excel 2007/2010):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(Excel 2007) On the Office button, click &lt;strong&gt;Prepare&lt;/strong&gt;, then &lt;strong&gt;Run Compatibility Checker&lt;/strong&gt;, and then clear the &lt;strong&gt;Check compatibility when you save this workbook&lt;/strong&gt; option.&lt;/li&gt;
&lt;li&gt;(Excel 2010 &amp;amp; 2013) On the File tab, click &lt;strong&gt;Info&lt;/strong&gt;, then &lt;strong&gt;Check for issues&lt;/strong&gt;, click &lt;strong&gt;Check Compatibility&lt;/strong&gt;, and, finally, clear the &lt;strong&gt;Check compatibility when you save this workbook&lt;/strong&gt; option.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;using-asposecells-apis&#34;&gt;Using Aspose.Cells APIs&lt;/h3&gt;
&lt;p&gt;Set the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/workbooksettings#CheckComptiliblity&#34;&gt;WorkbookSettings.CheckComptiliblity&lt;/a&gt; property to &lt;strong&gt;False&lt;/strong&gt; to disable Microsoft Excel&amp;rsquo;s Compatibility Checker.&lt;/p&gt;
&lt;p&gt;Suppose we have a template XLS file. When a user saves or re-saves it in MS Excel 2007/2010/2013, the Compatibility Checker dialog box is displayed, as shown in the screenshot below.&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/java/attachments/5276702/5473065.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The following code shows how to disable the Compatibility Checker with Aspose.Cells for Java.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Detect if Worksheet is Password Protected</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/detect&#43;if&#43;worksheet&#43;is&#43;password&#43;protected/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/detect&#43;if&#43;worksheet&#43;is&#43;password&#43;protected/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--detect-if-worksheet-is-password-protected&#34;&gt;Aspose.Cells for Java : Detect if Worksheet is Password Protected&lt;/h1&gt;
&lt;p&gt;It is possible to protect the workbooks and worksheets separately. For instance, a spreadsheet may contain one or more worksheets that are password-protected, however, the spreadsheet itself may or may not be protected. Aspose.Cells APIs provide the means to detect if a given worksheet is password protected or not. This article demonstrates the usage of Aspose.Cells for Java API to achieve the same.&lt;/p&gt;
&lt;h3 id=&#34;detect-if-worksheet-is-password-protected&#34;&gt;Detect if Worksheet is Password Protected&lt;/h3&gt;
&lt;p&gt;Aspose.Cells for Java 8.7.0 has exposed theÂ &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/protection#IsProtectedWithPassword&#34;&gt;Protection.isProtectedWithPassword&lt;/a&gt;Â property to detect if a worksheet is password protected or not. Boolean type &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/protection#IsProtectedWithPassword&#34;&gt;Protection.isProtectedWithPassword&lt;/a&gt;Â field returns &lt;strong&gt;true&lt;/strong&gt; if &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/Worksheet&#34;&gt;Worksheet&lt;/a&gt;Â is password protected and &lt;strong&gt;false&lt;/strong&gt; if not.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Verify Password Used to Protect the Worksheet</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/verify&#43;password&#43;used&#43;to&#43;protect&#43;the&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/verify&#43;password&#43;used&#43;to&#43;protect&#43;the&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--verify-password-used-to-protect-the-worksheet&#34;&gt;Aspose.Cells for Java : Verify Password Used to Protect the Worksheet&lt;/h1&gt;
&lt;p&gt;Aspose.Cells APIs have enhanced the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/Protection&#34;&gt;Protection&lt;/a&gt;Â class by introducing some useful properties &amp;amp; methods. One such method is the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/protection#verifyPassword(java.lang.String)&#34;&gt;verifyPassword&lt;/a&gt;Â which allows specifying a password as an instance of &lt;code&gt;String&lt;/code&gt; and verifies if the same password has been used to protect the Worksheet.&lt;/p&gt;
&lt;h3 id=&#34;verify-password-used-to-protect-the-worksheet&#34;&gt;Verify Password Used to Protect the Worksheet&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/protection#verifyPassword(java.lang.String)&#34;&gt;Protection.verifyPassword&lt;/a&gt;Â method returns **trueÂ **if the specified password matches with the password used to protect the given worksheet, **falseÂ **if the specified password does not match. Following piece of code uses the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/protection#verifyPassword(java.lang.String)&#34;&gt;Protection.verifyPassword&lt;/a&gt;Â method in conjunction with &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/protection#IsProtectedWithPassword&#34;&gt;Protection.isProtectedWithPassword&lt;/a&gt;Â property to detect the password protection, and verifies the password.&lt;/p&gt;
&lt;h2 id=&#34;comments&#34;&gt;Comments:&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve read some excellent stuff here. Definitely price bookmarking for revisiting. I surprise how much effort you place to create this type of great informative site. acdbaaefbefkadeb&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/java/images/icons/contenttypes/comment_16.png&#34; alt=&#34;&#34;&gt; Posted by at Feb 11, 2017 07:28&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Get Paper Width and Height from PageSetup of Worksheet</title>
      <link>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/get&#43;paper&#43;width&#43;and&#43;height&#43;from&#43;pagesetup&#43;of&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/java/developerguide/technicalarticles/mngworkbooksandworksheets/get&#43;paper&#43;width&#43;and&#43;height&#43;from&#43;pagesetup&#43;of&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--get-paper-width-and-height-from-pagesetup-of-worksheet&#34;&gt;Aspose.Cells for Java : Get Paper Width and Height from PageSetup of Worksheet&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#get-paper-width-and-height-from-pagesetup-of-worksheet&#34;&gt;Get Paper Width and Height from PageSetup of Worksheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#console-output&#34;&gt;Console Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

Â &lt;/p&gt;
&lt;p&gt;Â &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Sometimes, you need to know the width and height of paper size as it has been set in page setup of the worksheet. Please use the &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/pagesetup#PaperWidth&#34;&gt;PageSetup.PaperWidth&lt;/a&gt;Â and &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/pagesetup#PaperHeight&#34;&gt;PageSetup.PaperHeight&lt;/a&gt;Â properties for this purpose.&lt;/p&gt;
&lt;h2 id=&#34;get-paper-width-and-height-from-pagesetup-of-worksheet&#34;&gt;Get Paper Width and Height from PageSetup of Worksheet&lt;/h2&gt;
&lt;p&gt;The following sample code explains the usage of &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/pagesetup#PaperWidth&#34;&gt;PageSetup.PaperWidth&lt;/a&gt;Â and &lt;a href=&#34;https://apireference.aspose.com/java/cells/com.aspose.cells/pagesetup#PaperHeight&#34;&gt;PageSetup.PaperHeight&lt;/a&gt;Â properties. It first changes the paper size to &lt;code&gt;A2&lt;/code&gt; and then finds the width and height of the paper, then it changes it to &lt;code&gt;A3&lt;/code&gt;, &lt;code&gt;A4&lt;/code&gt;, &lt;code&gt;Letter&lt;/code&gt; and finds the width and height of paper respectively.&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;
&lt;h2 id=&#34;console-output&#34;&gt;Console Output&lt;/h2&gt;
&lt;p&gt;Here is the console output of the above sample code.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_e12a774bbd&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_e12a774bbd&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;PaperA2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16.54&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x23&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;39&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;PaperA3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11.69&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x16&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;54&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;PaperA4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8.27&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x11&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;69&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;PaperLetter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8.5&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x11&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
  </channel>
</rss>
