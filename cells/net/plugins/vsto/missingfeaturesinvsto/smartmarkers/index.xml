<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – Smart Markers in Aspose.Cells</title>
    <link>https://roywangt.github.io/cells/net/plugins/vsto/missingfeaturesinvsto/smartmarkers/</link>
    <description>Recent content in Smart Markers in Aspose.Cells on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://roywangt.github.io/cells/net/plugins/vsto/missingfeaturesinvsto/smartmarkers/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: Grouping Data</title>
      <link>https://roywangt.github.io/cells/net/plugins/vsto/missingfeaturesinvsto/smartmarkers/grouping&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/plugins/vsto/missingfeaturesinvsto/smartmarkers/grouping&#43;data/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--grouping-data&#34;&gt;Aspose.Cells for .NET : Grouping Data&lt;/h1&gt;
&lt;p&gt;In some Excel reports you might need to break the data into groups to make it easier to read and analyze. One of the primary purposes for breaking data into groups is to run calculations (perform summary operations) on each group of records.&lt;/p&gt;
&lt;p&gt;Aspose.Cells smart markers allow you to group your data by field(s) and place summary rows in between data sets or data groups. For example, if grouping data by Customers.CustomerID, you can add a summary record every time the group changes.&lt;/p&gt;
&lt;p&gt;The example code snippets that follow shows how to group data in an Excel report using smart markers.&lt;/p&gt;
&lt;h3 id=&#34;parameters&#34;&gt;Parameters&lt;/h3&gt;
&lt;p&gt;Following are some of the smart marker parameters used for grouping data.&lt;br&gt;
&lt;strong&gt;group:normal/merge/repeat&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We support three types of group that you can choose between.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;normal - The group by field(s) value is not be repeated for the corresponding records in the column; instead they are printed once per data group.&lt;/li&gt;
&lt;li&gt;merge - The same behavior as for the normal parameter, except that it merges the cells in the group by field(s) for each group set.&lt;/li&gt;
&lt;li&gt;repeat - The group by field(s) value is repeated for the corresponding records.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have multiple parameters, separate them with a commas, but no space: parameterA,parameterB,parameterC&lt;/p&gt;
&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;
&lt;p&gt;This example shows some of the grouping parameters in action. It uses the Northwind.mdb Microsoft Access database and extract data from the table named &amp;ldquo;Order Details&amp;rdquo;. We create a designer file called SmartMarker_Designer.xls in Microsoft Excel and put smart markers into various cells in worksheets. The markers are processed to fill the worksheets. The data is placed and organized by a group field.&lt;/p&gt;
&lt;p&gt;The designer file has two worksheets. In the first we put smart markers with grouping parameters as shown in the screenshot below. Three smart markers (with grouping parameters) are placed:&lt;br&gt;
&amp;amp;=Order Details.OrderID(group:merge,skip:1),&lt;br&gt;
&amp;amp;=Order Details.Quantity(subtotal9:Order Details.OrderID), and&lt;br&gt;
&amp;amp;=Order Details.UnitPrice(subtotal9:Order Details.OrderID) go into A5, B5 and C5 respectively.&lt;/p&gt;
&lt;p&gt;string FilePath = @&amp;rdquo;..\..\..\Sample Files\&amp;quot;;string FileName = FilePath + &amp;ldquo;Grouping Data OLE DB.xlsx&amp;rdquo;;//Create a connection object, specify the provider info and set the data source.OleDbConnection con = new OleDbConnection(&amp;ldquo;provider=microsoft.jet.oledb.4.0;data source=~\\..\\..\\..\\Data\\Northwind.mdb&amp;rdquo;);//Open the connection object.con.Open();//Create a command object and specify the SQL query.OleDbCommand cmd = new OleDbCommand(&amp;ldquo;Select * from [Order Details]&amp;rdquo;, con);//Create a data adapter object.OleDbDataAdapter da = new OleDbDataAdapter();//Specify the command.da.SelectCommand = cmd;//Create a dataset object.DataSet ds = new DataSet();//Fill the dataset with the table records.da.Fill(ds, &amp;ldquo;Order Details&amp;rdquo;);//Create a datatable with respect to dataset table.DataTable dt = ds.Tables[&amp;ldquo;Order Details&amp;rdquo;];//Create WorkbookDesigner object.WorkbookDesigner wd = new WorkbookDesigner();//Open the template file (which contains smart markers).wd.Workbook = new Workbook(FileName);//Set the datatable as the data source.wd.SetDataSource(dt);//Process the smart markers to fill the data into the worksheets.wd.Process(true);//Save the excel file.wd.Workbook.Save(FileName);&lt;/p&gt;
&lt;h2 id=&#34;download-sample-code&#34;&gt;Download Sample Code&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://asposecellsopenxml.codeplex.com/releases/view/619160&#34;&gt;Codeplex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-cells/Aspose.Cells-for-.NET/releases/tag/MissingFeaturesOpenXMLExcelv1.1&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.msdn.microsoft.com/AsposeCells-Features-8fba7c3c&#34;&gt;Code.MSDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/asposemarketplace/aspose-for-openxml/downloads/Grouping%20Data%20OLE%20DB%20%28Aspose.Cells%29.zip&#34;&gt;Bitbucket&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Image Markers</title>
      <link>https://roywangt.github.io/cells/net/plugins/vsto/missingfeaturesinvsto/smartmarkers/image&#43;markers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/plugins/vsto/missingfeaturesinvsto/smartmarkers/image&#43;markers/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--image-markers&#34;&gt;Aspose.Cells for .NET : Image Markers&lt;/h1&gt;
&lt;p&gt;Aspose.Cells smart markers support image markers too. This section shows you how to insert pictures using smart markers.&lt;/p&gt;
&lt;h3 id=&#34;image-parameters&#34;&gt;Image Parameters&lt;/h3&gt;
&lt;p&gt;Smart marker parameters for managing images.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Picture:FitToCell&lt;/strong&gt; - Auto-fit the image to the cell’s row height and column width.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Picture:ScaleN&lt;/strong&gt; - Scale height and width to N percent.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Picture:Width:Nin&amp;amp;Height:Nin&lt;/strong&gt; - Render the image N inches high and N inches wide. You can also&lt;br&gt;
sepecify Left and Top positions (in points).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;string FilePath = @&amp;rdquo;..\..\..\Sample Files\&amp;quot;;string FileName = FilePath + &amp;ldquo;Image Markers.xlsx&amp;rdquo;;//Get the image data.byte[] imageData = File.ReadAllBytes(FilePath + &amp;ldquo;Aspose.Cells.png&amp;rdquo;);//Create a datatable.DataTable t = new DataTable(&amp;ldquo;Table1&amp;rdquo;);//Add a column to save pictures.DataColumn dc = t.Columns.Add(&amp;ldquo;Picture&amp;rdquo;);//Set its data type.dc.DataType = typeof(object);//Add a new new record to it.DataRow row = t.NewRow();row[0] = imageData;t.Rows.Add(row);//Add another record (having picture) to it.//imageData = File.ReadAllBytes(FilePath + &amp;ldquo;Desert.jpg&amp;rdquo;);//row = t.NewRow();//row[0] = imageData;//t.Rows.Add(row);//Create WorkbookDesigner object.WorkbookDesigner designer = new WorkbookDesigner();//Open the temple Excel file.designer.Workbook = new Workbook(FileName);//Set the datasource.designer.SetDataSource(t);//Process the markers.designer.Process();//Save the Excel file.designer.Workbook.Save(FileName);&lt;/p&gt;
&lt;h2 id=&#34;download-sample-code&#34;&gt;Download Sample Code&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://asposecellsopenxml.codeplex.com/releases/view/619160&#34;&gt;Codeplex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-cells/Aspose.Cells-for-.NET/releases/tag/MissingFeaturesOpenXMLExcelv1.1&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.msdn.microsoft.com/AsposeCells-Features-8fba7c3c&#34;&gt;Code.MSDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/asposemarketplace/aspose-for-openxml/downloads/Image%20Markers%20%28Aspose.Cells%29.zip&#34;&gt;Bitbucket&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Smart Markers feature</title>
      <link>https://roywangt.github.io/cells/net/plugins/vsto/missingfeaturesinvsto/smartmarkers/smart&#43;markers&#43;feature/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/plugins/vsto/missingfeaturesinvsto/smartmarkers/smart&#43;markers&#43;feature/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--smart-markers-feature&#34;&gt;Aspose.Cells for .NET : Smart Markers feature&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Smart markers&lt;/strong&gt; are used to let Aspose.Cells know what information to place in an Microsoft Excel designer spreadsheet. Smart markers allow you to create templates that contain only specific information and formatting.&lt;/p&gt;
&lt;h3 id=&#34;designer-spreadsheet--smart-markers&#34;&gt;Designer Spreadsheet &amp;amp; Smart Markers&lt;/h3&gt;
&lt;p&gt;Designer spreadsheets are standard Excel files that contain visual formatting, formulas and smart markers. They can contain smart markers that reference one or more data source, such as information from a project and information for related contacts. Smart markers are written into the cells where you want the information.&lt;/p&gt;
&lt;p&gt;All smart markers start with &amp;amp;=. An example of a data marker is &amp;amp;=Party.FullName. If the data marker results in more than one item, for example, a complete row, then the following rows are moved down automatically to make room for all of the new information. Thus sub-totals and totals can be placed on the row immediately after the data marker to make calculations based on the inserted data. To make calculations on the inserted rows, use dynamic formulas.&lt;/p&gt;
&lt;p&gt;Smart markers consist of the &lt;strong&gt;data source&lt;/strong&gt; and &lt;strong&gt;field name&lt;/strong&gt; parts for most information. Special information may also be passed with variables and variable arrays. Variables always fill only one cell whereas variable arrays may fill several. Only use one data marker per cell. Unused smart markers are removed.&lt;/p&gt;
&lt;p&gt;Smart marker may also contain parameters. Parameters allow you to modify how the information will be laid out. They are appended to the end of smart marker in parenthesis as a comma separated list.&lt;/p&gt;
&lt;h3 id=&#34;smart-marker-options&#34;&gt;Smart Marker Options&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&amp;amp;=DataSource.FieldName&lt;/li&gt;
&lt;li&gt;&amp;amp;=Data Source.Field Name&lt;/li&gt;
&lt;li&gt;&amp;amp;=$VariableName&lt;/li&gt;
&lt;li&gt;&amp;amp;=$VariableArray&lt;/li&gt;
&lt;li&gt;&amp;amp;==DynamicFormula&lt;/li&gt;
&lt;li&gt;&amp;amp;=&amp;amp;=RepeatDynamicFormula&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;parameters&#34;&gt;Parameters&lt;/h3&gt;
&lt;p&gt;The following parameters are allowed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;noadd - Do not add extra rows to fit data.&lt;/li&gt;
&lt;li&gt;skip:n - Skip n number of rows for each row of data.&lt;/li&gt;
&lt;li&gt;ascending:n or descending:n - Sort data in smart markers. If n is 1, then the column is the first key of the sorter. The data is sorted after processing the data source. E.g &amp;amp;=Table1.Field3(ascending:1).&lt;/li&gt;
&lt;li&gt;horizontal - Write data left-to-right, instead of top-to-bottom.&lt;/li&gt;
&lt;li&gt;numeric - Convert text to number if possible.Only supported in .NET version.&lt;/li&gt;
&lt;li&gt;shift - Shift down or right, creating extra rows or columns to fit data. The shift parameter works the same way as in Microsoft Excel. For example in MS Excel, when you select a range of cells, right-click and select Insert and specify shift cells down, shift cells right and other options. In short, the shift parameter fills the same function for vertical/normal (top to bottom) or horizontal (left to right) smart markers.&lt;/li&gt;
&lt;li&gt;copystyle - Copy the base cell&amp;rsquo;s style to all the cells in that column.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The parameters &lt;strong&gt;noadd&lt;/strong&gt; and skip can be combined to insert data on alternating rows. Because the template is processed from bottom to top, you should add noadd on the first row to avoid extra rows from being inserted before the alternate row.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Using Anonymous Types or Custom Objects</title>
      <link>https://roywangt.github.io/cells/net/plugins/vsto/missingfeaturesinvsto/smartmarkers/using&#43;anonymous&#43;types&#43;or&#43;custom&#43;objects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/plugins/vsto/missingfeaturesinvsto/smartmarkers/using&#43;anonymous&#43;types&#43;or&#43;custom&#43;objects/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--using-anonymous-types-or-custom-objects&#34;&gt;Aspose.Cells for .NET : Using Anonymous Types or Custom Objects&lt;/h1&gt;
&lt;p&gt;Aspose.Cells also supports anonymous types or custom objects in smart markers. In below example Product class is need to be defined before use.&lt;/p&gt;
&lt;p&gt;string FilePath = @&amp;rdquo;..\..\..\Sample Files\&amp;quot;;string FileName = FilePath + &amp;ldquo;Using Custom Objects.xlsx&amp;rdquo;;//Instantiate the workbookdesigner object.WorkbookDesigner report = new WorkbookDesigner();//Get the first worksheet(default sheet) in the workbook.Aspose.Cells.Worksheet w = report.Workbook.Worksheets[0];//Input some markers to the cells.w.Cells[&amp;ldquo;A1&amp;rdquo;].PutValue(&amp;ldquo;Test&amp;rdquo;);w.Cells[&amp;ldquo;A2&amp;rdquo;].PutValue(&amp;quot;&amp;amp;=MyProduct.Name&amp;rdquo;);w.Cells[&amp;ldquo;B2&amp;rdquo;].PutValue(&amp;quot;&amp;amp;=MyProduct.Age&amp;rdquo;);//Instantiate the list collection based on the custom class.IList&lt;MyProduct&gt; list = new List&lt;MyProduct&gt;();//Provide values for the markers using the custom class object.list.Add(new MyProduct(&amp;ldquo;Simon&amp;rdquo;, 30));list.Add(new MyProduct(&amp;ldquo;Johnson&amp;rdquo;, 33));//Set the data source.report.SetDataSource(&amp;ldquo;MyProduct&amp;rdquo;, list);//Process the markers.report.Process(false);//Save the excel file.report.Workbook.Save(FileName);}}&lt;/p&gt;
&lt;h2 id=&#34;download-sample-code&#34;&gt;Download Sample Code&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://asposecellsopenxml.codeplex.com/releases/view/619160&#34;&gt;Codeplex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-cells/Aspose.Cells-for-.NET/releases/tag/MissingFeaturesOpenXMLExcelv1.1&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.msdn.microsoft.com/AsposeCells-Features-8fba7c3c&#34;&gt;Code.MSDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/asposemarketplace/aspose-for-openxml/downloads/Using%20Custom%20Objects%20%28Aspose.Cells%29.zip&#34;&gt;Bitbucket&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Using Nested Objects</title>
      <link>https://roywangt.github.io/cells/net/plugins/vsto/missingfeaturesinvsto/smartmarkers/using&#43;nested&#43;objects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/plugins/vsto/missingfeaturesinvsto/smartmarkers/using&#43;nested&#43;objects/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--using-nested-objects&#34;&gt;Aspose.Cells for .NET : Using Nested Objects&lt;/h1&gt;
&lt;p&gt;Aspose.Cells supports nested objects in smart markers, the nested objects should be simple.&lt;strong&gt;Individual&lt;/strong&gt; class need to be defined by user for below code.&lt;/p&gt;
&lt;p&gt;We use a simple template file. See the designer spreadsheet that contains some nested smart markers.&lt;/p&gt;
&lt;p&gt;string FilePath = @&amp;rdquo;..\..\..\Sample Files\&amp;quot;;string FileName = FilePath + &amp;ldquo;Using Nested Object.xlsx&amp;rdquo;;//Initialize WorkbookDesigner objectWorkbookDesigner designer = new WorkbookDesigner();//Load the template filedesigner.Workbook = new Workbook(FileName);//Instantiate the List based on the classSystem.Collections.Generic.ICollection&lt;Individual&gt; list = new System.Collections.Generic.List&lt;Individual&gt;();//Create an object for the Individual classIndividual p1 = new Individual(&amp;ldquo;Damian&amp;rdquo;, 30);//Create the relevant Wife class for the Individualp1.Wife = new Wife(&amp;ldquo;Dalya&amp;rdquo;, 28);//Create another object for the Individual classIndividual p2 = new Individual(&amp;ldquo;Mack&amp;rdquo;, 31);//Create the relevant Wife class for the Individualp2.Wife = new Wife(&amp;ldquo;Maaria&amp;rdquo;, 29);//Add the objects to the listlist.Add(p1);list.Add(p2);//Specify the DataSourcedesigner.SetDataSource(&amp;ldquo;Individual&amp;rdquo;, list);//Process the markersdesigner.Process(false);//Save the Excel file.designer.Workbook.Save(FileName);&lt;/p&gt;
&lt;h2 id=&#34;download-sample-code&#34;&gt;Download Sample Code&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://asposecellsopenxml.codeplex.com/releases/view/619160&#34;&gt;Codeplex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-cells/Aspose.Cells-for-.NET/releases/tag/MissingFeaturesOpenXMLExcelv1.1&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.msdn.microsoft.com/AsposeCells-Features-8fba7c3c&#34;&gt;Code.MSDN&lt;/a&gt;* &lt;a href=&#34;https://bitbucket.org/asposemarketplace/aspose-for-openxml/downloads/Using%20Nested%20Object%20%28Aspose.Cells%29.zip&#34;&gt;Bitbucket&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
