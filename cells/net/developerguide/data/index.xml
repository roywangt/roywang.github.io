<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – Data</title>
    <link>https://roywangt.github.io/cells/net/developerguide/data/</link>
    <description>Recent content in Data on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://roywangt.github.io/cells/net/developerguide/data/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: Accessing Cells of a Worksheet</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/accessing&#43;cells&#43;of&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/accessing&#43;cells&#43;of&#43;a&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--accessing-cells-of-a-worksheet&#34;&gt;Aspose.Cells for .NET : Accessing Cells of a Worksheet&lt;/h1&gt;
&lt;p&gt;We know that all worksheets may contain data that is basically stored in cells (with which a worksheet is made up of). A cell is a basic part of a worksheet that is used to construct the whole worksheet as a sequence of rows and columns. Before we try to access data from a worksheet, we would need to get access to its cells. So, in this topic, we will discuss some basic approaches to access worksheet cells at runtime using Aspose.Cells.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#accessing-cells&#34;&gt;Accessing Cells&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#using-cell-name&#34;&gt;Using Cell Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#using-row-&amp;amp;-column-index-of-the-cell&#34;&gt;Using Row &amp;amp; Column Index of the Cell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3 &lt;a href=&#34;#using-cell-index-in-cells-collection&#34;&gt;Using Cell Index in Cells Collection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#accessing-maximum-display-range-of-worksheet&#34;&gt;Accessing Maximum Display Range of Worksheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;accessing-cells&#34;&gt;Accessing Cells&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; that represents an Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheetcollection&#34;&gt;WorksheetCollection&lt;/a&gt; that allows access to each worksheet in the Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection that represents all cells in the worksheet.&lt;/p&gt;
&lt;p&gt;We can use &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection to access cells in a worksheet. Aspose.Cells provides three basic approaches to access cells in a worksheet:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Using the cell name.&lt;/li&gt;
&lt;li&gt;Using a cell&amp;rsquo;s row and column index.&lt;/li&gt;
&lt;li&gt;Using a cell index in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; We have mentioned that the 3rd approach is the fastest and the 1st approach is the slowest one. The performance difference between the approaches is very small so don&amp;rsquo;t worry about performance degradation, whichever approach you use.&lt;/p&gt;
&lt;h3 id=&#34;using-cell-name&#34;&gt;Using Cell Name&lt;/h3&gt;
&lt;p&gt;Developers can access any specific cell by passing its cell name to the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class as an index.&lt;/p&gt;
&lt;p&gt;If you create a blank worksheet at the start, the count of &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection is zero. When you use this approach to access a cell, it will check whether this cell exists in the collection or not. If yes, it returns the cell object in the collection otherwise, it creates a new &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; object, adds the object to the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection and then returns the object. This approach is the easiest way to access the cell if you are familiar with Microsoft Excel but it&amp;rsquo;s the slowest one as compared to other approaches.&lt;/p&gt;
&lt;h3 id=&#34;using-row--column-index-of-the-cell&#34;&gt;Using Row &amp;amp; Column Index of the Cell&lt;/h3&gt;
&lt;p&gt;Developers can access any specific cell by passing the indices of its row and column to the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;This approach works in the same way as that of the first approach.&lt;/p&gt;
&lt;h3 id=&#34;using-cell-index-in-cells-collection&#34;&gt;Using Cell Index in Cells Collection&lt;/h3&gt;
&lt;p&gt;A cell can also be accessed by passing the cell&amp;rsquo;s numeric index to the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection.&lt;/p&gt;
&lt;p&gt;If you use this approach to access cells, an exception can be thrown if the numeric index of the cell is out of range. This approach is the fastest one to access the cells but an important thing to know is that if you use this approach to access a cell object, the numeric index may change after new cells are added to the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection. The cell objects in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection are internally sorted by row and column indices.&lt;/p&gt;
&lt;h2 id=&#34;accessing-maximum-display-range-of-worksheet&#34;&gt;Accessing Maximum Display Range of Worksheet&lt;/h2&gt;
&lt;p&gt;Aspose.Cells allows developers to access a worksheet&amp;rsquo;s maximum display range. The maximum display range - the range of cells between the first and last cell with content - is useful when you need to copy, select, or display the entire contents of a worksheet in an image.&lt;/p&gt;
&lt;p&gt;You can access a worksheet&amp;rsquo;s maximum display range using &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/maxdisplayrange&#34;&gt;Worksheet.Cells.MaxDisplayRange&lt;/a&gt;. The following sample code illustrates how to access the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/maxdisplayrange&#34;&gt;MaxDisplayRange&lt;/a&gt; property.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Add and Retrieve Data</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/add&#43;and&#43;retrieve&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/add&#43;and&#43;retrieve&#43;data/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--add-and-retrieve-data&#34;&gt;Aspose.Cells for .NET : Add and Retrieve Data&lt;/h1&gt;
&lt;p&gt;In &lt;a href=&#34;https://docs2.aspose.com/cells/net/developerguide/data/accessing+cells+of+a+worksheet&#34;&gt;Accessing Cells of a Worksheet&lt;/a&gt;, we discussed basic approaches for accessing cells in a worksheet. This article uses one of those approaches to add different types of data to cells.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#adding-data-to-cells&#34;&gt;Adding Data to Cells&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#improving-efficiency&#34;&gt;Improving Efficiency&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#retrieving-data-from-cells&#34;&gt;Retrieving Data from Cells&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;adding-data-to-cells&#34;&gt;Adding Data to Cells&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt;, that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to each worksheet in the Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection. Each item in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection represents an object of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;Aspose.Cells allows developers to add data to the cells in worksheets by calling the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class&amp;rsquo; &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/putvalue/index&#34;&gt;PutValue&lt;/a&gt; method. Aspose.Cells provides overloaded versions of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/putvalue/index&#34;&gt;PutValue&lt;/a&gt; method that lets developers add different kinds of data to cells. Using these overloaded versions of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/putvalue/index&#34;&gt;PutValue&lt;/a&gt; method, it is possible to add a Boolean, string, double, integer or date/time, etc. values to the cell.&lt;/p&gt;
&lt;h3 id=&#34;improving-efficiency&#34;&gt;Improving Efficiency&lt;/h3&gt;
&lt;p&gt;If you use &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/putvalue/index&#34;&gt;PutValue&lt;/a&gt; method to put a large amount of data to a worksheet, you should add values to the cells, first by rows and then by columns. This approach greatly improves the efficiency of your applications.&lt;/p&gt;
&lt;h2 id=&#34;retrieving-data-from-cells&#34;&gt;Retrieving Data from Cells&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to worksheets in the file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection. Each item in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection represents an object of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class provides several properties that allow developers to retrieve values from the cells according to their data types. These properties include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/stringvalue&#34;&gt;StringValue&lt;/a&gt;: returns the string value of the cell.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/doublevalue&#34;&gt;DoubleValue&lt;/a&gt;: returns the double value of the cell.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/boolvalue&#34;&gt;BoolValue&lt;/a&gt;: returns the boolean value of the cell.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/datetimevalue&#34;&gt;DateTimeValue&lt;/a&gt;: returns the date/time value of the cell.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/floatvalue&#34;&gt;FloatValue&lt;/a&gt;: returns the float value of the cell.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/intvalue&#34;&gt;IntValue&lt;/a&gt;: returns the integer value of the cell.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When a field is not filled, cells with &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/doublevalue&#34;&gt;DoubleValue&lt;/a&gt; or &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/floatvalue&#34;&gt;FloatValue&lt;/a&gt; throws an exception.&lt;/p&gt;
&lt;p&gt;The type of data contained in a cell can also be checked by using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class&amp;rsquo; &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/type&#34;&gt;Type&lt;/a&gt; property. In fact, the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class&amp;rsquo; &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/type&#34;&gt;Type&lt;/a&gt; property is based on the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cellvaluetype&#34;&gt;CellValueType&lt;/a&gt; enumeration whose pre-defined values are listed below:&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Cell Value Types&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;IsBool&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Specifies that cell value is Boolean.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;IsDateTime&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Specifies that cell value is date/time.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;IsNull&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents a blank cell.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;IsNumeric&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Specifies that cell value is numeric.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;IsString&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Specifies that cell value is a string.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;IsUnknown&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Specifies that cell value is unknown.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;p&gt;You can also use the above pre-defined cell value types to compare with the Type of data present in each cell.&lt;/p&gt;
&lt;p&gt;While working on worksheets, users may add different types of data in the cells. These data types may include Boolean, integer, floating point, text or date/time values. With Aspose.Cells, you can get the appropriate values from the cells according to their data types.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Cells Formatting</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/cells&#43;formatting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/cells&#43;formatting/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--cells-formatting&#34;&gt;Aspose.Cells for .NET : Cells Formatting&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#adding-borders-to-cells&#34;&gt;Adding Borders to Cells&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#adding-borders-to-cells&#34;&gt;Adding Borders to Cells&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1.1 &lt;a href=&#34;#adding-borders-to-a-cell&#34;&gt;Adding Borders to a Cell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.1.2 &lt;a href=&#34;#adding-borders-to-a-range-of-cells&#34;&gt;Adding Borders to a Range of Cells&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#colors-and-palette&#34;&gt;Colors and Palette&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#adding-custom-colors-to-palette&#34;&gt;Adding Custom Colors to Palette&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#colors-and-background-patterns&#34;&gt;Colors and Background Patterns&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;3.1 &lt;a href=&#34;#setting-colors-and-background-patterns&#34;&gt;Setting Colors and Background Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.2 &lt;a href=&#34;#important-to-know&#34;&gt;Important to Know&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;adding-borders-to-cells&#34;&gt;Adding Borders to Cells&lt;/h2&gt;
&lt;p&gt;Microsoft Excel allows users to format cells by adding borders. The type of border depends on where it is added. For example, a top border is one added to the top position of a cell. Users can also modify the borders&amp;rsquo; line style and color.&lt;/p&gt;
&lt;p&gt;With Aspose.Cells, developers can add borders and customize what they look like in the same flexible way as in Microsoft Excel.&lt;/p&gt;
&lt;h3 id=&#34;adding-borders-to-cells-1&#34;&gt;Adding Borders to Cells&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to each worksheet in the Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection. Each item in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection represents an object of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getstyle/index&#34;&gt;GetStyle&lt;/a&gt; method in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt;class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/setstyle/index&#34;&gt;SetStyle&lt;/a&gt; method is used to set a cell&amp;rsquo;s formatting style. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; class provides properties for adding borders to cells.&lt;/p&gt;
&lt;h4 id=&#34;adding-borders-to-a-cell&#34;&gt;Adding Borders to a Cell&lt;/h4&gt;
&lt;p&gt;Developers can add borders to a cell by using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/borders&#34;&gt;Borders&lt;/a&gt; collection. The border type is passed as an index to the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/borders&#34;&gt;Borders&lt;/a&gt; collection. All border types are pre-defined in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/bordertype&#34;&gt;BorderType&lt;/a&gt; enumeration.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Border enumeration&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Border Types&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;BottomBorder&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A bottom border line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DiagonalDown&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A diagonal line from top left to right bottom&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DiagonalUp&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A diagonal line from bottom left to right top&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;LeftBorder&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A left border line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;RightBorder&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A right border line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;TopBorder&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A top border line&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/borders&#34;&gt;Borders&lt;/a&gt; collection stores all borders. Each border in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/borders&#34;&gt;Borders&lt;/a&gt; collection is represented by a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/border&#34;&gt;Border&lt;/a&gt; object which provides two properties, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/border/properties/color&#34;&gt;Color&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/border/properties/linestyle&#34;&gt;LineStyle&lt;/a&gt; to set a border&amp;rsquo;s line color and style respectively.&lt;/p&gt;
&lt;p&gt;To set a border&amp;rsquo;s line color, select a color using the &lt;code&gt;Color&lt;/code&gt; enumeration (part of the .NET Framework) and assign it to the &lt;code&gt;Border&lt;/code&gt; object&amp;rsquo;s &lt;code&gt;Color&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;The border&amp;rsquo;s line style is set by selecting a line style from the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cellbordertype&#34;&gt;CellBorderType&lt;/a&gt; enumeration.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CellBorderType enumeration&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Line Styles&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DashDot&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Thin dash-dotted line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DashDotDot&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Thin dash-dot-dotted line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Dashed&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Dashed line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Dotted&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Dotted line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Double&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Double line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Hair&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Hairline&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;MediumDashDot&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Medium dash-dotted line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;MediumDashDotDot&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Medium dash-dot-dotted line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;MediumDashed&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Medium dashed line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Medium&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Medium line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;SlantedDashDot&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Slanted medium dash-dotted line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Thick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Thick line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Thin&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Thin line&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;p&gt;Select one of the line styles and then assign it to the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/border&#34;&gt;Border&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/border/properties/linestyle&#34;&gt;LineStyle&lt;/a&gt; property.&lt;/p&gt;
&lt;p&gt;You should set both line style and color at the same time. The two diagonal border line should have the same line style and color.&lt;/p&gt;
&lt;h4 id=&#34;adding-borders-to-a-range-of-cells&#34;&gt;Adding Borders to a Range of Cells&lt;/h4&gt;
&lt;p&gt;It is also possible to add borders to a range of cells rather than just a single cell. To do so, first, create a range of cells by calling the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.cells/createrange/methods/1&#34;&gt;CreateRange&lt;/a&gt; method. It takes the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First Row, the first row of the range.&lt;/li&gt;
&lt;li&gt;First Column, represents the first column of the range.&lt;/li&gt;
&lt;li&gt;Number of Rows, the number of rows in the range.&lt;/li&gt;
&lt;li&gt;Number of Columns, the number of columns in the range.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.cells/createrange/methods/1&#34;&gt;CreateRange&lt;/a&gt; method returns a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range&#34;&gt;Range&lt;/a&gt; object, which contains the specified range of cells. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range&#34;&gt;Range&lt;/a&gt; object provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range/methods/setoutlineborder&#34;&gt;SetOutlineBorder&lt;/a&gt; method that takes the following parameters to add a border to the range of cells:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Border Type&lt;/strong&gt;, the border type, selected from the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/bordertype&#34;&gt;BorderType&lt;/a&gt; enumeration.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Line Style&lt;/strong&gt;, the border line style, selected from the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cellbordertype&#34;&gt;CellBorderType&lt;/a&gt; enumeration.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Color&lt;/strong&gt;, the line color, selected from the Color enumeration.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;colors-and-palette&#34;&gt;Colors and Palette&lt;/h2&gt;
&lt;p&gt;A palette is the number of colors available for use in creating an image. The use of a standardized palette in a presentation allows the user to create a consistent look. Each Microsoft Excel (97-2003) file has a palette of 56 colors that can be applied to cells, fonts, gridlines, graphic objects, fills and lines in a chart.&lt;/p&gt;
&lt;p&gt;With Aspose.Cells it is possible not only to use the palette&amp;rsquo;s existing colors but also custom colors. Before using a custom color, add it to the palette first.&lt;/p&gt;
&lt;p&gt;This topic discusses how to add custom colors to the palette.&lt;/p&gt;
&lt;h3 id=&#34;adding-custom-colors-to-palette&#34;&gt;Adding Custom Colors to Palette&lt;/h3&gt;
&lt;p&gt;Aspose.Cells supports Microsoft Excel&amp;rsquo;s 56 color palette. To use a custom color that is not defined in the palette, add the color to the palette.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt;, that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/methods/changepalette&#34;&gt;ChangePalette&lt;/a&gt; method that takes the following parameters to add a custom color to modify the palette:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Custom Color, the custom color to be added.&lt;/li&gt;
&lt;li&gt;Index, the index of the color in the palette that the custom color will replace. Should be between 0-55.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The example below adds a custom color (Orchid) to the palette before applying it on a font.&lt;/p&gt;
&lt;p&gt;Limitation in Excel 97-2003 format&lt;/p&gt;
&lt;p&gt;The palette only holds 56 colors. When you add a custom color to the palette, the palette is changed and any element in the file formatted with the previous color is changed. So, when you change the palette, please be very careful. Moreover, this is the limitation in XLS (Excel 97 - 2003) file format only as there is no such limitation for XLSX or other advanced MS Excel (2007/2010 or 2013) file formats.&lt;/p&gt;
&lt;h2 id=&#34;colors-and-background-patterns&#34;&gt;Colors and Background Patterns&lt;/h2&gt;
&lt;p&gt;Microsoft Excel can set the foreground (outline) and background (fill) colors of cells and background patterns.&lt;/p&gt;
&lt;p&gt;Aspose.Cells also supports these features in a flexible manner. In this topic, we learn to use these features using Aspose.Cells.&lt;/p&gt;
&lt;h3 id=&#34;setting-colors-and-background-patterns&#34;&gt;Setting Colors and Background Patterns&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to each worksheet in the Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection. Each item in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection represents an object of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; has the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getstyle&#34;&gt;GetStyle&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/setstyle&#34;&gt;SetStyle&lt;/a&gt; methods that are used to get and set a cell&amp;rsquo;s formatting. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; class provides properties for setting the foreground and background colors of the cells. Aspose.Cells provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/backgroundtype&#34;&gt;BackgroundType&lt;/a&gt; enumeration that contains a set of pre-defined types of background patterns which are given below.&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Background Patterns&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DiagonalCrosshatch&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents diagonal crosshatch pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DiagonalStripe&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents diagonal stripe pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Gray6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents 6.25% gray pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Gray12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents 12.5% gray pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Gray25&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents 25% gray pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Gray50&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents 50% gray pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Gray75&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents 75% gray pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;HorizontalStripev&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents horizontal stripe pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents no background&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ReverseDiagonalStripe&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents reverse diagonal stripe pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Solid&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents solid pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ThickDiagonalCrosshatch&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents thick diagonal crosshatch pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ThinDiagonalCrosshatch&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents thin diagonal crosshatch pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ThinDiagonalStripe&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents thin diagonal stripe pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ThinHorizontalCrosshatch&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents thin horizontal crosshatch pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ThinHorizontalStripe&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents thin horizontal stripe pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ThinReverseDiagonalStripe&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents thin reverse diagonal stripe pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ThinVerticalStripe&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents thin vertical stripe pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;VerticalStripe&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents vertical stripe pattern&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;p&gt;In the example below, the foreground color of the A1 cell is set but A2 is configured to have both foreground and background colors with a vertical stripe background pattern.&lt;/p&gt;
&lt;h3 id=&#34;important-to-know&#34;&gt;Important to Know&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To set a cell&amp;rsquo;s foreground or background color, use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/foregroundcolor&#34;&gt;ForegroundColor&lt;/a&gt; or &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/backgroundcolor&#34;&gt;BackgroundColor&lt;/a&gt; properties. Both properties will take effect only if the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt;object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/pattern&#34;&gt;Pattern&lt;/a&gt; property is configured.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/foregroundcolor&#34;&gt;ForegroundColor&lt;/a&gt;property sets the cell&amp;rsquo;s shade color.&lt;br&gt;
The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/pattern&#34;&gt;Pattern&lt;/a&gt;property specifies the type of background pattern used for the foreground or background color. Aspose.Cells provides an enumeration, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/backgroundtype&#34;&gt;BackgroundType&lt;/a&gt;. that contains a set of pre-defined types of background patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you select &lt;em&gt;BackgroundType.None&lt;/em&gt; value from the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/backgroundtype&#34;&gt;BackgroundType&lt;/a&gt;enumeration, the foreground color is not applied.&lt;br&gt;
Likewise, the background color is not applied if you select the &lt;em&gt;BackgroundType.None&lt;/em&gt; or &lt;em&gt;BackgroundType.Solid&lt;/em&gt; values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When retrieving cell&amp;rsquo;s shading/fill color, if &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/pattern&#34;&gt;Style.Pattern&lt;/a&gt; is &lt;em&gt;BackgroundType.None&lt;/em&gt;, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/foregroundcolor&#34;&gt;Style.ForegroundColor&lt;/a&gt; will return &lt;em&gt;Color.Empty&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Format Cells using GetStyle and SetStyle Methods</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/format&#43;cells&#43;using&#43;getstyle&#43;and&#43;setstyle&#43;methods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/format&#43;cells&#43;using&#43;getstyle&#43;and&#43;setstyle&#43;methods/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--format-cells-using-getstyle-and-setstyle-methods&#34;&gt;Aspose.Cells for .NET : Format Cells using GetStyle and SetStyle Methods&lt;/h1&gt;
&lt;p&gt;Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getstyle&#34;&gt;GetStyle&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/setstyle&#34;&gt;SetStyle&lt;/a&gt; methods of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class, used to get/set the formatting style of a cell. Aspose.Cells also provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#format-cells-using-getstyle-and-setstyle-methods&#34;&gt;Format Cells using GetStyle and SetStyle Methods&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#using-the-getstyle-and-setstyle-methods&#34;&gt;Using the GetStyle and SetStyle Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#using-style-object-to-format-different-cells&#34;&gt;Using Style Object to Format Different Cells&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3 &lt;a href=&#34;#using-microsoft-excel-2007-predefined-styles&#34;&gt;Using Microsoft Excel 2007 Predefined Styles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.4 &lt;a href=&#34;#applying-gradient-fill-effects&#34;&gt;Applying Gradient Fill Effects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;format-cells-using-getstyle-and-setstyle-methods&#34;&gt;Format Cells using GetStyle and SetStyle Methods&lt;/h2&gt;
&lt;p&gt;Apply different kinds of formatting styles on cells to set background or foreground colors, borders, fonts, horizontal and vertical alignments, indentation level, text direction, rotation angle and much more.&lt;/p&gt;
&lt;h3 id=&#34;using-the-getstyle-and-setstyle-methods&#34;&gt;Using the GetStyle and SetStyle Methods&lt;/h3&gt;
&lt;p&gt;If developers need to apply different formatting styles to different cells then it&amp;rsquo;s better to get the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; of the cell using &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getstyle&#34;&gt;Cell.GetStyle&lt;/a&gt; method, specify the style attributes and then apply the formatting using &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/setstyle&#34;&gt;Cell.SetStyle&lt;/a&gt; method. An example is given below to demonstrate this approach to apply various formatting on a cell.&lt;/p&gt;
&lt;h3 id=&#34;using-style-object-to-format-different-cells&#34;&gt;Using Style Object to Format Different Cells&lt;/h3&gt;
&lt;p&gt;If developers need to apply the &lt;code&gt;Same&lt;/code&gt; formatting style to different cells then they can use &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object. Please follow the steps below to use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object by calling the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/methods/createstyle&#34;&gt;CreatStyle&lt;/a&gt; method of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class&lt;/li&gt;
&lt;li&gt;Access the newly added &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&lt;/li&gt;
&lt;li&gt;Set the desired properties/attributes of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object to apply desired formatting settings&lt;/li&gt;
&lt;li&gt;Assign the configured &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object to your desired cells&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This approach can greatly improve the efficiency of your applications and save memory too.&lt;/p&gt;
&lt;h3 id=&#34;using-microsoft-excel-2007-predefined-styles&#34;&gt;Using Microsoft Excel 2007 Predefined Styles&lt;/h3&gt;
&lt;p&gt;If you need to apply different formatting styles for Microsoft Excel 2007, apply styles using the Aspose.Cells API. An example is given below to demonstrate this approach to apply a predefined style on a cell.&lt;/p&gt;
&lt;h3 id=&#34;applying-gradient-fill-effects&#34;&gt;Applying Gradient Fill Effects&lt;/h3&gt;
&lt;p&gt;To apply your desired Gradient Fill Effects to the cell, use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/methods/settwocolorgradient&#34;&gt;SetTwoColorGradient&lt;/a&gt; method accordingly.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Excel 2007 Themes and Colors</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/excel&#43;2007&#43;themes&#43;and&#43;colors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/excel&#43;2007&#43;themes&#43;and&#43;colors/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--excel-2007-themes-and-colors&#34;&gt;Aspose.Cells for .NET : Excel 2007 Themes and Colors&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#excel-2007-themes-and-colors&#34;&gt;Excel 2007 Themes and Colors&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#get-and-set-theme-colors&#34;&gt;Get and Set Theme Colors&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1.1 &lt;a href=&#34;#customize-themes&#34;&gt;Customize Themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.1.2 &lt;a href=&#34;#use-theme-colors&#34;&gt;Use Theme Colors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;excel-2007-themes-and-colors&#34;&gt;Excel 2007 Themes and Colors&lt;/h2&gt;
&lt;p&gt;Themes provide a unified look with named styles, graphical effects and other objects used in a workbook. For example, the Accent1 style, for example, looks different in the Office and the Apex themes. Often, you apply a document theme and then amend it to how you want it.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides features for customizing themes and colors.&lt;/p&gt;
&lt;h3 id=&#34;get-and-set-theme-colors&#34;&gt;Get and Set Theme Colors&lt;/h3&gt;
&lt;p&gt;Below are a few methods and properties that implement theme colors.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/foregroundthemecolor&#34;&gt;Style.ForegroundThemeColor&lt;/a&gt;: Used to set the foreground color.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/backgroundthemecolor&#34;&gt;Style.BackgroundThemeColor&lt;/a&gt;: Used to set the background color.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/font/properties/themecolor&#34;&gt;Font.ThemeColor&lt;/a&gt;: Used to set the font color.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/methods/getthemecolor&#34;&gt;Workbook.GetThemeColor&lt;/a&gt;: Used to get a theme color.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/methods/setthemecolor&#34;&gt;Workbook.SetThemeColor&lt;/a&gt;: Used to set a theme color.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following example shows how to get and set theme colors.&lt;/p&gt;
&lt;p&gt;The following example uses a template XLSX file, gets the colors for different theme color types, changes the colors and saves the Microsoft Excel file.&lt;/p&gt;
&lt;h4 id=&#34;customize-themes&#34;&gt;Customize Themes&lt;/h4&gt;
&lt;p&gt;The following example shows how to apply custom themes with your desired colors. We use a sample template file manually created in Microsoft Excel 2007.&lt;/p&gt;
&lt;p&gt;The following example loads a template XLSX file, defines colors for different theme color types, applies the custom colors and saves the excel file.&lt;/p&gt;
&lt;h4 id=&#34;use-theme-colors&#34;&gt;Use Theme Colors&lt;/h4&gt;
&lt;p&gt;The following example applies a cell’s foreground and font colors based on the default theme (of the workbook) color types. It also saves the excel file to disk.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Conditional Formatting</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/conditional&#43;formatting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/conditional&#43;formatting/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--conditional-formatting&#34;&gt;Aspose.Cells for .NET : Conditional Formatting&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#applying-conditional-formatting&#34;&gt;Applying Conditional Formatting&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#using-designer-spreadsheet&#34;&gt;Using Designer Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2.2 &lt;a href=&#34;#using-the-copy-method&#34;&gt;Using the Copy Method&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#applying-conditional-formatting-at-runtime&#34;&gt;Applying Conditional Formatting at Runtime&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;3.1 &lt;a href=&#34;#set-font&#34;&gt;Set Font&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.2 &lt;a href=&#34;#set-border&#34;&gt;Set Border&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.3 &lt;a href=&#34;#set-pattern&#34;&gt;Set Pattern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Conditional formatting is an advanced Microsoft Excel feature that allows you to apply formats to a cell or range of cells and have that formatting change depending on the value of the cell or the value of a formula. For example, you can have a cell appear bold only when the value of the cell is greater than 500. When the value of the cell meets the condition, the specified format is applied to the cell. If the value of the cell does not meet the format condition, the cell&amp;rsquo;s default formatting is used. In Microsoft Excel, select &lt;strong&gt;Format&lt;/strong&gt;, then &lt;strong&gt;Conditional Formatting&lt;/strong&gt; to open the Conditional Formatting dialog.&lt;/p&gt;
&lt;p&gt;Aspose.Cells supports applying conditional formatting to cells at runtime. This article explains how. It also explains how to calculate the color used by Excel for color scale conditional formatting.&lt;/p&gt;
&lt;h2 id=&#34;applying-conditional-formatting&#34;&gt;Applying Conditional Formatting&lt;/h2&gt;
&lt;p&gt;Aspose.Cells supports conditional formatting in several ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using designer spreadsheet&lt;/li&gt;
&lt;li&gt;Using the copy method.&lt;/li&gt;
&lt;li&gt;Creating conditional formatting at runtime.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;using-designer-spreadsheet&#34;&gt;Using Designer Spreadsheet&lt;/h3&gt;
&lt;p&gt;Developers can create a designer spreadsheet that contains conditional formatting in Microsoft Excel and then open that spreadsheet with Aspose.Cells. Aspose.Cells loads and saves the designer spreadsheet, keeping any conditional formatting setting.&lt;/p&gt;
&lt;h3 id=&#34;using-the-copy-method&#34;&gt;Using the Copy Method&lt;/h3&gt;
&lt;p&gt;Aspose.Cells allows developers to copy conditional format settings from one cell to another in the worksheet by calling the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range/methods/copy/index&#34;&gt;Range.Copy()&lt;/a&gt; method.&lt;/p&gt;
&lt;h2 id=&#34;applying-conditional-formatting-at-runtime&#34;&gt;Applying Conditional Formatting at Runtime&lt;/h2&gt;
&lt;p&gt;Aspose.Cells lets you both add and remove conditional formatting at runtime. The code samples below show how to set conditional formatting:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Instantiate a workbook.&lt;/li&gt;
&lt;li&gt;Add an empty conditional format.&lt;/li&gt;
&lt;li&gt;Set the range that the formatting should apply to.&lt;/li&gt;
&lt;li&gt;Define the formatting conditions.&lt;/li&gt;
&lt;li&gt;Save the file.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After this example comes a number of other smaller examples that show how to apply font settings, borders settings, and patterns.&lt;/p&gt;
&lt;p&gt;Microsoft Excel 2007 added more advanced conditional formatting that Aspose.Cells also support. The examples here, illustrate how to use simple formatting, the Microsoft Excel 2007 examples show how to apply more advanced conditional formatting.&lt;/p&gt;
&lt;h3 id=&#34;set-font&#34;&gt;Set Font&lt;/h3&gt;
&lt;p&gt;You can only change font style, text color, underline style, and strikeout style.&lt;/p&gt;
&lt;h3 id=&#34;set-border&#34;&gt;Set Border&lt;/h3&gt;
&lt;p&gt;You can only use thin line styles to the outline border. Diagonal lines are not allowed.&lt;/p&gt;
&lt;h3 id=&#34;set-pattern&#34;&gt;Set Pattern&lt;/h3&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Apply Advanced Conditional Formatting</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/apply&#43;advanced&#43;conditional&#43;formatting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/apply&#43;advanced&#43;conditional&#43;formatting/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--apply-advanced-conditional-formatting&#34;&gt;Aspose.Cells for .NET : Apply Advanced Conditional Formatting&lt;/h1&gt;
&lt;p&gt;Microsoft Excel 2007 and later versions (2010/2013/2016) provides some advanced features for conditional formatting. For example, it lets you apply cell shading, borders, colored icons, arrows, flags and font formatting, etc. which has become quite sophisticated.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#apply-advanced-conditional-formatting-to-microsoft-excel-files&#34;&gt;Apply Advanced Conditional Formatting to Microsoft Excel Files&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#compute-the-color-chosen-by-microsoft-excel-for-colorscale-conditional-formatting&#34;&gt;Compute the Color Chosen by Microsoft Excel for ColorScale Conditional Formatting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;apply-advanced-conditional-formatting-to-microsoft-excel-files&#34;&gt;Apply Advanced Conditional Formatting to Microsoft Excel Files&lt;/h2&gt;
&lt;p&gt;Conditional formatting can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add shaded data bars to graphically enhance the underlying numbers by embedding a simple bar chart in the cells.&lt;/li&gt;
&lt;li&gt;Automatically shade cells with color scales based on their relation to values in other cells in the range. The default settings shades the lowest value in red moving up to the highest value in green.&lt;/li&gt;
&lt;li&gt;Use icon sets in a similar way to color scales, but rather than shading the cells it adds small icons, such as arrows and traffic lights to the cells.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Aspose.Cells fully supports the conditional formatting provided by Microsoft Excel 2007 and later versions in XLSX format on cells at runtime. This example demonstrates an exercise for advanced conditional formatting types including IconSets, DataBars, Color Scales, TimePeriods, Top/Bottom and other rules with different sets of attributes.&lt;/p&gt;
&lt;h3 id=&#34;compute-the-color-chosen-by-microsoft-excel-for-colorscale-conditional-formatting&#34;&gt;Compute the Color Chosen by Microsoft Excel for ColorScale Conditional Formatting&lt;/h3&gt;
&lt;p&gt;Aspose.Cells lets you calculate the color selected by Microsoft Excel when ColorScale conditional formatting is used in a template file. See the sample code below to learn how to compute the color selected by Microsoft Excel.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Creating Subtotals</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/creating&#43;subtotals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/creating&#43;subtotals/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--creating-subtotals&#34;&gt;Aspose.Cells for .NET : Creating Subtotals&lt;/h1&gt;
&lt;p&gt;You can automatically create subtotals for any repeating values in a spreadsheet. Aspose.Cells provides API features that help you add subtotals to spreadsheets programmatically.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#using-microsoft-excel&#34;&gt;Using Microsoft Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#using-the-aspose.cells-api&#34;&gt;Using the Aspose.Cells API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;using-microsoft-excel&#34;&gt;Using Microsoft Excel&lt;/h2&gt;
&lt;p&gt;To add subtotals in Microsoft Excel:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a simple data list in the first worksheet of the workbook (as shown in the figure below) and save the file as Book1.xls.&lt;/li&gt;
&lt;li&gt;Select any cell within your list.&lt;/li&gt;
&lt;li&gt;From the &lt;strong&gt;Data&lt;/strong&gt; menu, select &lt;strong&gt;Subtotals&lt;/strong&gt;. The Subtotals dialog will be displayed. Define what function to use and where to place the subtotals.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;using-the-asposecells-api&#34;&gt;Using the Aspose.Cells API&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt;, that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to each worksheet in the Excel file.&lt;/p&gt;
&lt;p&gt;A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The class provides a wide range of properties and methods for managing worksheets and other objects. Each worksheet consists of a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; collection. To add subtotals to a worksheet, use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; class&amp;rsquo; &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/subtotal/index&#34;&gt;Subtotal&lt;/a&gt; method. Provide parameter values to the method to specify how the subtotal should be calculated and placed.&lt;/p&gt;
&lt;p&gt;In the examples below, we have added subtotals to the first worksheet of the template file (Book1.xls) using the Aspose.Cells API. When the code is executed, a worksheet with subtotals is created.&lt;/p&gt;
&lt;p&gt;The code snippets that follow show how to add subtotals to a worksheet with Aspose.Cells for .NET.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Data Validation</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/data&#43;validation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/data&#43;validation/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--data-validation&#34;&gt;Aspose.Cells for .NET : Data Validation&lt;/h1&gt;
&lt;p&gt;Microsoft Excel provides some good features to auto filter or validate worksheet data.Aspose.Cells fully supports Microsoft Excel&amp;rsquo;s data validation and AutoFilter features. This article explains how to use the features in Microsoft Excel, and how to code them using Aspose.Cells.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#data-validation-types-and-execution&#34;&gt;Data Validation Types and Execution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#data-validation-with-microsoft-excel&#34;&gt;Data Validation with Microsoft Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#data-validation-with-aspose.cells&#34;&gt;Data Validation with Aspose.Cells&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.2.1 &lt;a href=&#34;#types-of-data-validation&#34;&gt;Types of Data Validation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.2.1.1 &lt;a href=&#34;#whole-number-data-validation&#34;&gt;Whole Number Data Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.2 &lt;a href=&#34;#list-data-validation&#34;&gt;List Data Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.3 &lt;a href=&#34;#date-data-validation&#34;&gt;Date Data Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.4 &lt;a href=&#34;#time-data-validation&#34;&gt;Time Data Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.5 &lt;a href=&#34;#text-length-data-validation&#34;&gt;Text Length Data Validation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;1.3 &lt;a href=&#34;#data-validation-rules&#34;&gt;Data Validation Rules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#check-if-validation-in-cell-is-dropdown&#34;&gt;Check if validation in cell is dropdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#add-cellarea-to-existing-validation&#34;&gt;Add CellArea to existing Validation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;data-validation-types-and-execution&#34;&gt;Data Validation Types and Execution&lt;/h2&gt;
&lt;p&gt;Data validation is the ability to set rules pertaining to data entered on a worksheet. For example, use validation to ensure that a column labeled DATE contains only dates, or that another column contains only numbers. You could even ensure that a column labeled DATE contains only dates within a certain range. With data validation, you can control what is entered into cells in the worksheet.&lt;/p&gt;
&lt;p&gt;Microsoft Excel supports a number of different types of data validation. Each type is used to control what type of data is entered into a cell, or cell range. Below, code snippets illustrate how to validate that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Numbers are whole, that is, that they don&amp;rsquo;t have a decimal part.&lt;/li&gt;
&lt;li&gt;Decimal numbers follow the right structure. The code example defines that a range of cells should have two decimal spaces.&lt;/li&gt;
&lt;li&gt;Values are restricted to a list of values. List validation defines a separate list of values that can be applied to a cell, or cell range.&lt;/li&gt;
&lt;li&gt;Dates fall within a specific range.&lt;/li&gt;
&lt;li&gt;A time is within a specific range.&lt;/li&gt;
&lt;li&gt;A text is within a given character length.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;data-validation-with-microsoft-excel&#34;&gt;Data Validation with Microsoft Excel&lt;/h3&gt;
&lt;p&gt;To create validations using Microsoft Excel:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In a worksheet, select the cells to which you want to apply validation.&lt;/li&gt;
&lt;li&gt;From the &lt;strong&gt;Data&lt;/strong&gt; menu, select &lt;strong&gt;Validation&lt;/strong&gt;. The validation dialog will be displayed.&lt;/li&gt;
&lt;li&gt;Click the &lt;strong&gt;Settings&lt;/strong&gt; tab and enter settings.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;data-validation-with-asposecells&#34;&gt;Data Validation with Aspose.Cells&lt;/h3&gt;
&lt;p&gt;Data validation is a powerful feature for validating the information entered into worksheets. With data validation, developers can provide users with a list of choices, restrict data entries to a specific type or size, etc.&lt;br&gt;
In Aspose.Cells, each &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class has a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/validations&#34;&gt;Validations&lt;/a&gt; property which represents a collection of &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/validation&#34;&gt;Validation&lt;/a&gt; objects. To set up validation, set some of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/validation&#34;&gt;Validation&lt;/a&gt; class&amp;rsquo; properties as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type – represents the validation type, which may be specified by using one of the predefined values in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/validationtype&#34;&gt;ValidationType&lt;/a&gt; enumeration.&lt;/li&gt;
&lt;li&gt;Operator – represents the operator to be used in the validation, which may be specified by using one of the predefined values in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/operatortype&#34;&gt;OperatorType&lt;/a&gt; enumeration.&lt;/li&gt;
&lt;li&gt;Formula1 – represents the value or expression associated with the first part of the data validation.&lt;/li&gt;
&lt;li&gt;Formula2 – represents the value or expression associated with the second part of the data validation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/validation&#34;&gt;Validation&lt;/a&gt; object&amp;rsquo;s properties have been configured, developers can use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cellarea&#34;&gt;CellArea&lt;/a&gt; structure to store information about the cell range that will be validated using the created validation.&lt;/p&gt;
&lt;h4 id=&#34;types-of-data-validation&#34;&gt;Types of Data Validation&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/validationtype&#34;&gt;ValidationType&lt;/a&gt; enumeration has the following members:&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Member Name&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;AnyValue&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Denotes a value of any type.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;WholeNumber&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Denotes validation type for whole numbers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Denotes validation type for decimal numbers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Denotes validation type for drop-down list.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Denotes validation type for dates.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Denotes validation type for time.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;TextLength&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Denotes validation type for the length of the text.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Custom&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Denotes custom validation type.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;h5 id=&#34;whole-number-data-validation&#34;&gt;Whole Number Data Validation&lt;/h5&gt;
&lt;p&gt;With this type of validation, users can enter only whole numbers within a specified range into the validated cells. The code examples that follow show how to implement the &lt;code&gt;WholeNumber&lt;/code&gt; validation type. The example creates the same data validation using Aspose.Cells that we created using Microsoft Excel above.&lt;/p&gt;
&lt;h5 id=&#34;list-data-validation&#34;&gt;List Data Validation&lt;/h5&gt;
&lt;p&gt;This type of validation allows the user to enter values from a drop-down list. It provides a list: a series of rows that contain data. In the example, a second worksheet is added to hold the list source. Users can only select values from the list. The validation area is the cell range A1:A5 in the first worksheet.&lt;/p&gt;
&lt;p&gt;It is important here that you set the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/validation/properties/incelldropdown&#34;&gt;Validation.InCellDropDown&lt;/a&gt; property to &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;
&lt;h5 id=&#34;date-data-validation&#34;&gt;Date Data Validation&lt;/h5&gt;
&lt;p&gt;With this type of validation, users enter date values within a specified range, or meeting specific criteria, into the validated cells. In the example, the user is restricted to enter dates between 1970 to 1999. Here, the validation area is the B1 cell.&lt;/p&gt;
&lt;h5 id=&#34;time-data-validation&#34;&gt;Time Data Validation&lt;/h5&gt;
&lt;p&gt;With this type of validation, users can enter times within a specified range, or meeting some criteria, into the validated cells. In the example, the user is restricted to enter times between 09:00 to 11:30 AM. Here, the validation area is the B1 cell.&lt;/p&gt;
&lt;h5 id=&#34;text-length-data-validation&#34;&gt;Text Length Data Validation&lt;/h5&gt;
&lt;p&gt;With this type of validation, users can enter text values of a specified length into the validated cells. In the example, the user is restricted to enter string values with no more than 5 characters. The validation area is the B1 cell.&lt;/p&gt;
&lt;h3 id=&#34;data-validation-rules&#34;&gt;Data Validation Rules&lt;/h3&gt;
&lt;p&gt;When data validations are implemented, then validation can be checked by assigning different values in the cells. &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getvalidationvalue&#34;&gt;Cell.GetValidationValue&lt;/a&gt; can be used to fetch the validation result. The following example demonstrates this feature with different values. The sample file can be downloaded from the following link for testing:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5025054/77496339.xlsx&#34;&gt;sampleDataValidationRules.xlsx&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;check-if-validation-in-cell-is-dropdown&#34;&gt;Check if validation in cell is dropdown&lt;/h2&gt;
&lt;p&gt;As we have seen there are many types of validations that can be implemented within a cell. If you want to check whether validation is dropdown or not, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/validation/properties/incelldropdown&#34;&gt;Validation.InCellDropDown&lt;/a&gt; property can be used to test this. The following sample code demonstrates the usage of this property. A sample file for testing can be downloaded from the following link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5025054/79527947.xlsx&#34;&gt;sampleValidation.xlsx&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;add-cellarea-to-existing-validation&#34;&gt;Add CellArea to existing Validation&lt;/h2&gt;
&lt;p&gt;There might be cases where you might want to add &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cellarea&#34;&gt;CellArea&lt;/a&gt; to existing &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/validation&#34;&gt;Validation&lt;/a&gt;. When you add &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cellarea&#34;&gt;CellArea&lt;/a&gt; using &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/validation/methods/addarea&#34;&gt;Validation.AddArea(CellArea cellArea)&lt;/a&gt;, Aspose.Cells checks all existing areas to see if the new area already exists. If the file has a large number of validations, this takes a performance hit. To overcome this, the API provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.validation/addarea/methods/1&#34;&gt;Validation.AddAreaCellArea cellArea, bool checkIntersection, bool checkEdge)&lt;/a&gt; method. The &lt;em&gt;checkIntersection&lt;/em&gt; parameter indicates whether to check the intersection of a given area with existing validation areas. Setting it to &lt;strong&gt;false&lt;/strong&gt; will disable the checking of other areas. The &lt;em&gt;checkEdge&lt;/em&gt; parameter indicates whether to check the applied areas. If the new area becomes the top-left area, internal settings are rebuilt. If you are sure that the new area is not the top-left area, you may set this parameter as &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The following code snippet demonstrates the use of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.validation/addarea/methods/1&#34;&gt;Validation.AddAreaCellArea cellArea, bool checkIntersection, bool checkEdge)&lt;/a&gt; method to add new &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cellarea&#34;&gt;CellArea&lt;/a&gt; to existing &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/validation&#34;&gt;Validation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The source and output excel files are attached for reference.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/96764769/96928093.xlsx&#34;&gt;Source File&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5025054/96928220.xlsx&#34;&gt;Output File&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Data Formatting</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/data&#43;formatting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/data&#43;formatting/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--data-formatting&#34;&gt;Aspose.Cells for .NET : Data Formatting&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#format-data-in-cells&#34;&gt;Format Data in Cells&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#setting-display-formats-of-numbers-and-dates&#34;&gt;Setting Display Formats of Numbers and Dates&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;3.1 &lt;a href=&#34;#setting-display-formats-in-microsoft-excel&#34;&gt;Setting Display Formats in Microsoft Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.2 &lt;a href=&#34;#using-built-in-number-formats&#34;&gt;Using Built-in Number Formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.3 &lt;a href=&#34;#using-custom-number-formats&#34;&gt;Using Custom Number Formats&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#formatting-selected-characters-in-a-cell&#34;&gt;Formatting Selected Characters in a Cell&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;4.1 &lt;a href=&#34;#formatting-selected-characters&#34;&gt;Formatting Selected Characters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;5 &lt;a href=&#34;#activating-sheets-and-making-an-active-cell-in-the-worksheet&#34;&gt;Activating Sheets and Making an Active Cell in the Worksheet&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;5.1 &lt;a href=&#34;#activating-sheets-and-making-a-cell-active&#34;&gt;Activating Sheets and Making a Cell Active&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;6 &lt;a href=&#34;#formatting-rows-and-columns&#34;&gt;Formatting Rows and Columns&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;6.1 &lt;a href=&#34;#formatting-rows-&amp;amp;-columns&#34;&gt;Formatting Rows &amp;amp; Columns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6.2 &lt;a href=&#34;#formatting-a-row&#34;&gt;Formatting a Row&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6.3 &lt;a href=&#34;#formatting-a-column&#34;&gt;Formatting a Column&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Properly formatting worksheet cells makes it easier for users to read the data. There are multiple ways to format cells and their contents. The simplest way is to use Microsoft Excel in a WYSIWYG environment and create a designer spreadsheet. Another way to format cells and their contents is to use the Aspose.Cells API. This topic describes two approaches to format cells and their contents with the use of Aspose.Cells API.&lt;/p&gt;
&lt;h2 id=&#34;format-data-in-cells&#34;&gt;Format Data in Cells&lt;/h2&gt;
&lt;p&gt;Developers can format cells and their contents using the flexible API of Aspose.Cells. Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt;, that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to each worksheet in an Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection. Each item in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection represents an object of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class.&lt;/p&gt;
&lt;h2 id=&#34;setting-display-formats-of-numbers-and-dates&#34;&gt;Setting Display Formats of Numbers and Dates&lt;/h2&gt;
&lt;p&gt;A very strong feature of Microsoft Excel is that it allows users to set the display formats of numeric values and dates. We know that numeric data can be used to represent different values including decimal, currency, percentage, fraction or accounting values, etc. All these numerical values are displayed in different formats depending on the type of information it represents. Similarly, there are many formats in which a date or time can be displayed.&lt;br&gt;
Aspose.Cells supports this functionality and allows developers to set any display format for a number or date.&lt;/p&gt;
&lt;h3 id=&#34;setting-display-formats-in-microsoft-excel&#34;&gt;Setting Display Formats in Microsoft Excel&lt;/h3&gt;
&lt;p&gt;To set display formats in Microsoft Excel:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Right-click any cell.&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Format Cells&lt;/strong&gt;. A dialog will appear that is used to set the display formats of any kind of value.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the left side of the dialog, there are many categories of values like &lt;strong&gt;General&lt;/strong&gt;, &lt;strong&gt;Number&lt;/strong&gt;, &lt;strong&gt;Currency&lt;/strong&gt;, &lt;strong&gt;Accounting&lt;/strong&gt;, &lt;strong&gt;Date&lt;/strong&gt;, &lt;strong&gt;Time&lt;/strong&gt;, **Percentage, **etc. Aspose.Cells supports all of these display formats.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to each worksheet in the Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection. Each item in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection represents an object of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getstyle&#34;&gt;GetStyle&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/setstyle&#34;&gt;SetStyle&lt;/a&gt; methods for the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class. These methods are used to get and set a cell&amp;rsquo;s formatting. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; class provides some useful properties for dealing with the display formats of numbers and dates.&lt;/p&gt;
&lt;h3 id=&#34;using-built-in-number-formats&#34;&gt;Using Built-in Number Formats&lt;/h3&gt;
&lt;p&gt;Aspose.Cells offers some built-in number formats to configure the display formats of the numbers and dates. These built-in number formats can be applied by using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/number&#34;&gt;Number&lt;/a&gt; property of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object. All built-in number formats are given unique numeric values. Developers can assign any desired numeric value to the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/number&#34;&gt;Number&lt;/a&gt; property of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object to apply the display format. This approach is fast. The built-in number formats supported by Aspose.Cells are listed below.&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Value&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Format String&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;General&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;General&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Decimal&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Decimal&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Decimal&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;#,##0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Decimal&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;#,##0.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Currency&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$#,##0;$-#,##0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Currency&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$#,##0;[Red]$-#,##0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Currency&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$#,##0.00;$-#,##0.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Currency&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$#,##0.00;[Red]$-#,##0.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Percentage&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Percentage&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.00%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Scientific&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.00E+00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fraction&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;# ?/?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;13&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fraction&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;# &lt;em&gt;/&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;14&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Date&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;m/d/yy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Date&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;d-mmm-yy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;16&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Date&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;d-mmm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;17&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Date&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mmm-yy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;18&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Time&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;h:mm AM/PM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Time&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;h:mm:ss AM/PM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;20&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Time&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;h:mm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Time&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;h:mm:ss&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;22&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Time&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;m/d/yy h:mm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;37&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Currency&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;#,##0;-#,##0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;38&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Currency&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;#,##0;[Red]-#,##0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;39&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Currency&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;#,##0.00;-#,##0.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;40&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Currency&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;#,##0.00;[Red]-#,##0.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;41&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Accounting&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;_ * #,##0_ ;_ * &amp;ldquo;_ ;_ @_&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;42&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Accounting&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;_ $* #,##0_ ;_ $* &amp;ldquo;_ ;_ @_&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;43&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Accounting&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;_ * #,##0.00_ ;_ * &amp;ldquo;??_ ;_ @_&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;44&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Accounting&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;_ $* #,##0.00_ ;_ $* &amp;ldquo;??_ ;_ @_&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;45&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Time&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mm:ss&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;46&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Time&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;h :mm:ss&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Time&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mm:ss.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;48&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Scientific&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;##0.0E+00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Text&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;@&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;h3 id=&#34;using-custom-number-formats&#34;&gt;Using Custom Number Formats&lt;/h3&gt;
&lt;p&gt;To define your own customized format string for setting the display format, use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/custom&#34;&gt;Custom&lt;/a&gt; property. This approach is not as fast as using pre-set formats but it is more flexible.&lt;/p&gt;
&lt;p&gt;If you use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/custom&#34;&gt;Custom&lt;/a&gt; property to set the number format, any previous format set using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/number&#34;&gt;Number&lt;/a&gt; property is overridden and vice versa.&lt;/p&gt;
&lt;h2 id=&#34;formatting-selected-characters-in-a-cell&#34;&gt;Formatting Selected Characters in a Cell&lt;/h2&gt;
&lt;p&gt;Dealing with Font Settings explains how to format text in cells, but it only explains how to format all of the cell content. What if you want to format only selected characters?&lt;/p&gt;
&lt;p&gt;Aspose.Cells supports this feature too. This topic explains how to we use this feature effectively.&lt;/p&gt;
&lt;h3 id=&#34;formatting-selected-characters&#34;&gt;Formatting Selected Characters&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to each worksheet in an Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection. Each item in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection represents an object of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/characters&#34;&gt;Characters&lt;/a&gt; method that takes the following parameters to select a range of characters inside a cell:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Start Index&lt;/strong&gt;, the index of the character that the selection starts from.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Characters&lt;/strong&gt;, the number of characters to select.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/characters&#34;&gt;Characters&lt;/a&gt; method returns an instance of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/fontsetting&#34;&gt;FontSetting&lt;/a&gt; class that allows developers to format the characters in the same way as they would a cell as shown below in the code example. In the output file, in the A1 cell, the word &amp;lsquo;Visit&amp;rsquo; will be formatted with the default font but &amp;lsquo;Aspose!&amp;rsquo; is bold and blue.&lt;/p&gt;
&lt;p&gt;If you are interested in formatting a portion of Rich Text in a cell, consider using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getcharacters&#34;&gt;Cell.GetCharacters&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/setcharacters&#34;&gt;Cell.SetCharacters&lt;/a&gt; methods. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getcharacters&#34;&gt;Cell.GetCharacters&lt;/a&gt;method is to be used to access the portions of the text and then amendments can be done using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/setcharacters&#34;&gt;Cell.SetCharacters&lt;/a&gt; method whereas the &lt;strong&gt;Get&lt;/strong&gt; method returns an array of &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/fontsetting&#34;&gt;FontSetting&lt;/a&gt; objects which can be manipulated to set various properties such as font name, font color, boldness, etc and &lt;strong&gt;Set&lt;/strong&gt; method can be used to apply the changes.&lt;/p&gt;
&lt;h2 id=&#34;activating-sheets-and-making-an-active-cell-in-the-worksheet&#34;&gt;Activating Sheets and Making an Active Cell in the Worksheet&lt;/h2&gt;
&lt;p&gt;Sometimes, you need a specific worksheet to be active and displayed when a user opens a Microsoft Excel file in Excel. Similarly, you might want to activate a specific cell and set the scrollbars to show the active cell.&lt;br&gt;
Aspose.Cells is capable of doing all these tasks.&lt;/p&gt;
&lt;p&gt;An &lt;strong&gt;active sheet&lt;/strong&gt; is a sheet you&amp;rsquo;re working on: the active sheet&amp;rsquo;s name on the tab is bold by default.&lt;/p&gt;
&lt;p&gt;An &lt;strong&gt;active cell&lt;/strong&gt; is a selected cell, the cell into which data is entered when you begin typing. Only one cell is active at a time. The active cell is highlighted by a heavy border.&lt;/p&gt;
&lt;h3 id=&#34;activating-sheets-and-making-a-cell-active&#34;&gt;Activating Sheets and Making a Cell Active&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides specific API calls for activating a sheet and a cell. For Example, the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheetcollection/properties/activesheetindex&#34;&gt;Aspose.Cells.WorksheetCollection.ActiveSheetIndex&lt;/a&gt; property is useful for setting the active sheet in a workbook.&lt;br&gt;
Similarly, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/activecell&#34;&gt;Aspose.Cells.Worksheet.ActiveCell&lt;/a&gt; property is used to set and get an active cell in the worksheet.&lt;/p&gt;
&lt;p&gt;To make sure that the horizontal or vertical scrollbars are at the row and column index position you want to show specific data, use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/firstvisiblerow&#34;&gt;Aspose.Cells.Worksheet.FirstVisibleRow&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/firstvisiblecolumn&#34;&gt;Aspose.Cells.Worksheet.FirstVisibleColumn&lt;/a&gt; properties.&lt;/p&gt;
&lt;p&gt;The following example shows how to activate a worksheet and make an active cell in it. In the generated output, the scrollbars will be scrolled to make the 2nd row and 2nd column as their first visible row and column.&lt;/p&gt;
&lt;h2 id=&#34;formatting-rows-and-columns&#34;&gt;Formatting Rows and Columns&lt;/h2&gt;
&lt;p&gt;Sometimes, developers need to apply the same formatting on rows or columns. Applying formatting on cells one by one often takes longer and is not a good solution.&lt;br&gt;
To address this issue, Aspose.Cells provides a simple, fast way discussed in detail in this article.&lt;/p&gt;
&lt;h3 id=&#34;formatting-rows--columns&#34;&gt;Formatting Rows &amp;amp; Columns&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides a class, the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to each worksheet in the Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/rows&#34;&gt;Rows&lt;/a&gt; collection.&lt;/p&gt;
&lt;h3 id=&#34;formatting-a-row&#34;&gt;Formatting a Row&lt;/h3&gt;
&lt;p&gt;Each item in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/rows&#34;&gt;Rows&lt;/a&gt; collection represents a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/row&#34;&gt;Row&lt;/a&gt; object. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/row&#34;&gt;Row&lt;/a&gt; object offers the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/row/methods/applystyle&#34;&gt;ApplyStyle&lt;/a&gt; method used to set the row&amp;rsquo;s formatting. To apply the same formatting to a row, use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object. The steps below show how to use it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object to the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class by calling its &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/methods/createstyle&#34;&gt;CreateStyle&lt;/a&gt; method.&lt;/li&gt;
&lt;li&gt;Set the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&amp;rsquo;s properties to apply formatting settings.&lt;/li&gt;
&lt;li&gt;Make the relevant attributes ON for the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/styleflag&#34;&gt;StyleFlag&lt;/a&gt; object.&lt;/li&gt;
&lt;li&gt;Assign the configured &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object to the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/row&#34;&gt;Row&lt;/a&gt; object.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;formatting-a-column&#34;&gt;Formatting a Column&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection also provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/columns&#34;&gt;Columns&lt;/a&gt; collection. Each item in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/columns&#34;&gt;Columns&lt;/a&gt; collection represents a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/column&#34;&gt;Column&lt;/a&gt; object. Similar to a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/row&#34;&gt;Row&lt;/a&gt; object, the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/column&#34;&gt;Column&lt;/a&gt; object also offers the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/column/methods/applystyle&#34;&gt;ApplyStyle&lt;/a&gt; method for formatting a column.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Specifying DBNum Custom Pattern Formatting</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/specifying&#43;dbnum&#43;custom&#43;pattern&#43;formatting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/specifying&#43;dbnum&#43;custom&#43;pattern&#43;formatting/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--specifying-dbnum-custom-pattern-formatting&#34;&gt;Aspose.Cells for .NET : Specifying DBNum Custom Pattern Formatting&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Aspose.Cells supports the *DBNum *custom pattern formatting. For example, if your cell value is &lt;code&gt;123&lt;/code&gt; and you specify its custom formatting as &lt;code&gt;[DBNum2][$-804]General&lt;/code&gt; then it will be displayed like &lt;code&gt;壹佰贰拾叁&lt;/code&gt;. You can specify your custom formatting of the cell using &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getstyle&#34;&gt;Cell.GetStyle()&lt;/a&gt; method and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/custom&#34;&gt;Style.Custom&lt;/a&gt; property.&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;
&lt;p&gt;The following sample code illustrates how to specify *DBNum *custom pattern formatting. Please check its &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/42730016/43352081.pdf&#34;&gt;output PDF&lt;/a&gt; for more help.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Configuring Alignment Settings</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/configuring&#43;alignment&#43;settings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/configuring&#43;alignment&#43;settings/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--configuring-alignment-settings&#34;&gt;Aspose.Cells for .NET : Configuring Alignment Settings&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#configuring-alignment-settings&#34;&gt;Configuring Alignment Settings&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#alignment-settings-in-microsoft-excel&#34;&gt;Alignment settings in Microsoft Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#alignment-settings-in-aspose.cells&#34;&gt;Alignment settings in Aspose.Cells&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.2.1 &lt;a href=&#34;#horizontal-alignment&#34;&gt;Horizontal Alignment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.2 &lt;a href=&#34;#vertical-alignment&#34;&gt;Vertical Alignment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.3 &lt;a href=&#34;#indentation&#34;&gt;Indentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.4 &lt;a href=&#34;#orientation&#34;&gt;Orientation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.5 &lt;a href=&#34;#text-control&#34;&gt;Text Control&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.2.5.1 &lt;a href=&#34;#wrapping-text&#34;&gt;Wrapping Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.5.2 &lt;a href=&#34;#shrinking-to-fit&#34;&gt;Shrinking to Fit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.5.3 &lt;a href=&#34;#merging-cells&#34;&gt;Merging Cells&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.5.4 &lt;a href=&#34;#text-direction&#34;&gt;Text Direction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;configuring-alignment-settings&#34;&gt;Configuring Alignment Settings&lt;/h2&gt;
&lt;h3 id=&#34;alignment-settings-in-microsoft-excel&#34;&gt;Alignment settings in Microsoft Excel&lt;/h3&gt;
&lt;p&gt;Anyone who has used Microsoft Excel to format cells will be familiar with the alignment settings in Microsoft Excel.&lt;/p&gt;
&lt;p&gt;As you can see from the above figure, there are different kinds of alignment options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Text alignment(horizontal &amp;amp; vertical)&lt;/li&gt;
&lt;li&gt;Indentation.&lt;/li&gt;
&lt;li&gt;Orientation.&lt;/li&gt;
&lt;li&gt;Text control.&lt;/li&gt;
&lt;li&gt;Text direction.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these alignment settings are fully supported by Aspose.Cells and are discussed in more detail below.&lt;/p&gt;
&lt;h3 id=&#34;alignment-settings-in-asposecells&#34;&gt;Alignment settings in Aspose.Cells&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt;, that represents an Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt;class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to each worksheet in the Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection. Each item in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection represents an object of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getstyle&#34;&gt;GetStyle&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/setstyle&#34;&gt;SetStyle&lt;/a&gt; methods for the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class that are used to get and set a cell&amp;rsquo;s formatting. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; class provides useful properties for configuring alignment settings.&lt;/p&gt;
&lt;p&gt;Select any text alignment type using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/textalignmenttype&#34;&gt;TextAlignmentType&lt;/a&gt; enumeration. The pre-defined text alignment types in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/textalignmenttype&#34;&gt;TextAlignmentType&lt;/a&gt; enumeration are:&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Text Alignment Types&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Bottom&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents bottom text alignment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Center&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents center text alignment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CenterAcross&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents center across text alignment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Distributed&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents distributed text alignment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Fill&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents fill text alignment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;General&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents general text alignment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Justify&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents justify text alignment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Left&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents left text alignment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Right&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents right text alignment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Top&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Represents top text alignment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;JustifiedLow&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Aligns the text with an adjusted kashida length for Arabic text.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ThaiDistributed&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Distributes Thai text especially, because each character is treated as a word.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;p&gt;You can also apply the justify distributed setting using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/isjustifydistributed&#34;&gt;Style.IsJustifyDistributed&lt;/a&gt; property.&lt;/p&gt;
&lt;h4 id=&#34;horizontal-alignment&#34;&gt;Horizontal Alignment&lt;/h4&gt;
&lt;p&gt;Use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/horizontalalignment&#34;&gt;HorizontalAlignment&lt;/a&gt; property to align the text horizontally.&lt;/p&gt;
&lt;h4 id=&#34;vertical-alignment&#34;&gt;Vertical Alignment&lt;/h4&gt;
&lt;p&gt;Similar to horizontal alignment, use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/verticalalignment&#34;&gt;VerticalAlignment&lt;/a&gt; property to align the text vertically.&lt;/p&gt;
&lt;h4 id=&#34;indentation&#34;&gt;Indentation&lt;/h4&gt;
&lt;p&gt;It is possible to set the indentation level of the text in a cell with the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/indentlevel&#34;&gt;IndentLevel&lt;/a&gt; property.&lt;/p&gt;
&lt;h4 id=&#34;orientation&#34;&gt;Orientation&lt;/h4&gt;
&lt;p&gt;Set the orientation (rotation) of the text in a cell with the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/rotationangle&#34;&gt;RotationAngle&lt;/a&gt; property.&lt;/p&gt;
&lt;h4 id=&#34;text-control&#34;&gt;Text Control&lt;/h4&gt;
&lt;p&gt;The following section discusses how to control text by setting text wrapping, shrink to fit and other formatting options.&lt;/p&gt;
&lt;h5 id=&#34;wrapping-text&#34;&gt;Wrapping Text&lt;/h5&gt;
&lt;p&gt;Wrapping text in a cell makes it easier to read: the height of the cell adjusts to fit all the text, instead of cutting it off or spilling over into adjacent cells. Set text wrapping on or off with the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/istextwrapped&#34;&gt;IsTextWrapped&lt;/a&gt; property.&lt;/p&gt;
&lt;h5 id=&#34;shrinking-to-fit&#34;&gt;Shrinking to Fit&lt;/h5&gt;
&lt;p&gt;An option to wrapping text in a field is to shrink the text size to fit a cell&amp;rsquo;s dimensions. This is done by setting the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/istextwrapped&#34;&gt;IsTextWrapped&lt;/a&gt; property to &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;
&lt;h5 id=&#34;merging-cells&#34;&gt;Merging Cells&lt;/h5&gt;
&lt;p&gt;Like Microsoft Excel, Aspose.Cells supports merging several cells into one. Aspose.Cells provides two approaches to this task. One way is to call the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/merge/index&#34;&gt;Merge&lt;/a&gt; method. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/merge/index&#34;&gt;Merge&lt;/a&gt; method takes the following parameters to merge the cells:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First row: the first row from where to start merging.&lt;/li&gt;
&lt;li&gt;First column: the first column from where to start merging.&lt;/li&gt;
&lt;li&gt;Number of rows: the number of rows to merge.&lt;/li&gt;
&lt;li&gt;Number of columns: the number of columns to merge.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The other way is to first call the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/createrange/index&#34;&gt;CreateRange&lt;/a&gt; method to create a range of the cells to be merged. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/createrange/index&#34;&gt;CreateRange&lt;/a&gt; method takes the same set of parameters as that of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/merge/index&#34;&gt;Merge&lt;/a&gt; method discussed above and returns a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range&#34;&gt;Range&lt;/a&gt; object. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range&#34;&gt;Range&lt;/a&gt; object also provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range/methods/merge&#34;&gt;Merge&lt;/a&gt; method that merges the range specified in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range&#34;&gt;Range&lt;/a&gt; object.&lt;/p&gt;
&lt;h5 id=&#34;text-direction&#34;&gt;Text Direction&lt;/h5&gt;
&lt;p&gt;It is possible to set the reading order of text in cells. The reading order is the visual order in which characters, words, etc. are displayed. For example, English is a left to right language while Arabic is a right to left language.&lt;/p&gt;
&lt;p&gt;The reading order is set with the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/textdirection&#34;&gt;TextDirection&lt;/a&gt; property. Aspose.Cells provides pre-defined text direction types in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/textdirectiontype&#34;&gt;TextDirectionType&lt;/a&gt; enumeration.&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Text Direction Types&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Context&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The reading order consistent with the language of the first entered character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;LeftToRight&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Left to right reading order&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;RightToLeft&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Right to left reading order&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Data Sorting</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/data&#43;sorting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/data&#43;sorting/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--data-sorting&#34;&gt;Aspose.Cells for .NET : Data Sorting&lt;/h1&gt;
&lt;p&gt;Data sorting is one of Microsoft Excel&amp;rsquo;s many useful features. It allows users to order data to make it easier to scan. Aspose.Cells lets developers sort worksheet data alphabetically or numerically which works in the same way as Microsoft Excel does to sort data.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#sorting-data-in-microsoft-excel&#34;&gt;Sorting Data in Microsoft Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#sorting-data-with-aspose.cells&#34;&gt;Sorting Data with Aspose.Cells&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#sorting-data-with-background-colour%C2%A0&#34;&gt;Sorting data with background colour &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;sorting-data-in-microsoft-excel&#34;&gt;Sorting Data in Microsoft Excel&lt;/h2&gt;
&lt;p&gt;To sort data in Microsoft Excel:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select &lt;strong&gt;Data&lt;/strong&gt; from the &lt;strong&gt;Sort&lt;/strong&gt; menu. The Sort dialog will be displayed.&lt;/li&gt;
&lt;li&gt;Select a sorting option.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Generally, sorting is performed on a list - defined as a contiguous group of data where the data is displayed in columns.&lt;/p&gt;
&lt;h2 id=&#34;sorting-data-with-asposecells&#34;&gt;Sorting Data with Aspose.Cells&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/datasorter&#34;&gt;DataSorter&lt;/a&gt; class used to sort data in ascending or descending order. The class has some important members, for example, properties like &lt;code&gt;Key1&lt;/code&gt; &amp;hellip; &lt;code&gt;Key3&lt;/code&gt; and &lt;code&gt;Order1&lt;/code&gt; &amp;hellip; &lt;code&gt;Order3&lt;/code&gt;. These members are used to define sorted keys and specify the key sort order.&lt;/p&gt;
&lt;p&gt;You have to define keys and set the sort order before implementing data sorting. The class provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/datasorter/methods/sort/index&#34;&gt;Sort&lt;/a&gt; method used to perform data sorting based on the cell data in a worksheet.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.datasorter/sort/methods/1&#34;&gt;Sort&lt;/a&gt; method accepts the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Aspose.Cells.Cells&lt;/a&gt;, the cells for the underlying worksheet.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cellarea&#34;&gt;Aspose.Cells.CellArea&lt;/a&gt;, the range of cells. Define the cell area before applying data sorting.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This example uses the template file &amp;ldquo;Book1.xls&amp;rdquo; created in Microsoft Excel. After executing the code below, data is sorted appropriately.&lt;/p&gt;
&lt;p&gt;If you want to sort &lt;em&gt;LeftToRight&lt;/em&gt;, use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/datasorter/properties/sortlefttoright&#34;&gt;DataSorter.SortLeftToRight&lt;/a&gt; attribute.&lt;/p&gt;
&lt;h3 id=&#34;sorting-data-with-background-colour&#34;&gt;Sorting data with background colour &lt;/h3&gt;
&lt;p&gt;Excel provides features to sort data based on the background colour. The same feature is provided using Aspose.Cells using DataSorter where &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/sortontype&#34;&gt;SortOnType&lt;/a&gt;.CellColor can be used in &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/datasorter/methods/addkey&#34;&gt;AddKey()&lt;/a&gt; to sort data based on the background color. All the cells which contain specified color in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/datasorter/methods/addkey&#34;&gt;AddKey()&lt;/a&gt;, function are placed on top or bottom according to the SortOrder setting and order of the rest of the cells is not changed at all.&lt;/p&gt;
&lt;p&gt;Following are the sample files which can be downloaded for testing this feature:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5025104/81920906.xlsx&#34;&gt;sampleBackGroundFile.xlsx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5025104/81920907.xlsx&#34;&gt;outputsampleBackGroundFile.xlsx&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Specifying Sort Warning While Sorting Data</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/specifying&#43;sort&#43;warning&#43;while&#43;sorting&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/specifying&#43;sort&#43;warning&#43;while&#43;sorting&#43;data/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--specifying-sort-warning-while-sorting-data&#34;&gt;Aspose.Cells for .NET : Specifying Sort Warning While Sorting Data&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Please consider this textual data i.e. {11, 111, 22}. This textual data is sorted because, in terms of text, 111 comes before 22. But, if you want to sort this data not as text but as numbers, then it will become {11, 22, 111} because numerically 111 comes after 22. Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/datasorter/properties/sortasnumber&#34;&gt;DataSorter.SortAsNumber&lt;/a&gt; property to deal with this issue. Please set this property &lt;strong&gt;true&lt;/strong&gt; and your textual data will be sorted as numerical data. The following screenshot shows the sort warning shown by Microsoft Excel when textual data which looks like numerical data is sorted.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/42729848/43352084.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;
&lt;p&gt;The following sample code illustrates the usage of &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/datasorter/properties/sortasnumber&#34;&gt;DataSorter.SortAsNumber&lt;/a&gt; property as explained earlier. Please check its &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/42729848/43352075.xlsx&#34;&gt;sample Excel file&lt;/a&gt; and &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/42729848/43352076.xlsx&#34;&gt;output Excel file&lt;/a&gt; for more help.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Dealing with Font Settings</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/dealing&#43;with&#43;font&#43;settings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/dealing&#43;with&#43;font&#43;settings/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--dealing-with-font-settings&#34;&gt;Aspose.Cells for .NET : Dealing with Font Settings&lt;/h1&gt;
&lt;p&gt;The look and feel of a text can be controlled by changing font settings. The font settings may include the name, style, size, color and other effects of the fonts. Just like Microsoft Excel, Aspose.Cells also supports configuring the font settings of the cells.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#configuring-font-settings&#34;&gt;Configuring Font Settings&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#setting-font-name&#34;&gt;Setting Font Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#setting-font-style-to-bold&#34;&gt;Setting Font Style to Bold&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3 &lt;a href=&#34;#setting-font-size&#34;&gt;Setting Font Size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.4 &lt;a href=&#34;#setting-font-color&#34;&gt;Setting Font Color&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.5 &lt;a href=&#34;#setting-font-underline-type&#34;&gt;Setting Font Underline Type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.6 &lt;a href=&#34;#setting-strikeout-effect&#34;&gt;Setting Strikeout Effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.7 &lt;a href=&#34;#setting-subscript-effect&#34;&gt;Setting Subscript Effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.8 &lt;a href=&#34;#setting-superscript-effect-on-font&#34;&gt;Setting Superscript Effect on Font&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;configuring-font-settings&#34;&gt;Configuring Font Settings&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to each worksheet in an Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection. Each item in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection represents an object of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class&amp;rsquo; &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getstyle&#34;&gt;GetStyle&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/setstyle&#34;&gt;SetStyle&lt;/a&gt; methods which are used to get and set a cell&amp;rsquo;s formatting style. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; class provides properties for configuring font settings.&lt;/p&gt;
&lt;h3 id=&#34;setting-font-name&#34;&gt;Setting Font Name&lt;/h3&gt;
&lt;p&gt;Developers can apply any font to text inside a cell by using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/font&#34;&gt;Style.Font&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/font/properties/name&#34;&gt;Name&lt;/a&gt; property.&lt;/p&gt;
&lt;h3 id=&#34;setting-font-style-to-bold&#34;&gt;Setting Font Style to Bold&lt;/h3&gt;
&lt;p&gt;Developers can make text bold by setting the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/font&#34;&gt;Style.Font&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/font/properties/isbold&#34;&gt;IsBold&lt;/a&gt; property to &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;setting-font-size&#34;&gt;Setting Font Size&lt;/h3&gt;
&lt;p&gt;Set the font size with the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/font&#34;&gt;Style.Font&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/font/properties/size&#34;&gt;Size&lt;/a&gt; property.&lt;/p&gt;
&lt;h3 id=&#34;setting-font-color&#34;&gt;Setting Font Color&lt;/h3&gt;
&lt;p&gt;Use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/font&#34;&gt;Style.Font&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/font/properties/color&#34;&gt;Color&lt;/a&gt; property to set the font color. Select any color from the &lt;code&gt;Color&lt;/code&gt; enumeration (part of the .NET framework) and assign it to the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/font/properties/color&#34;&gt;Color&lt;/a&gt; property.&lt;/p&gt;
&lt;h3 id=&#34;setting-font-underline-type&#34;&gt;Setting Font Underline Type&lt;/h3&gt;
&lt;p&gt;Use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/font&#34;&gt;Style.Font&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/font/properties/underline&#34;&gt;Underline&lt;/a&gt; property to underline text. Aspose.Cells offers various pre-defined font underline types in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/fontunderlinetype&#34;&gt;FontUnderlineType&lt;/a&gt; enumeration.&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Font Underline Types&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Accounting&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A single accounting underline&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Double&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Double underline&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DoubleAccounting&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Double accounting underline&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No underline&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Single&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A single underline&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;h3 id=&#34;setting-strikeout-effect&#34;&gt;Setting Strikeout Effect&lt;/h3&gt;
&lt;p&gt;Apply strikeout by setting the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/font&#34;&gt;Style.Font&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/font/properties/isstrikeout&#34;&gt;IsStrikeout&lt;/a&gt; property to &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;setting-subscript-effect&#34;&gt;Setting Subscript Effect&lt;/h3&gt;
&lt;p&gt;Apply subscript by setting the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/font&#34;&gt;Style.Font&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/font/properties/issubscript&#34;&gt;IsSubScript&lt;/a&gt; property to &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;setting-superscript-effect-on-font&#34;&gt;Setting Superscript Effect on Font&lt;/h3&gt;
&lt;p&gt;Developers can apply the superscript effect on the font by setting the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/font/properties/issuperscript&#34;&gt;IsSuperscript&lt;/a&gt;  property of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/font&#34;&gt;Style.Font&lt;/a&gt; object to &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Find or Search Data</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/find&#43;or&#43;search&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/find&#43;or&#43;search&#43;data/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--find-or-search-data&#34;&gt;Aspose.Cells for .NET : Find or Search Data&lt;/h1&gt;
&lt;p&gt;Microsoft Excel allows users to find cells in a worksheet that contains specified data.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#finding-cells-containing-specified-data&#34;&gt;Finding Cells Containing Specified Data&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#using-microsoft-excel&#34;&gt;Using Microsoft Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#using-aspose.cells&#34;&gt;Using Aspose.Cells&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#finding-cells-containing-a-formula&#34;&gt;Finding Cells Containing a Formula&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#finding-data-or-formulas-using-findoptions&#34;&gt;Finding Data or Formulas using FindOptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#finding-cells-containing-specified-string-value-or-number&#34;&gt;Finding Cells Containing Specified String Value or Number&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;finding-cells-containing-specified-data&#34;&gt;Finding Cells Containing Specified Data&lt;/h2&gt;
&lt;h3 id=&#34;using-microsoft-excel&#34;&gt;Using Microsoft Excel&lt;/h3&gt;
&lt;p&gt;Microsoft Excel allows users to find cells in a worksheet that contains specified data. If you select &lt;strong&gt;Edit&lt;/strong&gt; from the &lt;strong&gt;Find&lt;/strong&gt; menu in Microsoft Excel, you will see a dialog where you can specify the search value.&lt;/p&gt;
&lt;p&gt;Here, we are looking for the value &amp;ldquo;Oranges&amp;rdquo;. Aspose.Cells also allows developers to find cells in the worksheet containing specified values.&lt;/p&gt;
&lt;h3 id=&#34;using-asposecells&#34;&gt;Using Aspose.Cells&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt;, that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to each worksheet in the Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection that represents all cells in the worksheet. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection provides several methods for finding cells in a worksheet containing user-specified data. A few of these methods are discussed below in more detail.&lt;/p&gt;
&lt;p&gt;All &lt;code&gt;Find&lt;/code&gt; methods return the references of the cells containing the specified data to search.&lt;/p&gt;
&lt;h2 id=&#34;finding-cells-containing-a-formula&#34;&gt;Finding Cells Containing a Formula&lt;/h2&gt;
&lt;p&gt;Developers can find a specified formula in the worksheet by calling the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/find/index&#34;&gt;Find&lt;/a&gt; method. Typically, the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/find/index&#34;&gt;Find&lt;/a&gt; method accepts three parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Object: **The object to search for. The type should be int,double,DateTime,string,bool.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Previous cell:&lt;/strong&gt; Previous cell with the same object. This parameter can be set to null if searching from the start.&lt;/li&gt;
&lt;li&gt;FindOptions: Options for finding the required object.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The examples below use worksheet data for practicing find methods:&lt;/p&gt;
&lt;h2 id=&#34;finding-data-or-formulas-using-findoptions&#34;&gt;Finding Data or Formulas using FindOptions&lt;/h2&gt;
&lt;p&gt;It is possible to find specified values using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/find/index&#34;&gt;Find&lt;/a&gt; method with various &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/findoptions&#34;&gt;FindOptions&lt;/a&gt;. Typically, the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/find/index&#34;&gt;Find&lt;/a&gt; method accepts the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Search value&lt;/strong&gt;, the data or value to be searched for.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Previous cell&lt;/strong&gt;, the last cell that contained the same value. This parameter can be set to null when searching from the start.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Find options&lt;/strong&gt;, the find options.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;finding-cells-containing-specified-string-value-or-number&#34;&gt;Finding Cells Containing Specified String Value or Number&lt;/h2&gt;
&lt;p&gt;It is possible to find specified string values by calling the same &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/find/index&#34;&gt;Find&lt;/a&gt; method found in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection with various &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/findoptions&#34;&gt;FindOptions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Specify the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/findoptions/properties/lookintype&#34;&gt;FindOptions.LookInType&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/findoptions/properties/lookattype&#34;&gt;FindOptions.LookAtType&lt;/a&gt; properties. The following example code illustrates how to use these properties to find cells with various number or strings at the &lt;strong&gt;beginning&lt;/strong&gt; or at the &lt;strong&gt;center&lt;/strong&gt; or at the &lt;strong&gt;end&lt;/strong&gt; of the cell&amp;rsquo;s string.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Import Data into Worksheet</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/import&#43;data&#43;into&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/import&#43;data&#43;into&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--import-data-into-worksheet&#34;&gt;Aspose.Cells for .NET : Import Data into Worksheet&lt;/h1&gt;
&lt;p&gt;This article discusses some data import techniques that developers have access to through Aspose.Cells.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#import-data-into-worksheet&#34;&gt;Import Data into Worksheet&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#importing-from-array&#34;&gt;Importing from Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#importing-from-arraylist&#34;&gt;Importing from ArrayList&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3 &lt;a href=&#34;#importing-from-custom-objects&#34;&gt;Importing from Custom Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.4 &lt;a href=&#34;#importing-from-custom-objects-to-merged-area&#34;&gt;Importing from Custom Objects to merged area&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.5 &lt;a href=&#34;#importing-from-datatable&#34;&gt;Importing from DataTable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.6 &lt;a href=&#34;#importing-from-dynamic-object-as-data-source&#34;&gt;Importing from dynamic object as data source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.7 &lt;a href=&#34;#importing-from-datacolumn-(.net)&#34;&gt;Importing from DataColumn (.NET)&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;1.8 &lt;a href=&#34;#importing-from-dataview-(.net)&#34;&gt;Importing from DataView (.NET)&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;1.9 &lt;a href=&#34;#importing-from-datagrid-(.net)&#34;&gt;Importing from DataGrid (.NET)&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;1.10 &lt;a href=&#34;#importing-from-gridview&#34;&gt;Importing from GridView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.11 &lt;a href=&#34;#importing-html-formatted-data&#34;&gt;Importing HTML formatted data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.12 &lt;a href=&#34;#importing-data-from-json&#34;&gt;Importing Data from JSON&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;import-data-into-worksheet&#34;&gt;Import Data into Worksheet&lt;/h2&gt;
&lt;p&gt;When you open an Excel file with Aspose.Cells, all data in the file is automatically imported. Aspose.Cells can also import data from other data sources.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/properties/worksheets&#34;&gt;Worksheets&lt;/a&gt; collection that allows access to each worksheet in an Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt;class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection. &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection provides useful methods to import data from different data sources. This article explains how these methods can be used.&lt;/p&gt;
&lt;h3 id=&#34;importing-from-array&#34;&gt;Importing from Array&lt;/h3&gt;
&lt;p&gt;To import data to a spreadsheet from an array, call the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importarray/index&#34;&gt;ImportArray&lt;/a&gt; method of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt;collection. There are many overloaded versions of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importarray/index&#34;&gt;ImportArray&lt;/a&gt; method but a typical overload takes the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Array&lt;/strong&gt;, the array object that you&amp;rsquo;re importing content from.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Row number&lt;/strong&gt;, the row number of the first cell that the data will be imported to.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Column number&lt;/strong&gt;, the column number of the first cell that the data will be imported to.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is vertical&lt;/strong&gt;, a Boolean value that specifies whether to import data vertically or horizontally.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;importing-from-arraylist&#34;&gt;Importing from ArrayList&lt;/h3&gt;
&lt;p&gt;To import data from an *ArrayList *to worksheets, call the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importarraylist&#34;&gt;ImportArrayList&lt;/a&gt; method. The &lt;code&gt;ImportArray&lt;/code&gt; method takes the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Array list&lt;/strong&gt;, represents the *ArrayList *object you&amp;rsquo;re importing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Row number&lt;/strong&gt;, represents the row number of the first cell that the data will be imported to.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Column number&lt;/strong&gt;, represents the column number of the first cell that the data will be imported to.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is vertical&lt;/strong&gt;, a Boolean value that specifies whether to import data vertically or horizontally.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;importing-from-custom-objects&#34;&gt;Importing from Custom Objects&lt;/h3&gt;
&lt;p&gt;To import data from a collection of objects to a worksheet, use &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importcustomobjects/index&#34;&gt;ImportCustomObjects&lt;/a&gt;. Provide a list of columns/properties to the method to display your desired list of objects.&lt;/p&gt;
&lt;h3 id=&#34;importing-from-custom-objects-to-merged-area&#34;&gt;Importing from Custom Objects to merged area&lt;/h3&gt;
&lt;p&gt;To import data from a collection of objects to a worksheet containing merged cells, use &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/importtableoptions/properties/checkmergedcells&#34;&gt;ImportTableOptions.CheckMergedCells&lt;/a&gt; property. If the Excel template has merged cells, set the value of &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/importtableoptions/properties/checkmergedcells&#34;&gt;ImportTableOptions.CheckMergedCells&lt;/a&gt; property to true. Pass the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/importtableoptions&#34;&gt;ImportTableOptions&lt;/a&gt; object along with the list of columns/properties to the method to display your desired list of objects. The following code sample demonstrates the use of &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/importtableoptions/properties/checkmergedcells&#34;&gt;ImportTableOptions.CheckMergedCells&lt;/a&gt; property to import data from Custom Objects to merged cells. Please see the attached &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5025402/90112033.xlsx&#34;&gt;source Excel&lt;/a&gt; file and the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5025402/90112034.xlsx&#34;&gt;output Excel&lt;/a&gt; file for reference.&lt;/p&gt;
&lt;h3 id=&#34;importing-from-datatable&#34;&gt;Importing from DataTable&lt;/h3&gt;
&lt;p&gt;To import data from a &lt;em&gt;DataTable&lt;/em&gt;, call the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importdatatable/index&#34;&gt;ImportDataTable&lt;/a&gt; method. There are many overloaded versions of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importdatatable/index&#34;&gt;ImportDataTable&lt;/a&gt; method but a typical overload takes the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Data table&lt;/strong&gt;, the &lt;em&gt;DataTable&lt;/em&gt; object that you&amp;rsquo;re importing the content from.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is field name shown&lt;/strong&gt;, specifies whether the names of the *DataTable *columns should be imported to the worksheet as a first row or not.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Start cell&lt;/strong&gt;, represents the name of the start cell (for example &amp;ldquo;A1&amp;rdquo;) from where to import the contents of the &lt;em&gt;DataTable&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;importing-from-dynamic-object-as-data-source&#34;&gt;Importing from dynamic object as data source&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides features to work with dynamic objects as datasource. It helps in using datasource where properties are added dynamically to the objects. Once the properties are added to the object, Aspose.Cells considers the first entry as the template and handles the rest accordingly. It means if some dynamic property is added to a first item only and not to other objects, Aspose.Cells considers that all items in the collection should be the same.&lt;/p&gt;
&lt;p&gt;In this example, a template model is used which initially contains two variables only. This List is converted to List of dynamic objects. Then some additional field is added into it and finally loaded into the workbook. The workbook picks only those values which are in the template XLSX file. This template workbook uses Smart Markers which also contain parameters. Parameters allow you to modify how the information is laid out. Details about the Smart Markers can be obtained from the following article:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/developerguide/smartmarkers/using+smart+markers#usingsmartmarkers-designerspreadsheet&amp;amp;smartmarkers&#34;&gt;Using Smart Markers&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;importing-from-datacolumn-net&#34;&gt;Importing from DataColumn (.NET)&lt;/h3&gt;
&lt;p&gt;A *DataTable *or *DataView *object is composed of one or more columns. Developers can also import data from any Column/Columnsof the *DataTable *or *DataView *by calling the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importdata/index&#34;&gt;ImportData&lt;/a&gt; method of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importdata/index&#34;&gt;ImportData&lt;/a&gt; method accepts a parameter of type &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/importtableoptions&#34;&gt;ImportTableOptions&lt;/a&gt;. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/importtableoptions&#34;&gt;ImportTableOptions&lt;/a&gt; class provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/importtableoptions/properties/columnindexes&#34;&gt;ColumnIndexes&lt;/a&gt; property that accepts an array of columns indexes. &lt;/p&gt;
&lt;p&gt;The sample code given below demonstrates the use of &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/importtableoptions/properties/columnindexes&#34;&gt;ImportTableOptions.ColumnIndexes &lt;/a&gt;to import selective columns.&lt;/p&gt;
&lt;h3 id=&#34;importing-from-dataview-net&#34;&gt;Importing from DataView (.NET)&lt;/h3&gt;
&lt;p&gt;To import data from a &lt;em&gt;DataView&lt;/em&gt;, call the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importdata/index&#34;&gt;ImportData&lt;/a&gt; method. There are many overloaded versions of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importdata/index&#34;&gt;ImportData&lt;/a&gt; method but the one for DataView takes the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DataView:&lt;/strong&gt; The *DataView *object that you&amp;rsquo;re about to import content from.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;First Row:&lt;/strong&gt; the row number of the first cell that the data will be imported to.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;First Column:&lt;/strong&gt; the column number of the first cell that the data will be imported to.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ImportTableOptions:&lt;/strong&gt; The import options.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;importing-from-datagrid-net&#34;&gt;Importing from DataGrid (.NET)&lt;/h3&gt;
&lt;p&gt;It is possible to import data from a *DataGrid *by calling the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importdatagrid/index&#34;&gt;ImportDataGrid&lt;/a&gt; method of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection. There are many overloaded versions of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importdatagrid/index&#34;&gt;ImportDataGrid&lt;/a&gt; method but a typical overload takes the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Data grid&lt;/strong&gt;, the *DataGrid *object that you&amp;rsquo;re importing content from.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Row Number&lt;/strong&gt;, the row number of the first cell that the data will be imported to.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Column Number&lt;/strong&gt;, the column number of the first cell that the data will be imported to.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Insert Rows&lt;/strong&gt;, a Boolean property that indicates whether extra rows should be added to the worksheet to fit data or not.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;importing-from-gridview&#34;&gt;Importing from GridView&lt;/h3&gt;
&lt;p&gt;To import data from a &lt;em&gt;GridView&lt;/em&gt; control, call the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/importgridview&#34;&gt;ImportGridView&lt;/a&gt; method of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/properties/cells&#34;&gt;Cells&lt;/a&gt; collection.&lt;/p&gt;
&lt;p&gt;Aspose.Cells allows us to respect HTML formatted values while importing data to the spreadsheet. When HTML parsing is enabled while importing data, Aspose.Cells converts the HTML into corresponding cell formatting.&lt;/p&gt;
&lt;h3 id=&#34;importing-html-formatted-data&#34;&gt;Importing HTML formatted data&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; class that provides very useful methods for importing data from external data sources. This article shows how to parse HTML formatted text while importing data and convert the HTML into formatted cell values.&lt;/p&gt;
&lt;h3 id=&#34;importing-data-from-json&#34;&gt;Importing Data from JSON&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonutility&#34;&gt;JsonUtility&lt;/a&gt; class for processing JSON. &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonutility&#34;&gt;JsonUtility&lt;/a&gt; class has an &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonutility/methods/importdata&#34;&gt;ImportData&lt;/a&gt; method for importing JSON data. Aspose.Cells also provides a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonlayoutoptions&#34;&gt;JsonLayoutOptions&lt;/a&gt; class that represents the options of JSON layout. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonutility/methods/importdata&#34;&gt;ImportData&lt;/a&gt; method accepts &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonlayoutoptions&#34;&gt;JsonLayoutOptions&lt;/a&gt; as a parameter. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonlayoutoptions&#34;&gt;JsonLayoutOptions&lt;/a&gt; class provides the following properties.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonlayoutoptions/properties/arrayastable&#34;&gt;ArrayAsTable&lt;/a&gt;: Indicates in the array should be processed as a table or not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonlayoutoptions/properties/convertnumericordate&#34;&gt;ConvertNumericOrDate&lt;/a&gt;: Gets or sets a value that indicates whether the string in JSON is to be converted to numeric or date.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonlayoutoptions/properties/dateformat&#34;&gt;DateFormat&lt;/a&gt;: Gets and sets the format of the date value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonlayoutoptions/properties/ignorearraytitle&#34;&gt;IgnoreArrayTitle&lt;/a&gt;: Indicates whether to ignore the title if the property of the object is an array&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonlayoutoptions/properties/ignorenull&#34;&gt;IgnoreNull&lt;/a&gt;: Indicates whether the null value should be ignored or not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonlayoutoptions/properties/ignoreobjecttitle&#34;&gt;IgnoreObjectTitle&lt;/a&gt;: Indicates whether to ignore the title if the property of the object is an object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonlayoutoptions/properties/numberformat&#34;&gt;NumberFormat&lt;/a&gt;: Gets and sets the format of numeric value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonlayoutoptions/properties/titlestyle&#34;&gt;TitleStyle&lt;/a&gt;: Gets and sets the style of the title.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The sample code given below demonstrates the use of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonutility&#34;&gt;JsonUtility&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.utility/jsonlayoutoptions&#34;&gt;JsonLayoutOptions&lt;/a&gt; classes to import JSON data.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Export Data from Worksheet</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/export&#43;data&#43;from&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/export&#43;data&#43;from&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--export-data-from-worksheet&#34;&gt;Aspose.Cells for .NET : Export Data from Worksheet&lt;/h1&gt;
&lt;p&gt;This article discusses some data export techniques that developers have access to through Aspose.Cells.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#export-data-from-worksheet&#34;&gt;Export Data from Worksheet&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#exporting-data-to-datatable-using-aspose.cells&#34;&gt;Exporting Data to DataTable Using Aspose.Cells&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1.1 &lt;a href=&#34;#columns-containing-strongly-typed-data&#34;&gt;Columns Containing Strongly Typed Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.1.2 &lt;a href=&#34;#columns-containing-non-strongly-typed-data&#34;&gt;Columns Containing Non-Strongly Typed Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.1.3 &lt;a href=&#34;#export-range-with-flag-to-skip-column-name&#34;&gt;Export Range with flag to skip column name&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;export-data-from-worksheet&#34;&gt;Export Data from Worksheet&lt;/h2&gt;
&lt;p&gt;Aspose.Cells not only facilitates its users to import data to worksheets from external data sources but also allow them to export their worksheet data to a &lt;a href=&#34;https://docs.microsoft.com/en-gb/dotnet/api/system.data.datatable?view=netframework-4.8&#34;&gt;DataTable&lt;/a&gt;. As we know that &lt;a href=&#34;https://docs.microsoft.com/en-gb/dotnet/api/system.data.datatable?view=netframework-4.8&#34;&gt;DataTable&lt;/a&gt; is the part of ADO.NET and is used to hold data. Once the data is stored in a &lt;a href=&#34;https://docs.microsoft.com/en-gb/dotnet/api/system.data.datatable?view=netframework-4.8&#34;&gt;DataTable&lt;/a&gt;, it can be used in any way according to the requirements of users. Developers can also store this data (stored in &lt;a href=&#34;https://docs.microsoft.com/en-gb/dotnet/api/system.data.datatable?view=netframework-4.8&#34;&gt;DataTable&lt;/a&gt;) directly to a database if they wish. So, we can see that it becomes easier for the developers to manipulate worksheet data if it is exported to a &lt;a href=&#34;https://docs.microsoft.com/en-gb/dotnet/api/system.data.datatable?view=netframework-4.8&#34;&gt;DataTable&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;exporting-data-to-datatable-using-asposecells&#34;&gt;Exporting Data to DataTable Using Aspose.Cells&lt;/h3&gt;
&lt;p&gt;Developers can easily export their worksheet data to a &lt;a href=&#34;https://docs.microsoft.com/en-gb/dotnet/api/system.data.datatable?view=netframework-4.8&#34;&gt;DataTable&lt;/a&gt; object by calling either &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/exportdatatable/index&#34;&gt;ExportDataTable&lt;/a&gt; or &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/exportdatatableasstring/index&#34;&gt;ExportDataTableAsString&lt;/a&gt; method of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; class. Both methods are used in different scenarios, which are discussed below in more detail.&lt;/p&gt;
&lt;h4 id=&#34;columns-containing-strongly-typed-data&#34;&gt;Columns Containing Strongly Typed Data&lt;/h4&gt;
&lt;p&gt;We know that a spreadsheet stores data as a sequence of rows and columns. If all values in the columns of a worksheet are strongly typed (that means all values in a column must have the same data type) then we can export the worksheet content by calling the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/exportdatatable/index&#34;&gt;ExportDataTable&lt;/a&gt; method of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; class. &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/exportdatatable/index&#34;&gt;ExportDataTable&lt;/a&gt; method takes the following parameters to export worksheet data as &lt;a href=&#34;https://docs.microsoft.com/en-gb/dotnet/api/system.data.datatable?view=netframework-4.8&#34;&gt;DataTable&lt;/a&gt; object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Row number&lt;/strong&gt;, the row number of the first cell data will be exported from.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Column number&lt;/strong&gt;, the column number of the first cell the data will be exported from.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of rows&lt;/strong&gt;, the number of rows to export.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of columns&lt;/strong&gt;, the number of columns to export.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Export column names&lt;/strong&gt;, a Boolean property that indicates whether the data in the first row of the worksheet should be exported as column names of the &lt;a href=&#34;https://docs.microsoft.com/en-gb/dotnet/api/system.data.datatable?view=netframework-4.8&#34;&gt;DataTable&lt;/a&gt; or not.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;columns-containing-non-strongly-typed-data&#34;&gt;Columns Containing Non-Strongly Typed Data&lt;/h4&gt;
&lt;p&gt;If all values in the columns of a worksheet are not strongly typed (that means the values in a column may have the different data types) then we can export the worksheet content by calling the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/exportdatatableasstring/index&#34;&gt;ExportDataTableAsString&lt;/a&gt; method of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells&#34;&gt;Cells&lt;/a&gt; class. &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/exportdatatableasstring/index&#34;&gt;ExportDataTableAsString&lt;/a&gt; method takes the same set of parameters as that of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/exportdatatable/index&#34;&gt;ExportDataTable&lt;/a&gt; method to export worksheet data as a &lt;a href=&#34;https://docs.microsoft.com/en-gb/dotnet/api/system.data.datatable?view=netframework-4.8&#34;&gt;DataTable&lt;/a&gt; object.&lt;/p&gt;
&lt;h4 id=&#34;export-range-with-flag-to-skip-column-name&#34;&gt;Export Range with flag to skip column name&lt;/h4&gt;
&lt;p&gt;Data from a range can be exported to &lt;a href=&#34;https://docs.microsoft.com/en-gb/dotnet/api/system.data.datatable?view=netframework-4.8&#34;&gt;DataTable&lt;/a&gt; where a flag is available to skip header row in the exported data. Following code exports a range of data to &lt;a href=&#34;https://docs.microsoft.com/en-gb/dotnet/api/system.data.datatable?view=netframework-4.8&#34;&gt;DataTable&lt;/a&gt; with an argument &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/exporttableoptions&#34;&gt;ExportTableOptions&lt;/a&gt; which contains &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/exporttableoptions/properties/exportcolumnname&#34;&gt;ExportColumnName&lt;/a&gt; flag. It is set to &lt;strong&gt;true&lt;/strong&gt; if header information is there, hence it will not be included in data and set to &lt;strong&gt;false&lt;/strong&gt; if no header is there and all rows are to be considered as data.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Merging and Unmerging Cells</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/merging&#43;and&#43;unmerging&#43;cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/merging&#43;and&#43;unmerging&#43;cells/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--merging-and-unmerging-cells&#34;&gt;Aspose.Cells for .NET : Merging and Unmerging Cells&lt;/h1&gt;
&lt;p&gt;Aspose.Cells supports this feature and can also merge cells in a worksheet. You may unmerge, or split, the merged cells too. A merged cell&amp;rsquo;s cell reference is the reference for the top left cell in the original selected range.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#merging-cells-in-a-worksheet&#34;&gt;Merging Cells in a Worksheet&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#merging-cells-in-microsoft-excel&#34;&gt;Merging Cells in Microsoft Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2.2 &lt;a href=&#34;#merging-cells-with-aspose.cells&#34;&gt;Merging Cells with Aspose.Cells&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#unmerging-(splitting)-merged-cells&#34;&gt;Unmerging (Splitting) Merged Cells&lt;/a&gt;MergedCells)
&lt;ul&gt;
&lt;li&gt;3.1 &lt;a href=&#34;#using-microsoft-excel&#34;&gt;Using Microsoft Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.2 &lt;a href=&#34;#using-aspose.cells&#34;&gt;Using Aspose.Cells&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;You don&amp;rsquo;t always want the same number of cells in every row or column. For example, you might want to put a title in a cell that spans several columns. Or, if creating an invoice, you might want fewer columns for the total. To make one cell from two or more cells, merge them. Microsoft Excel lets users select files and merge them to structure the spreadsheet the way they want.&lt;/p&gt;
&lt;p&gt;Note that when cells are merged, only the data in the top left cells is retained. If there is data in the other cells in the range, this data is deleted.&lt;br&gt;
Formatting, likewise, is based on the reference cell so that when you merge cells, the formatting settings of the top left cell in the range are applied on the merged cell. When the cell is split, the new cells keep their original format settings.&lt;/p&gt;
&lt;h2 id=&#34;merging-cells-in-a-worksheet&#34;&gt;Merging Cells in a Worksheet&lt;/h2&gt;
&lt;h3 id=&#34;merging-cells-in-microsoft-excel&#34;&gt;Merging Cells in Microsoft Excel&lt;/h3&gt;
&lt;p&gt;The following steps describe how to merge cells in the worksheet using MS Excel.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Copy the data you want into the upper-leftmost cell within the range.&lt;/li&gt;
&lt;li&gt;Select the cells you want to merge.&lt;/li&gt;
&lt;li&gt;To merge cells in a row or column and center the cell contents, click &lt;strong&gt;Merge and Center&lt;/strong&gt; icon on the &lt;strong&gt;Formatting&lt;/strong&gt; toolbar.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;merging-cells-with-asposecells&#34;&gt;Merging Cells with Aspose.Cells&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;Aspose.Cells.Cells&lt;/code&gt; Class has some useful methods for the task. For example, the method &lt;code&gt;Merge()&lt;/code&gt; merges the cells into a single cell within a specified range.&lt;/p&gt;
&lt;p&gt;The following example shows how to merge cells (C6:E7) in a worksheet.&lt;/p&gt;
&lt;h2 id=&#34;unmerging-splitting-merged-cells&#34;&gt;Unmerging (Splitting) Merged Cells&lt;/h2&gt;
&lt;h3 id=&#34;using-microsoft-excel&#34;&gt;Using Microsoft Excel&lt;/h3&gt;
&lt;p&gt;The following steps describe how to split merged cells using Microsoft Excel.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select the merged cell.&lt;br&gt;
When cells have been combined, &lt;strong&gt;Merge and Center&lt;/strong&gt; is selected on the &lt;strong&gt;Formatting&lt;/strong&gt; toolbar.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Merge and Center&lt;/strong&gt; on the &lt;strong&gt;Formatting&lt;/strong&gt; toolbar.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;using-asposecells&#34;&gt;Using Aspose.Cells&lt;/h3&gt;
&lt;p&gt;The class &lt;code&gt;Aspose.Cells.Cells&lt;/code&gt; has a method named &lt;code&gt;UnMerge()&lt;/code&gt; that splits the cells into their original state. The method unmerges the cells using the cell&amp;rsquo;s reference in the merged cell range.&lt;/p&gt;
&lt;p&gt;The following example shows how to split the merged cells (C6). The example uses the file created in the previous example and splits the merged cells.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Create Access and Copy Named Ranges</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/create&#43;access&#43;and&#43;copy&#43;named&#43;ranges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/create&#43;access&#43;and&#43;copy&#43;named&#43;ranges/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--create-access-and-copy-named-ranges&#34;&gt;Aspose.Cells for .NET : Create Access and Copy Named Ranges&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#working-with-named-range-using-microsoft-excel&#34;&gt;Working with Named Range Using Microsoft Excel&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#create-named-ranges&#34;&gt;Create Named Ranges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#working-with-named-range-using-aspose.cells&#34;&gt;Working with Named Range Using Aspose.Cells&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;3.1 &lt;a href=&#34;#create-named-range&#34;&gt;Create Named Range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.2 &lt;a href=&#34;#input-data-into-the-cells-in-the-named-range&#34;&gt;Input Data into the Cells in the Named Range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.3 &lt;a href=&#34;#identify-cells-in-the-named-range&#34;&gt;Identify Cells in the Named Range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.4 &lt;a href=&#34;#access-named-ranges&#34;&gt;Access Named Ranges&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;3.4.1 &lt;a href=&#34;#access-a-specific-named-range&#34;&gt;Access a Specific Named Range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.4.2 &lt;a href=&#34;#access-all-the-named-ranges-in-a-spreadsheet&#34;&gt;Access All the Named Ranges in a Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3.5 &lt;a href=&#34;#copy-named-ranges&#34;&gt;Copy Named Ranges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Normally, column and row labels are used refer to individual cells. It is possible to create descriptive names to represent cells, ranges of cells, formulas, or constant values. The word &lt;strong&gt;name&lt;/strong&gt; may refer to a string of characters that represents a cell, range of cells, formula, or constant value. Assigning a name to a range means that that range of cells can be referred to by its name. Use easy-to-understand names, such as Products, to refer to hard to understand ranges, such as Sales!C20:C30. Labels can be used in formulas that refer to data on the same worksheet; if you want to represent a range on another worksheet, you may use a name. *Named ranges are among the most powerful features of Microsoft Excel, especially when used as the source range for list controls, pivot tables, charts and so on.&lt;/p&gt;
&lt;h2 id=&#34;working-with-named-range-using-microsoft-excel&#34;&gt;Working with Named Range Using Microsoft Excel&lt;/h2&gt;
&lt;h3 id=&#34;create-named-ranges&#34;&gt;Create Named Ranges&lt;/h3&gt;
&lt;p&gt;The following steps describe how to name a cell or range of cells using &lt;strong&gt;MS Excel&lt;/strong&gt;. This method applies to &lt;strong&gt;Microsoft Office Excel 2003&lt;/strong&gt;, &lt;strong&gt;Microsoft Excel 97&lt;/strong&gt;, &lt;strong&gt;2000&lt;/strong&gt; and &lt;strong&gt;2002&lt;/strong&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select the cell, range of cells that you want to name.&lt;/li&gt;
&lt;li&gt;Click the &lt;strong&gt;Name Box&lt;/strong&gt; at the left end of the formula bar.&lt;/li&gt;
&lt;li&gt;Type the name for the cells.&lt;/li&gt;
&lt;li&gt;Press ENTER.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You cannot name a cell while you are changing the contents of the cell.&lt;/p&gt;
&lt;h2 id=&#34;working-with-named-range-using-asposecells&#34;&gt;Working with Named Range Using Aspose.Cells&lt;/h2&gt;
&lt;p&gt;Here, we use the Aspose.Cells API to do the task.&lt;br&gt;
Aspose.Cells provides a class, &lt;code&gt;Workbook&lt;/code&gt; that represents a Microsoft Excel file. The &lt;code&gt;Workbook&lt;/code&gt; class contains a &lt;code&gt;Worksheets&lt;/code&gt; collection that allows access to each worksheet in an Excel file. A worksheet is represented by the &lt;code&gt;Worksheet&lt;/code&gt; class. The &lt;code&gt;Worksheet&lt;/code&gt; class provides a &lt;code&gt;Cells&lt;/code&gt; collection.&lt;/p&gt;
&lt;h3 id=&#34;create-named-range&#34;&gt;Create Named Range&lt;/h3&gt;
&lt;p&gt;It is possible to create a named range by calling the overloaded &lt;code&gt;CreateRange&lt;/code&gt; method of the &lt;code&gt;Cells&lt;/code&gt; collection. A typical version of &lt;code&gt;CreateRange&lt;/code&gt; method takes the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name of the upper left cell, the name of the top left cell in the range.&lt;/li&gt;
&lt;li&gt;Name of the lower right cell, the name of the bottom right cell in the range.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When the &lt;code&gt;CreateRange&lt;/code&gt; method is called, it returns the newly created range as an instance of the &lt;code&gt;Range&lt;/code&gt; class. Use this &lt;code&gt;Range&lt;/code&gt; object to configure the named range. For example, set the name of the range using the &lt;code&gt;Name&lt;/code&gt; property. The following example shows how to create a named range of cells that extends over B4:G14.&lt;/p&gt;
&lt;h3 id=&#34;input-data-into-the-cells-in-the-named-range&#34;&gt;Input Data into the Cells in the Named Range&lt;/h3&gt;
&lt;p&gt;You can insert data into the individual cells of a range following the pattern&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C#&lt;/strong&gt;: Range[row,column]&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VB&lt;/strong&gt;: Range(row,column)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Say you have a named range of cells that spans A1:C4. The matrix makes 4 * 3 = 12 cells. The individual range cells are arranged sequentially: Range[0,0], Range[0,1], Range[0,2], Range[1,0], Range[1,1], Range[1,2], Range[2,0], Range[2,1], Range[2,2], Range[3,0], Range[3,1], Range[3,2].&lt;/p&gt;
&lt;p&gt;Use the following properties to identify the cells in the range:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FirstRow&lt;/code&gt; returns the index of the first row in the named range.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FirstColumn&lt;/code&gt; returns the index of the first column in the named range.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RowCount&lt;/code&gt; returns the total number of rows in the named range.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ColumnCount&lt;/code&gt; returns the total number of columns in the named range.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following example shows how to input some values into the cells of a specified range.&lt;/p&gt;
&lt;h3 id=&#34;identify-cells-in-the-named-range&#34;&gt;Identify Cells in the Named Range&lt;/h3&gt;
&lt;p&gt;You can insert data into the individual cells of a range following the pattern:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C#&lt;/strong&gt;: Range[row,column]&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VB&lt;/strong&gt;: Range(row,column)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have a named range that spans A1:C4. The matrix makes 4 * 3 = 12 cells. The individual range cells are arranged sequentially: Range[0,0], Range[0,1], Range[0,2], Range[1,0] ,Range[1,1], Range[1,2], Range[2,0], Range[2,1], Range[2,2], Range[3,0], Range[3,1], Range[3,2].&lt;/p&gt;
&lt;p&gt;Use the following properties to identify the cells in the range:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FirstRow&lt;/code&gt; returns the index of the first row in the named range.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FirstColumn&lt;/code&gt; returns the index of the first column in the named range.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RowCount&lt;/code&gt; returns the total number of rows in the named range.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ColumnCount&lt;/code&gt; returns the total number of columns in the named range.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following example shows how to input some values into the cells of a specified range.&lt;/p&gt;
&lt;h3 id=&#34;access-named-ranges&#34;&gt;Access Named Ranges&lt;/h3&gt;
&lt;h4 id=&#34;access-a-specific-named-range&#34;&gt;Access a Specific Named Range&lt;/h4&gt;
&lt;p&gt;Call the &lt;code&gt;Worksheets&lt;/code&gt; collection&amp;rsquo;s &lt;code&gt;GetRangeByName&lt;/code&gt; method to get a range by the specified name. A typical &lt;code&gt;GetRangeByName&lt;/code&gt; method takes the name of the named range and returns the specified named range as an instance of the &lt;code&gt;Range&lt;/code&gt; class. The following example shows how to access a specified range by its name.&lt;/p&gt;
&lt;h4 id=&#34;access-all-the-named-ranges-in-a-spreadsheet&#34;&gt;Access All the Named Ranges in a Spreadsheet&lt;/h4&gt;
&lt;p&gt;Call the &lt;code&gt;Worksheet&lt;/code&gt; collection&amp;rsquo;s &lt;code&gt;GetNamedRanges&lt;/code&gt; method to get all named ranges in a spreadsheet. The &lt;code&gt;GetNamedRanges&lt;/code&gt; method returns an array of all names ranges in the &lt;code&gt;Worksheets&lt;/code&gt; collection.&lt;/p&gt;
&lt;p&gt;The following example shows how to access all the named ranges in a workbook.&lt;/p&gt;
&lt;h3 id=&#34;copy-named-ranges&#34;&gt;Copy Named Ranges&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides &lt;code&gt;Range.Copy()&lt;/code&gt; method to copy a range of cells with formattings into another range.&lt;/p&gt;
&lt;p&gt;The following example shows how to copy a source range of cells to another named range.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Format and Modify Named Ranges</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/format&#43;and&#43;modify&#43;named&#43;ranges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/format&#43;and&#43;modify&#43;named&#43;ranges/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--format-and-modify-named-ranges&#34;&gt;Aspose.Cells for .NET : Format and Modify Named Ranges&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#format-ranges&#34;&gt;Format Ranges&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#setting-background-color-and-font-attributes-to-a-named-range&#34;&gt;Setting Background Color and Font Attributes to a Named Range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#adding-borders-to-a-named-range&#34;&gt;Adding Borders to a Named Range&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#rename-a-named-range&#34;&gt;Rename a Named Range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#union-of-ranges&#34;&gt;Union of Ranges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#intersection-of-ranges&#34;&gt;Intersection of Ranges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;5 &lt;a href=&#34;#merge-cells-in-the-named-range&#34;&gt;Merge Cells in the Named Range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6 &lt;a href=&#34;#remove-a-named-range&#34;&gt;Remove a Named Range&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;format-ranges&#34;&gt;Format Ranges&lt;/h2&gt;
&lt;h3 id=&#34;setting-background-color-and-font-attributes-to-a-named-range&#34;&gt;Setting Background Color and Font Attributes to a Named Range&lt;/h3&gt;
&lt;p&gt;To apply formatting, define a &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object to specify the style settings and apply it to the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/range&#34;&gt;Range&lt;/a&gt; object.&lt;/p&gt;
&lt;p&gt;The following example shows how to set the solid fill color (shading color) with font settings to a range.&lt;/p&gt;
&lt;h3 id=&#34;adding-borders-to-a-named-range&#34;&gt;Adding Borders to a Named Range&lt;/h3&gt;
&lt;p&gt;It is possible to add borders to a range of cells instead of just a single cell. The &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/range&#34;&gt;Range&lt;/a&gt; object provides a &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/range/methods/setoutlineborder&#34;&gt;SetOutlineBorder&lt;/a&gt; method that takes the following parameters to add a border to the range of cells:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Border type, the type of border, selected from the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/bordertype&#34;&gt;BorderType&lt;/a&gt; enumeration.&lt;/li&gt;
&lt;li&gt;Line style, the line style, selected from the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/cellbordertype&#34;&gt;CellBorderType&lt;/a&gt; enumeration.&lt;/li&gt;
&lt;li&gt;Color, the line color, selected from the Color enumeration.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following example shows how to set an outline border to a range.&lt;/p&gt;
&lt;p&gt;The following example shows how to set borders around each cell in the range.&lt;/p&gt;
&lt;h2 id=&#34;rename-a-named-range&#34;&gt;Rename a Named Range&lt;/h2&gt;
&lt;p&gt;Aspose.Cells allows you to rename a named range for your need. You may get the named range and rename it by using &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/name/properties/text&#34;&gt;Name.Text&lt;/a&gt; attribute. The following example shows how to rename a named range.&lt;/p&gt;
&lt;h2 id=&#34;union-of-ranges&#34;&gt;Union of Ranges&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/range/methods/union&#34;&gt;Range.Union&lt;/a&gt; method to take the union for ranges, the method returns an &lt;a href=&#34;https://docs.microsoft.com/en-gb/dotnet/api/system.collections.arraylist?view=netframework-4.8&#34;&gt;&lt;em&gt;ArrayList&lt;/em&gt;&lt;/a&gt; object. The following example shows how to take union for ranges.&lt;/p&gt;
&lt;h2 id=&#34;intersection-of-ranges&#34;&gt;Intersection of Ranges&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/range/methods/intersect&#34;&gt;Range.Intersect&lt;/a&gt; method to intersect two ranges. The method returns a &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/range&#34;&gt;Range&lt;/a&gt; object. To check whether a range intersects another range, use the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/range/methods/isintersect&#34;&gt;Range.IsIntersect&lt;/a&gt; method that returns a Boolean value. The following example shows how to intersect the ranges.&lt;/p&gt;
&lt;h2 id=&#34;merge-cells-in-the-named-range&#34;&gt;Merge Cells in the Named Range&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/range/methods/merge&#34;&gt;Range.Merge()&lt;/a&gt; method to merge the cells in the range. The following example shows how to merge the individual cells of a named range.&lt;/p&gt;
&lt;h2 id=&#34;remove-a-named-range&#34;&gt;Remove a Named Range&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/namecollection/methods/removeat&#34;&gt;NameCollection.RemoveAt()&lt;/a&gt; method to erase the name of the range. To clear the contents of the range, use &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/cells/methods/clearrange/index&#34;&gt;Cells.ClearRange()&lt;/a&gt; method. The following example shows how to remove a named range with its contents.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Setting Formula for Named Range</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/setting&#43;formula&#43;for&#43;named&#43;range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/setting&#43;formula&#43;for&#43;named&#43;range/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--setting-formula-for-named-range&#34;&gt;Aspose.Cells for .NET : Setting Formula for Named Range&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#setting-formula-for-named-range&#34;&gt;Setting Formula for Named Range&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#setting-a-simple-formula-for-named-range&#34;&gt;Setting a Simple Formula for Named Range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#setting-a-complex-formula-for-named-range&#34;&gt;Setting a Complex Formula for Named Range&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;setting-formula-for-named-range&#34;&gt;Setting Formula for Named Range&lt;/h2&gt;
&lt;p&gt;Like Excel application, Aspose.Cells APIs provide the ability to specify a formula for a named range while using its &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/range/properties/refersto&#34;&gt;RefersTo&lt;/a&gt; property. There could be numerous usability scenarios for this feature, a few of which are detailed as follow.&lt;/p&gt;
&lt;h3 id=&#34;setting-a-simple-formula-for-named-range&#34;&gt;Setting a Simple Formula for Named Range&lt;/h3&gt;
&lt;p&gt;A simple formula could be a reference to another cell in the same (or different) worksheet. The following example creates a named range in a new spreadsheet and sets its reference to another cell.&lt;/p&gt;
&lt;h3 id=&#34;setting-a-complex-formula-for-named-range&#34;&gt;Setting a Complex Formula for Named Range&lt;/h3&gt;
&lt;p&gt;A complex formula could be anything such as a dynamic range or a formula spanning over multiple cells in different worksheets. The following example creates a dynamic range using the INDEX function to get the value from a list based on its location.&lt;/p&gt;
&lt;p&gt;Here is another example that uses a named range to sum values from 2 cells in different worksheets.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Precedents and Dependents</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/precedents&#43;and&#43;dependents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/precedents&#43;and&#43;dependents/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--precedents-and-dependents&#34;&gt;Aspose.Cells for .NET : Precedents and Dependents&lt;/h1&gt;
&lt;p&gt;Complex financial worksheets, especially ones developed in collaboration, can hide the most embarrassing errors. Checking formulas for accuracy and finding the source of an error can be difficult when the formula uses precedent cells and dependent cells.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#tracing-precedent-and-dependent-cells:-microsoft-excel&#34;&gt;Tracing Precedent and Dependent Cells: Microsoft Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#tracing-precedent-and-dependent-cells:-aspose.cells&#34;&gt;Tracing Precedent and Dependent Cells: Aspose.Cells&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;3.1 &lt;a href=&#34;#tracing-precedents&#34;&gt;Tracing Precedents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.2 &lt;a href=&#34;#tracing-dependents&#34;&gt;Tracing Dependents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Precedent cells&lt;/strong&gt; are cells that are referred to by a formula in another Cell. For example, if cell D10 contains the formula =B5, cell B5 is a precedent to cell D10.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dependent cells&lt;/strong&gt; contain formulas that refer to other cells. For example, if cell D10 contains the formula =B5, cell D10 is dependent of cell B5.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To make the spreadsheet easy to read, you might want to clearly show which cells on a spreadsheet are used in a formula. Similarly, you may want to extract the dependent cells of other cells.&lt;/p&gt;
&lt;p&gt;Aspose.Cells allows you to trace cells and find out which are linked.&lt;/p&gt;
&lt;h2 id=&#34;tracing-precedent-and-dependent-cells-microsoft-excel&#34;&gt;Tracing Precedent and Dependent Cells: Microsoft Excel&lt;/h2&gt;
&lt;p&gt;Formulas may change based on modifications made by a client. For example, if cell C1 is dependent on C3 and C4 containing a formula, and C1 is changed (so the formula is overridden), C3 and C4, or other cells, need to change to balance the spreadsheet based on business rules.&lt;/p&gt;
&lt;p&gt;Similarly, suppose C1 contains the formula &amp;ldquo;=(B1*22)/(M2*N32)&amp;rdquo;. I want to find the cells that C1 depends on, that is the precedent cells B1, M2, and N32.&lt;/p&gt;
&lt;p&gt;You might need to trace the dependency of a particular cell to other cells. If business rules are embedded in formulas, we would like to find out the dependency and execute some rules based on it. Similarly, if the value of a particular cell is modified, which cells in the worksheet are impacted by that change?&lt;/p&gt;
&lt;p&gt;Microsoft Excel allows users to trace precedents and dependents.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;On the &lt;strong&gt;View Toolbar&lt;/strong&gt;, select &lt;strong&gt;Formula Auditing&lt;/strong&gt;. The Formula Auditing dialog will be displayed.&lt;/li&gt;
&lt;li&gt;Trace Precedents:
&lt;ol&gt;
&lt;li&gt;Select the cell that contains the formula for which you want to find precedent cells.&lt;/li&gt;
&lt;li&gt;To display a tracer arrow to each cell that directly provides data to the active cell, click &lt;strong&gt;Trace Precedents&lt;/strong&gt; on the &lt;strong&gt;Formula Auditing&lt;/strong&gt; toolbar.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Trace formulas that reference a particular cell (dependents)
&lt;ol&gt;
&lt;li&gt;Select the cell for which you want to identify the dependent cells.&lt;/li&gt;
&lt;li&gt;To display a tracer arrow to each cell that is dependent on the active cell, click Trace Dependents on the Formula Auditing toolbar.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;tracing-precedent-and-dependent-cells-asposecells&#34;&gt;Tracing Precedent and Dependent Cells: Aspose.Cells&lt;/h2&gt;
&lt;h3 id=&#34;tracing-precedents&#34;&gt;Tracing Precedents&lt;/h3&gt;
&lt;p&gt;Aspose.Cells makes it easy to get precedent cells. Not only can it retrieve cells that provide data to simple formula precedents but also find cells that provide data to complex formula precedents with named ranges.&lt;/p&gt;
&lt;p&gt;In the example below, a template excel file, Book1.xls, is used. The spreadsheet has data and formulas on the first Worksheet.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class&amp;rsquo; &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/cell/methods/getprecedents&#34;&gt;GetPrecedents&lt;/a&gt; method used to trace a cell&amp;rsquo;s precedents. It returns a &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/referredareacollection&#34;&gt;ReferredAreaCollection&lt;/a&gt;. As you can see above, in Book1.xls, cell B7 contains a formula &amp;ldquo;=SUM(A1:A3)&amp;rdquo;. So cells A1:A3 are the precedent cells to cell B7. The following example demonstrates the tracing precedents feature using the template file Book1.xls.&lt;/p&gt;
&lt;h3 id=&#34;tracing-dependents&#34;&gt;Tracing Dependents&lt;/h3&gt;
&lt;p&gt;Aspose.Cells lets you get dependent cells in spreadsheets. Aspose.Cells can not only can retrieve cells that provide data regarding a simple formula but also find cells that provide data to a complex formula dependents with named ranges.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/cell&#34;&gt;Cell&lt;/a&gt; class&amp;rsquo; &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/cell/methods/getdependents&#34;&gt;GetDependents&lt;/a&gt; method used to trace a cell&amp;rsquo;s dependents. For example, in Book1.xlsx there are formulas: &amp;ldquo;=A1+20&amp;rdquo; and &amp;ldquo;=A1+30&amp;rdquo; in the B2 and C2 cells respectively. The following example demonstrates how to trace the dependents for the &lt;code&gt;A1&lt;/code&gt; cell using the template file Book1.xlsx.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with Hyperlinks to Link Data</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/working&#43;with&#43;hyperlinks&#43;to&#43;link&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/working&#43;with&#43;hyperlinks&#43;to&#43;link&#43;data/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--working-with-hyperlinks-to-link-data&#34;&gt;Aspose.Cells for .NET : Working with Hyperlinks to Link Data&lt;/h1&gt;
&lt;p&gt;A hyperlink is used to create a link between two entities. Everybody is familiar with the use of hyperlinks, especially on websites.&lt;br&gt;
Using Aspose.Cells, developers can create different kinds of hyperlinks in Microsoft Excel files. This topic discusses what types of hyperlinks are supported by Aspose.Cells and how they can be used in our Excel files.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#adding-hyperlinks&#34;&gt;Adding Hyperlinks&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#adding-link-to-a-url&#34;&gt;Adding Link to a URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#adding-a-link-to-a-cell-in-the-same-file&#34;&gt;Adding a Link to a Cell in the Same File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3 &lt;a href=&#34;#adding-a-link-to-an-external-file&#34;&gt;Adding a Link to an External File&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;adding-hyperlinks&#34;&gt;Adding Hyperlinks&lt;/h2&gt;
&lt;p&gt;Aspose.Cells allows developers to add hyperlinks to Excel files either using the API or designer spreadsheets(spreadsheets where hyperlinks are created manually and Aspose.Cells is used to import them into other spreadsheets).&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; that represents a Microsoft Excel file. The &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/workbook&#34;&gt;Workbook&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/worksheetcollection&#34;&gt;WorksheetCollection&lt;/a&gt; that allows access to each worksheet in the Excel file. A worksheet is represented by the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class. The &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class provides different methods for adding different hyperlinks to Excel files.&lt;/p&gt;
&lt;h3 id=&#34;adding-link-to-a-url&#34;&gt;Adding Link to a URL&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; class contains a &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/worksheet/properties/hyperlinks&#34;&gt;Hyperlinks&lt;/a&gt; collection. Each item in the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/worksheet/properties/hyperlinks&#34;&gt;Hyperlinks&lt;/a&gt; collection represents a &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/hyperlink&#34;&gt;Hyperlink&lt;/a&gt;. Add hyperlinks to URLs by calling the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/hyperlinkcollection&#34;&gt;Hyperlinks&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/hyperlinkcollection/methods/add/index&#34;&gt;Add&lt;/a&gt; method. The &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/hyperlinkcollection/methods/add/index&#34;&gt;Add&lt;/a&gt; method takes the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cell name, the name of the cell the hyperlink will be added to.&lt;/li&gt;
&lt;li&gt;Number of rows, the number of rows in this hyperlink range.&lt;/li&gt;
&lt;li&gt;Number of columns, the number of columns in this hyperlink range&lt;/li&gt;
&lt;li&gt;URL, the URL address.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the above example, a hyperlink is added to a URL in an empty cell, &lt;strong&gt;A1&lt;/strong&gt;. In such cases, if a cell is empty then the URL address is also added to that empty cell as its value. If the cell is not empty and a hyperlink is added, the value of the cell looks like plain text. To make it look like a hyperlink, apply the appropriate formatting settings on that cell.&lt;/p&gt;
&lt;h3 id=&#34;adding-a-link-to-a-cell-in-the-same-file&#34;&gt;Adding a Link to a Cell in the Same File&lt;/h3&gt;
&lt;p&gt;It is possible to add hyperlinks to cells in the same Excel file by calling the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/hyperlinkcollection&#34;&gt;Hyperlinks&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/hyperlinkcollection/methods/add/index&#34;&gt;Add&lt;/a&gt; method. The &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/hyperlinkcollection/methods/add/index&#34;&gt;Add&lt;/a&gt; method works for both internal and external hyperlinks. One version of the overloaded method takes the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cell name,the name of the cell the hyperlink will be added to.&lt;/li&gt;
&lt;li&gt;Number of rows, the number of rows in this hyperlink range.&lt;/li&gt;
&lt;li&gt;Number of columns, the number of columns in this hyperlink range.&lt;/li&gt;
&lt;li&gt;URL, the address of the target cell.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;adding-a-link-to-an-external-file&#34;&gt;Adding a Link to an External File&lt;/h3&gt;
&lt;p&gt;It is possible to add hyperlinks to external Excel files by calling the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/hyperlinkcollection&#34;&gt;Hyperlinks&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/hyperlinkcollection/methods/add/index&#34;&gt;Add&lt;/a&gt; method. The &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/hyperlinkcollection/methods/add/index&#34;&gt;Add&lt;/a&gt; method takes the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cell name, the name of the cell the hyperlink will be added to.&lt;/li&gt;
&lt;li&gt;Number of rows, the number of rows in this hyperlink range.&lt;/li&gt;
&lt;li&gt;Number of columns, the number of columns in this hyperlink range.&lt;/li&gt;
&lt;li&gt;URL, the address of the target, external Excel file.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Rename duplicate columns automatically while exporting worksheet data</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/rename&#43;duplicate&#43;columns&#43;automatically&#43;while&#43;exporting&#43;worksheet&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/rename&#43;duplicate&#43;columns&#43;automatically&#43;while&#43;exporting&#43;worksheet&#43;data/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--rename-duplicate-columns-automatically-while-exporting-worksheet-data&#34;&gt;Aspose.Cells for .NET : Rename duplicate columns automatically while exporting worksheet data&lt;/h1&gt;


&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#rename-duplicate-columns-automatically-while-exporting-worksheet-data&#34;&gt;Rename duplicate columns automatically while exporting worksheet data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#console-output&#34;&gt;Console Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Sometimes user faces a problem of duplicate columns while exporting data from worksheet into the data table. DataTable cannot have duplicate columns so duplicate columns must be renamed before you could export worksheet data to the data table. Aspose.Cells can rename the duplicate columns automatically according to strategy specified by you with &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/exporttableoptions/properties/renamestrategy&#34;&gt;ExportTableOptions.RenameStrategy&lt;/a&gt; property. If you specify &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/renamestrategy&#34;&gt;RenameStrategy&lt;/a&gt;.Digit, columns will be renamed like column1, column2, column3, etc and if you specify &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/renamestrategy&#34;&gt;RenameStrategy&lt;/a&gt;.Letter, then columns will be renamed like columnA, columnB, columnC, etc.&lt;/p&gt;
&lt;h2 id=&#34;rename-duplicate-columns-automatically-while-exporting-worksheet-data&#34;&gt;Rename duplicate columns automatically while exporting worksheet data&lt;/h2&gt;
&lt;p&gt;The following sample code adds some data in the first three columns of the worksheet but all columns have the same name i.e. &lt;em&gt;People&lt;/em&gt;. Then it exports the data from worksheet into data table by specifying &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/renamestrategy&#34;&gt;RenameStrategy&lt;/a&gt;.Letter strategy. It then prints the column names of the data table generated by Aspose.Cells. The following screenshot shows the data table with exported data in the visualizer. As you can see, duplicate columns have been renamed to &lt;code&gt;PeopleA&lt;/code&gt;, &lt;code&gt;PeopleB&lt;/code&gt; etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/25002646/25395212.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;
&lt;h2 id=&#34;console-output&#34;&gt;Console Output&lt;/h2&gt;
&lt;p&gt;Here is the console output of the above sample code for a reference.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_5a4ba0da23&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_5a4ba0da23&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;People&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;PeopleA&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;PeopleB&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
    <item>
      <title>Net: Export HTML String Value of the Cells to the DataTable</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/export&#43;html&#43;string&#43;value&#43;of&#43;the&#43;cells&#43;to&#43;the&#43;datatable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/export&#43;html&#43;string&#43;value&#43;of&#43;the&#43;cells&#43;to&#43;the&#43;datatable/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--export-html-string-value-of-the-cells-to-the-datatable&#34;&gt;Aspose.Cells for .NET : Export HTML String Value of the Cells to the DataTable&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#export-html-string-value-of-the-cells-to-the-datatable&#34;&gt;Export HTML String Value of the Cells to the DataTable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#screenshot&#34;&gt;Screenshot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;5 &lt;a href=&#34;#console-output&#34;&gt;Console Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Using Aspose.Cells APIs, developers can fill a DataTable with corresponding HTML strings (based on cells values) while exporting worksheet data. This document explains how to export HTML strings for the formatted cells data to fill a DataTable using Aspose.Cells APIs.&lt;/p&gt;
&lt;h2 id=&#34;export-html-string-value-of-the-cells-to-the-datatable&#34;&gt;Export HTML String Value of the Cells to the DataTable&lt;/h2&gt;
&lt;p&gt;The following sample code illustrates how to export HTML string value of the cells to the DataTable while exporting data from worksheet into DataTable. Please see the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/44860284/45056025.xlsx&#34;&gt;sample Excel file&lt;/a&gt;, its screenshot and the console output for a reference.&lt;/p&gt;
&lt;h2 id=&#34;screenshot&#34;&gt;Screenshot&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/44860284/45056026.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;
&lt;h2 id=&#34;console-output&#34;&gt;Console Output&lt;/h2&gt;
&lt;p&gt;&lt;Font Style=&#34;FONT-FAMILY: Calibri;FONT-SIZE: 11pt;COLOR: #00b0f0;Background-Color: #ffe699;&#34;&gt;Crow&lt;/Font&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Shift First Row down when inserting Cells Data Table Rows</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/shift&#43;first&#43;row&#43;down&#43;when&#43;inserting&#43;cells&#43;data&#43;table&#43;rows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/shift&#43;first&#43;row&#43;down&#43;when&#43;inserting&#43;cells&#43;data&#43;table&#43;rows/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--shift-first-row-down-when-inserting-cells-data-table-rows&#34;&gt;Aspose.Cells for .NET : Shift First Row down when inserting Cells Data Table Rows&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#shift-first-row-down-when-inserting-cells-data-table-rows&#34;&gt;Shift First Row down when inserting Cells Data Table Rows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#screenshot&#34;&gt;Screenshot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Aspose.Cells allows you to shift the first row down when inserting a table into the worksheet. This document explains how you may accomplish the task using Aspose.Cells APIs.&lt;/p&gt;
&lt;h2 id=&#34;shift-first-row-down-when-inserting-cells-data-table-rows&#34;&gt;Shift First Row down when inserting Cells Data Table Rows&lt;/h2&gt;
&lt;p&gt;The following sample code illustrates how to shift the first row down when inserting a table into the worksheet. We use a simple template Excel file in code to demonstrate the feature. You can exercise the feature by setting the boolean &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/importtableoptions/properties/shiftfirstrowdown&#34;&gt;ImportTableOptions.ShiftFirstRowDown&lt;/a&gt;attribute to &lt;strong&gt;True&lt;/strong&gt;/&lt;strong&gt;False&lt;/strong&gt; to better understand it. Please see the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/44860310/45056031.xlsx&#34;&gt;sample Excel file&lt;/a&gt;, &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/44860310/45056032.xlsx&#34;&gt;output Excel False file&lt;/a&gt;, and &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/44860310/45056033.xlsx&#34;&gt;output Excel True file&lt;/a&gt; for your reference.&lt;/p&gt;
&lt;h2 id=&#34;screenshot&#34;&gt;Screenshot&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/44860310/45056034.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Apply Advanced Filter of Microsoft Excel to Display Records Meeting Complex Criteria</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/apply&#43;advanced&#43;filter&#43;of&#43;microsoft&#43;excel&#43;to&#43;display&#43;records&#43;meeting&#43;complex&#43;criteria/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/apply&#43;advanced&#43;filter&#43;of&#43;microsoft&#43;excel&#43;to&#43;display&#43;records&#43;meeting&#43;complex&#43;criteria/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--apply-advanced-filter-of-microsoft-excel-to-display-records-meeting-complex-criteria&#34;&gt;Aspose.Cells for .NET : Apply Advanced Filter of Microsoft Excel to Display Records Meeting Complex Criteria&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#apply-advanced-filter-of-microsoft-excel-to-display-records-meeting-complex-criteria&#34;&gt;Apply Advanced Filter of Microsoft Excel to Display Records Meeting Complex Criteria&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Microsoft Excel allows you to apply &lt;em&gt;Advanced Filter&lt;/em&gt; on worksheet data to display records that meet complex criteria. You can apply Advanced Filter with Microsoft Excel via its &lt;em&gt;Data &amp;gt; Advanced&lt;/em&gt; command as shown in this screenshot.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/48136879/48496693.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Aspose.Cells also allows you to apply the Advanced Filter using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet/methods/advancedfilter&#34;&gt;Worksheet.AdvancedFilter()&lt;/a&gt; method. Just like Microsoft Excel, it accepts the following parameters.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;isFilter&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Indicates whether filtering the list in place.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;listRange&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The list range.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;criteriaRange&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The criteria range.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;copyTo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The range where copying data to.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;uniqueRecordOnly&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Only displaying or copying unique rows.&lt;/p&gt;
&lt;h2 id=&#34;apply-advanced-filter-of-microsoft-excel-to-display-records-meeting-complex-criteria&#34;&gt;Apply Advanced Filter of Microsoft Excel to Display Records Meeting Complex Criteria&lt;/h2&gt;
&lt;p&gt;The following sample code applies the advanced filter on the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/48136879/48496692.xlsx&#34;&gt;Sample Excel File&lt;/a&gt; and generates the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/48136879/48496691.xlsx&#34;&gt;Output Excel File&lt;/a&gt;. The screenshot shows both files for comparison. As you can see inside the screenshot, data has been filtered inside the output Excel file according to complex criteria.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/48136879/48496690.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Sort Data in Column with Custom Sort List</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/sort&#43;data&#43;in&#43;column&#43;with&#43;custom&#43;sort&#43;list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/sort&#43;data&#43;in&#43;column&#43;with&#43;custom&#43;sort&#43;list/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--sort-data-in-column-with-custom-sort-list&#34;&gt;Aspose.Cells for .NET : Sort Data in Column with Custom Sort List&lt;/h1&gt;


&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios%C2%A0&#34;&gt;Possible Usage Scenarios &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#sort-data-in-column-with-custom-sort-list&#34;&gt;Sort Data in Column with Custom Sort List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios &lt;/h2&gt;
&lt;p&gt;You can sort data in the column using a custom list. This can be done using &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.datasorter/addkey/methods/2&#34;&gt;DataSorter.AddKey(int key, SortOrder order, String customList)&lt;/a&gt; method. However, this method works only if the items in the custom list do not have commas inside them. If they have commas like &amp;ldquo;USA,US&amp;rdquo;, &amp;ldquo;China,CN&amp;rdquo; etc., then you must use &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.datasorter/addkey/methods/3&#34;&gt;DataSorter.AddKey(int key, SortOrder order, String[] customList)&lt;/a&gt; method. Here, the last parameter is not String but an Array of Strings.&lt;/p&gt;
&lt;h2 id=&#34;sort-data-in-column-with-custom-sort-list&#34;&gt;Sort Data in Column with Custom Sort List&lt;/h2&gt;
&lt;p&gt;The following sample code explains how to use &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.datasorter/addkey/methods/3&#34;&gt;DataSorter.AddKey(int key, SortOrder order, String[] customList)&lt;/a&gt; method to sort data with custom sort list. Please see the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/50270185/50528327.xlsx&#34;&gt;sample Excel file&lt;/a&gt; used in this code and &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/50270185/50528328.xlsx&#34;&gt;output Excel file&lt;/a&gt; generated by it. The following screenshot shows the effect of the code on the sample Excel file on execution.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/50270185/50528329.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Specify Formula Fields while Importing Data to Worksheet</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/specify&#43;formula&#43;fields&#43;while&#43;importing&#43;data&#43;to&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/specify&#43;formula&#43;fields&#43;while&#43;importing&#43;data&#43;to&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--specify-formula-fields-while-importing-data-to-worksheet&#34;&gt;Aspose.Cells for .NET : Specify Formula Fields while Importing Data to Worksheet&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#specify-formula-fields-while-importing-data-to-worksheet&#34;&gt;Specify Formula Fields while Importing Data to Worksheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;You can specify formula fields when you import data into your worksheet using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/importtableoptions/properties/isformulas&#34;&gt;ImportTableOptions.IsFormulas&lt;/a&gt;. This property takes the Boolean array where the value &lt;strong&gt;true&lt;/strong&gt; means the field is a formula field. For example, if the third field is a formula field, then the third value in the array will be &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;specify-formula-fields-while-importing-data-to-worksheet&#34;&gt;Specify Formula Fields while Importing Data to Worksheet&lt;/h2&gt;
&lt;p&gt;Please see the following sample code that explains how to specify the formula field while importing data to a worksheet. Please see the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/61542082/61767838.xlsx&#34;&gt;output Excel file&lt;/a&gt; generated by the code and the screenshot showing the effect of the code on the output Excel file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/61542082/61767839.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Preserve Single Quote Prefix of Cell Value or Range</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/preserve&#43;single&#43;quote&#43;prefix&#43;of&#43;cell&#43;value&#43;or&#43;range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/preserve&#43;single&#43;quote&#43;prefix&#43;of&#43;cell&#43;value&#43;or&#43;range/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--preserve-single-quote-prefix-of-cell-value-or-range&#34;&gt;Aspose.Cells for .NET : Preserve Single Quote Prefix of Cell Value or Range&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#preserve-single-quote-prefix-of-cell-value-or-range&#34;&gt;Preserve Single Quote Prefix of Cell Value or Range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#console-output&#34;&gt;Console Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;When you put some value inside the cell that has leading apostrophe or single quote mark, then Microsoft Excel hides it, but when you select the cell, it displays the leading apostrophe or single quote in a formula bar as shown in the following screenshot.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/64454863/64716825.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Aspose.Cells also hides the leading apostrophe or single quote like Microsoft Excel but it sets the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/quoteprefix&#34;&gt;Style.QuotePrefix&lt;/a&gt; as &lt;strong&gt;true&lt;/strong&gt; for that cell. If you set an empty style of the cell, then &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/quoteprefix&#34;&gt;Style.QuotePrefix&lt;/a&gt; becomes &lt;strong&gt;false&lt;/strong&gt; again. In order to deal with this issue, Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/styleflag/properties/quoteprefix&#34;&gt;StyleFlag.QuotePrefix&lt;/a&gt; property, when it is set &lt;strong&gt;false&lt;/strong&gt;, then &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/quoteprefix&#34;&gt;Style.QuotePrefix&lt;/a&gt; is not updated at all and its old value is preserved. It means if the old value of &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/quoteprefix&#34;&gt;Style.QuotePrefix&lt;/a&gt; property was &lt;strong&gt;true&lt;/strong&gt;, it will remain &lt;strong&gt;true&lt;/strong&gt; and if the old value was &lt;strong&gt;false&lt;/strong&gt;, it will remain &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;preserve-single-quote-prefix-of-cell-value-or-range&#34;&gt;Preserve Single Quote Prefix of Cell Value or Range&lt;/h2&gt;
&lt;p&gt;The following sample code explains the usage of &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/styleflag/properties/quoteprefix&#34;&gt;StyleFlag.QuotePrefix&lt;/a&gt; property as described previously. Please read the comments inside the code and see the console output of the code given below for more help.&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;
&lt;h2 id=&#34;console-output&#34;&gt;Console Output&lt;/h2&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_9d08a2f240&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_9d08a2f240&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;Quote&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Prefix&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;False&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Quote&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Prefix&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;True&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;When&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;StyleFlag&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;QuotePrefix&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;it&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;means&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;update&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Style&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;QuotePrefix&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Similarly&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;StyleFlag&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;QuotePrefix&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;it&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;means&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;update&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Style&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;QuotePrefix&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;Quote&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Prefix&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;True&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Quote&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Prefix&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;False&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
    <item>
      <title>Net: Get All Hidden Rows Indices after Refreshing AutoFilter</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/get&#43;all&#43;hidden&#43;rows&#43;indices&#43;after&#43;refreshing&#43;autofilter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/get&#43;all&#43;hidden&#43;rows&#43;indices&#43;after&#43;refreshing&#43;autofilter/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--get-all-hidden-rows-indices-after-refreshing-autofilter&#34;&gt;Aspose.Cells for .NET : Get All Hidden Rows Indices after Refreshing AutoFilter&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#get-all-hidden-rows-indices-after-refreshing-autofilter&#34;&gt;Get All Hidden Rows Indices after Refreshing AutoFilter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#console-output&#34;&gt;Console Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;When you apply the auto filter on worksheet cells, then some of the rows get hidden automatically. But it might be the case that some of the rows are already hidden manually by Excel end user and they are not hidden by an auto filter. It therefore makes difficult to know which of the rows are hidden by the auto filter and which of them are hidden manually by Excel end user. Aspose.Cells deals with this problem using the int[] &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.autofilter/refresh/methods/1&#34;&gt;AutoFilter.Refresh(bool hideRows)&lt;/a&gt; method. This method returns the row indices of all the rows that are hidden by the auto filter and not manually by the Excel end user.&lt;/p&gt;
&lt;h2 id=&#34;get-all-hidden-rows-indices-after-refreshing-autofilter&#34;&gt;Get All Hidden Rows Indices after Refreshing AutoFilter&lt;/h2&gt;
&lt;p&gt;Please see the following sample code that loads the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/64456077/64716909.xlsx&#34;&gt;sample Excel file&lt;/a&gt; which contains some of the rows hidden manually by Excel end user. The code applies the auto filter and refreshes it using the int[] &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.autofilter/refresh/methods/1&#34;&gt;AutoFilter.Refresh(bool hideRows)&lt;/a&gt; method that returns the row indices of all the hidden rows by the auto filter. It then prints the indices of the hidden rows on the console along with cells names and values.&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;
&lt;h2 id=&#34;console-output&#34;&gt;Console Output&lt;/h2&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_2586290726&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_2586290726&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;Printing&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Rows&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Indices&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Names&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Values&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Hidden&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;By&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;AutoFilter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;--------------------------&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;       &lt;span style=&#34;color:#000&#34;&gt;A2&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;Apple&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;       &lt;span style=&#34;color:#000&#34;&gt;A3&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;Apple&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;       &lt;span style=&#34;color:#000&#34;&gt;A4&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;Apple&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;       &lt;span style=&#34;color:#000&#34;&gt;A7&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;Apple&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;       &lt;span style=&#34;color:#000&#34;&gt;A8&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;Apple&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;A12&lt;/span&gt;     &lt;span style=&#34;color:#000&#34;&gt;Pear&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;12&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;A13&lt;/span&gt;     &lt;span style=&#34;color:#000&#34;&gt;Pear&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
    <item>
      <title>Net: Get Address Cell Count Offset Entire Column and Entire Row of the Range</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/get&#43;address&#43;cell&#43;count&#43;offset&#43;entire&#43;column&#43;and&#43;entire&#43;row&#43;of&#43;the&#43;range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/get&#43;address&#43;cell&#43;count&#43;offset&#43;entire&#43;column&#43;and&#43;entire&#43;row&#43;of&#43;the&#43;range/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--get-address-cell-count-offset-entire-column-and-entire-row-of-the-range&#34;&gt;Aspose.Cells for .NET : Get Address Cell Count Offset Entire Column and Entire Row of the Range&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#get-address,-cell-count,-offset,-entire-column-and-entire-row-of-the-range&#34;&gt;Get Address, Cell Count, Offset, Entire Column and Entire Row of the Range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#console-output&#34;&gt;Console Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides the Range object which has various utility methods that facilitate the user to work with Excel Ranges easily. This article illustrates the usage of the following methods or properties of Range object.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Address&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gets address of the range.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cell Count&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gets all cell count in the range.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Offset&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gets range by offset.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Entire Column&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gets a Range object that represents the entire column (or columns) that contains the specified range.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Entire Row&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gets a Range object that represents the entire row (or rows) that contains the specified range.&lt;/p&gt;
&lt;h2 id=&#34;get-address-cell-count-offset-entire-column-and-entire-row-of-the-range&#34;&gt;Get Address, Cell Count, Offset, Entire Column and Entire Row of the Range&lt;/h2&gt;
&lt;p&gt;The following sample code explains the usage of the methods and properties as discussed above. Please see the console output of the code given below for a reference.&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;
&lt;h2 id=&#34;console-output&#34;&gt;Console Output&lt;/h2&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_b5bf22cf77&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_b5bf22cf77&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;Creating&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Range&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;B3&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;Range&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Address&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;B3&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Count&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;----------------------&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;Creating&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Range&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;Offset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;C3&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Entire&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Column&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;A&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Entire&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Row&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;----------------------&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
    <item>
      <title>Net: Change Cells Alignment and Keep Existing Formatting</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/change&#43;cells&#43;alignment&#43;and&#43;keep&#43;existing&#43;formatting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/change&#43;cells&#43;alignment&#43;and&#43;keep&#43;existing&#43;formatting/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--change-cells-alignment-and-keep-existing-formatting&#34;&gt;Aspose.Cells for .NET : Change Cells Alignment and Keep Existing Formatting&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#change-cells-alignment-and-keep-existing-formatting&#34;&gt;Change Cells Alignment and Keep Existing Formatting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Sometimes, you want to change the alignment of multiple cells but also want to keep existing formatting. Aspose.Cells allows you to do it using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/styleflag/properties/alignments&#34;&gt;StyleFlag.Alignments&lt;/a&gt; property. If you will set it &lt;strong&gt;true&lt;/strong&gt;, changes in alignment will take place otherwise not. Please note, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/styleflag&#34;&gt;StyleFlag&lt;/a&gt; object is passed as a parameter to &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range/methods/applystyle&#34;&gt;Range.ApplyStyle()&lt;/a&gt; method which actually applies the formatting to a range of cells.&lt;/p&gt;
&lt;h2 id=&#34;change-cells-alignment-and-keep-existing-formatting&#34;&gt;Change Cells Alignment and Keep Existing Formatting&lt;/h2&gt;
&lt;p&gt;The following sample code loads the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/66950270/67338585.xlsx&#34;&gt;sample Excel file&lt;/a&gt;, creates the range and center aligns it horizontally and vertically and keeps the existing formatting intact. The following screenshot compares the sample Excel file and &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/66950270/67338586.xlsx&#34;&gt;output Excel file&lt;/a&gt; and shows that all existing formatting of the cells is the same except that cells are now center aligned horizontally and vertically.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/66950270/67338588.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Data Filtering</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/data&#43;filtering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/data&#43;filtering/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--data-filtering&#34;&gt;Aspose.Cells for .NET : Data Filtering&lt;/h1&gt;
&lt;p&gt;Microsoft Excel provides some good features to autofilter worksheet data. Aspose.Cells fully supports Microsoft Excel&amp;rsquo;s autofilter features. This article explains how to use the features in Microsoft Excel, and how to code them using Aspose.Cells.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#autofilter-data&#34;&gt;Autofilter Data&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#autofilter-in-microsoft-excel&#34;&gt;Autofilter in Microsoft Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#autofilter-with-aspose.cells&#34;&gt;Autofilter with Aspose.Cells&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.2.1 &lt;a href=&#34;#different-types-of-filter&#34;&gt;Different types of Filter&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.2.1.1 &lt;a href=&#34;#fill-color&#34;&gt;Fill Color&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.2 &lt;a href=&#34;#date&#34;&gt;Date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.3 &lt;a href=&#34;#dynamic-date&#34;&gt;Dynamic Date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.4 &lt;a href=&#34;#number&#34;&gt;Number&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.5 &lt;a href=&#34;#text&#34;&gt;Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.6 &lt;a href=&#34;#blanks&#34;&gt;Blanks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.7 &lt;a href=&#34;#non-blanks&#34;&gt;Non Blanks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.8 &lt;a href=&#34;#custom-filter-with-contains&#34;&gt;Custom filter with Contains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.9 &lt;a href=&#34;#custom-filter-with-notcontains&#34;&gt;Custom filter with NotContains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.10 &lt;a href=&#34;#custom-filter-with-beginswith&#34;&gt;Custom filter with BeginsWith&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2.1.11 &lt;a href=&#34;#custom-filter-with-endswith&#34;&gt;Custom filter with EndsWith&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;autofilter-data&#34;&gt;Autofilter Data&lt;/h2&gt;
&lt;p&gt;Autofiltering is the quickest way to select only those items from the worksheet that you want to display in a list. The autofilter feature allows users to filter items in a list according to a set criteria. Filter based on text, numbers or dates.&lt;/p&gt;
&lt;h3 id=&#34;autofilter-in-microsoft-excel&#34;&gt;Autofilter in Microsoft Excel&lt;/h3&gt;
&lt;p&gt;To activate the autofilter feature in Microsoft Excel:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click the heading row in a worksheet.&lt;/li&gt;
&lt;li&gt;From the &lt;strong&gt;Data&lt;/strong&gt; menu, select &lt;strong&gt;Filter&lt;/strong&gt; and then &lt;strong&gt;AutoFilter&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When you apply an autofilter to a worksheet, filter switches (black arrows) appear to the right of the column headings.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click a filter arrow to see a list of filter options.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some of the autofilter options are:&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Options&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;All&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Show all items in the list once.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Custom&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Customize filter criteria like contains/not contains&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Filter by Color&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Filters based on filled color&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Date Filters&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Filters rows based on different criteria on date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Number Filters&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Different type of filter on numbers like comparison, averages and Top 10 etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Text Filters&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Different filters like begins with, ends with, contains etc,&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Blanks/Non Blanks&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;These filters can be implemented through Text Filter Blank&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;p&gt;Users manually filter their worksheet data in Microsoft Excel using these options.&lt;/p&gt;
&lt;h3 id=&#34;autofilter-with-asposecells&#34;&gt;Autofilter with Aspose.Cells&lt;/h3&gt;
&lt;p&gt;Aspose.Cells provides a class, &lt;code&gt;Workbook&lt;/code&gt; that represents an Excel file. The &lt;code&gt;Workbook&lt;/code&gt; class contains a &lt;code&gt;Worksheets&lt;/code&gt; collection that allows access to each worksheet in the Excel file.&lt;/p&gt;
&lt;p&gt;A worksheet is represented by the &lt;code&gt;Worksheet&lt;/code&gt; class. The &lt;code&gt;Worksheet&lt;/code&gt; class provides a wide range of properties and methods to manage worksheets. To create an autofilter, use the &lt;code&gt;AutoFilter&lt;/code&gt; property of the &lt;code&gt;Worksheet&lt;/code&gt; class. The &lt;code&gt;AutoFilter&lt;/code&gt; property is an object of the &lt;code&gt;AutoFilter&lt;/code&gt; class, which provides the &lt;code&gt;Range&lt;/code&gt; property for specifying the range of cells that make up a heading row. An autofilter is applied to the range of cells that is the heading row.&lt;/p&gt;
&lt;p&gt;In each worksheet, you can only specify one filter range. This is limited by Microsoft Excel. For custom data filtering, use the &lt;code&gt;AutoFilter.Custom&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;In the example given below, we have created the same AutoFilter using Aspose.Cells as we created using Microsoft Excel in the above section.&lt;/p&gt;
&lt;h4 id=&#34;different-types-of-filter&#34;&gt;Different types of Filter&lt;/h4&gt;
&lt;p&gt;Aspose.Cells provides multiple options to apply different type of filters like Color Filter, Date Filter, Number Filter, Text Filter, Blank Filters and None Blank Filters.&lt;/p&gt;
&lt;h5 id=&#34;fill-color&#34;&gt;Fill Color&lt;/h5&gt;
&lt;p&gt;Aspose.Cells provides a function &lt;code&gt;AddFillColorFilter&lt;/code&gt; to filter data based upon the fill color property of the cells. In the example given below, a template file having different fill colors in the first column of the sheet is used to test the color filtering function. Sample files can be downloaded from the following links.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/ColouredCells.xlsx?version=1&amp;amp;modificationDate=1537799182094&amp;amp;api=v2&#34;&gt;ColouredCells.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/FilteredColouredCells.xlsx?version=1&amp;amp;modificationDate=1537799189763&amp;amp;api=v2&#34;&gt;FilteredColouredCells.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;date&#34;&gt;Date&lt;/h5&gt;
&lt;p&gt;Different type of date filters can be implemented like filtering all the rows having dates in January 2018. Following sample code demonstrates this filter using &lt;code&gt;AddDateFilter&lt;/code&gt; function. Sample files are given below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/Date.xlsx?version=1&amp;amp;modificationDate=1537801347425&amp;amp;api=v2&#34;&gt;Date.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/FilteredDate.xlsx?version=1&amp;amp;modificationDate=1537801351866&amp;amp;api=v2&#34;&gt;FilteredDate.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;dynamic-date&#34;&gt;Dynamic Date&lt;/h5&gt;
&lt;p&gt;Sometimes dynamic filters are required based on date like all the cells having dates in January irrespective of the year. In this case &lt;code&gt;DynamicFilter&lt;/code&gt; function is used as given in the following sample code. Sample files are given below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/Date.xlsx?version=1&amp;amp;modificationDate=1537801347425&amp;amp;api=v2&#34;&gt;Date.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/FilteredDynamicDate.xlsx?version=1&amp;amp;modificationDate=1537802485867&amp;amp;api=v2&#34;&gt;FilteredDynamicDate.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;number&#34;&gt;Number&lt;/h5&gt;
&lt;p&gt;Custom filters can be applied using Aspose.Cells like selecting cells having number between a given range. Following example demonstrates the usage of &lt;code&gt;Custom&lt;/code&gt;() function to filter numbers. Sample files are given below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/Number.xlsx?version=1&amp;amp;modificationDate=1537803180915&amp;amp;api=v2&#34;&gt;Number.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/FilteredNumber.xlsx?version=1&amp;amp;modificationDate=1537803185489&amp;amp;api=v2&#34;&gt;FilteredNumber.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;text&#34;&gt;Text&lt;/h5&gt;
&lt;p&gt;If a column contains text and cells are to be selected containing particular text, &lt;code&gt;Filter()&lt;/code&gt; function can be used. In the following example, template file contains list of countries and row is to be selected containing particular country name. Following code demonstrates filtering text. Sample files are given below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/Text.xlsx?version=1&amp;amp;modificationDate=1537804327872&amp;amp;api=v2&#34;&gt;Text.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/FilteredText.xlsx?version=1&amp;amp;modificationDate=1537804332987&amp;amp;api=v2&#34;&gt;FilteredText.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;blanks&#34;&gt;Blanks&lt;/h5&gt;
&lt;p&gt;If a column contains text such that few cells are blank, and filter is required to select those rows only where blank cells are present, &lt;code&gt;MatchBlanks&lt;/code&gt;() function can be used as demonstrated below. Sample files are given below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/Blank.xlsx?version=1&amp;amp;modificationDate=1537806074220&amp;amp;api=v2&#34;&gt;Blank.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/FilteredBlank.xlsx?version=1&amp;amp;modificationDate=1537806078903&amp;amp;api=v2&#34;&gt;FilteredBlank.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;non-blanks&#34;&gt;Non Blanks&lt;/h5&gt;
&lt;p&gt;When cells having any text are to be filtered, use &lt;code&gt;MatchNonBlanks&lt;/code&gt; filter function as demonstrated below. Sample files are given below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/Blank.xlsx?version=1&amp;amp;modificationDate=1537806074220&amp;amp;api=v2&#34;&gt;Blank.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.dynabic.com/download/attachments/72188214/FilteredNonBlank.xlsx?version=1&amp;amp;modificationDate=1537806668615&amp;amp;api=v2&#34;&gt;FilteredNonBlank.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;custom-filter-with-contains&#34;&gt;Custom filter with Contains&lt;/h5&gt;
&lt;p&gt;Excel provides custom filters like filter rows which contain some specific string. This feature is available in Aspose.Cells and demonstrated below by filtering the names in the sample file. Sample files are given below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/68944719/72417288.xlsx&#34;&gt;sourseSampleCountryNames.xlsx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/68944719/72417289.xlsx&#34;&gt;outSourseSampleCountryNames.xlsx&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;custom-filter-with-notcontains&#34;&gt;Custom filter with NotContains&lt;/h5&gt;
&lt;p&gt;Excel provides custom filters like filter rows which does not contain some specific string. This feature is available in Aspose.Cells and demonstrated below by filtering the names in the sample file given below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/68944719/72417288.xlsx&#34;&gt;sourseSampleCountryNames.xlsx&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;custom-filter-with-beginswith&#34;&gt;Custom filter with BeginsWith&lt;/h5&gt;
&lt;p&gt;Excel provides custom filters like filter rows which begins with some specific string. This feature is available in Aspose.Cells and demonstrated below by filtering the names in the sample file given below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/68944719/72417288.xlsx&#34;&gt;sourseSampleCountryNames.xlsx&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;custom-filter-with-endswith&#34;&gt;Custom filter with EndsWith&lt;/h5&gt;
&lt;p&gt;Excel provides custom filters like filter rows which ends with some specific string. This feature is available in Aspose.Cells and demonstrated below by filtering the names in the sample file given below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/68944719/72417288.xlsx&#34;&gt;sourseSampleCountryNames.xlsx&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Create Union Range</title>
      <link>https://roywangt.github.io/cells/net/developerguide/data/create&#43;union&#43;range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/data/create&#43;union&#43;range/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--create-union-range&#34;&gt;Aspose.Cells for .NET : Create Union Range&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#create-union-range&#34;&gt;Create Union Range&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;create-union-range&#34;&gt;Create Union Range&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides the ability to create Union Range by using the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/worksheetcollection/methods/createunionrange&#34;&gt;WorksheetCollection.CreateUnionRange&lt;/a&gt; method. The &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/worksheetcollection/methods/createunionrange&#34;&gt;WorksheetCollection.CreateUnionRange&lt;/a&gt; method accepts two parameters, the address to create the union range and the index of the worksheet. The &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/worksheetcollection/methods/createunionrange&#34;&gt;WorksheetCollection.CreateUnionRange&lt;/a&gt; method returns a &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/unionrange&#34;&gt;UnionRange&lt;/a&gt; object.&lt;/p&gt;
&lt;p&gt;The following code snippet demonstrates creating a Union Range by using the &lt;a href=&#34;https://apireference.aspose.com/cells/net/aspose.cells/worksheetcollection/methods/createunionrange&#34;&gt;WorksheetCollection.CreateUnionRange&lt;/a&gt; method. The output file generated by the code is attached for reference.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/106201464/106364952.xlsx&#34;&gt;Output File&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
