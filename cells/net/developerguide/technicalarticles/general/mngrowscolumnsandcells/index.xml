<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – Managing Rows Columns and Cells</title>
    <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/</link>
    <description>Recent content in Managing Rows Columns and Cells on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: Populate Data First by Row then by Column</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/populate&#43;data&#43;first&#43;by&#43;row&#43;then&#43;by&#43;column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/populate&#43;data&#43;first&#43;by&#43;row&#43;then&#43;by&#43;column/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--populate-data-first-by-row-then-by-column&#34;&gt;Aspose.Cells for .NET : Populate Data First by Row then by Column&lt;/h1&gt;
&lt;p&gt;Populating a spreadsheet with data first by row and then by column improves the overall performance.&lt;/p&gt;
&lt;p&gt;Putting data in the sequence A1, B1, A2, B2 is faster than A1, A2, B1, B2. If there are many cells in a worksheet and you follow the second sequence, that is, you&amp;rsquo;re filling the data row by row, this tip can make the program much faster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Insert or Delete Rows in an Excel Worksheet</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/insert&#43;or&#43;delete&#43;rows&#43;in&#43;an&#43;excel&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/insert&#43;or&#43;delete&#43;rows&#43;in&#43;an&#43;excel&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--insert-or-delete-rows-in-an-excel-worksheet&#34;&gt;Aspose.Cells for .NET : Insert or Delete Rows in an Excel Worksheet&lt;/h1&gt;
&lt;p&gt;When creating a new worksheet, or working with an existing worksheet, you might need to add extra rows or columns to accommodate data. At other times, you might need to delete rows or columns from specified positions in the worksheet.&lt;/p&gt;
&lt;p&gt;Aspose.Cells offers two methods for inserting and deleting rows: &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/insertrows/index&#34;&gt;Cells.InsertRows&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/deleterows/index&#34;&gt;Cells.DeleteRows&lt;/a&gt;. These methods are optimized for performance and do the job very quickly.&lt;/p&gt;
&lt;p&gt;To insert or remove a number of rows, we recommend that you always use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/insertrows/index&#34;&gt;Cells.InsertRows&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/deleterows/index&#34;&gt;Cells.DeleteRows&lt;/a&gt; methods instead of using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/insertrow&#34;&gt;Cells.InsertRow&lt;/a&gt; or &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/deleterow&#34;&gt;DeleteRow&lt;/a&gt; methods in a loop.&lt;/p&gt;
&lt;p&gt;Aspose.Cells works in the same way as Microsoft Excel does. When rows or columns are added, the worksheet content is shifted down and to the right. When rows or columns are removed, the worksheet content is shifted up or to the left. Any references in other worksheets and cells are updated when rows are added or removed.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Delete Blank Rows and Columns in a Worksheet</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/delete&#43;blank&#43;rows&#43;and&#43;columns&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/delete&#43;blank&#43;rows&#43;and&#43;columns&#43;in&#43;a&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--delete-blank-rows-and-columns-in-a-worksheet&#34;&gt;Aspose.Cells for .NET : Delete Blank Rows and Columns in a Worksheet&lt;/h1&gt;
&lt;p&gt;It is possible to delete all blank rows and columns from a worksheet. This is useful when, for example, generating a PDF file from a Microsoft Excel file and want to convert only rows and columns that contain data.&lt;/p&gt;
&lt;p&gt;Use the following Aspose.Cells methods to delete empty rows and columns:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;To delete blank rows, use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/deleteblankrows&#34;&gt;Cells.DeleteBlankRows()&lt;/a&gt; method.&lt;/li&gt;
&lt;li&gt;To delete blank columns, use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/deleteblankcolumns&#34;&gt;Cells.DeleteBlankColumns()&lt;/a&gt; method.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#deleting-blank-rows&#34;&gt;Deleting Blank Rows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#deleting-blank-columns&#34;&gt;Deleting Blank Columns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;deleting-blank-rows&#34;&gt;Deleting Blank Rows&lt;/h2&gt;
&lt;h2 id=&#34;deleting-blank-columns&#34;&gt;Deleting Blank Columns&lt;/h2&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Implementing Non-Sequential Ranges</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/implementing&#43;non-sequential&#43;ranges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/implementing&#43;non-sequential&#43;ranges/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--implementing-non-sequential-ranges&#34;&gt;Aspose.Cells for .NET : Implementing Non-Sequential Ranges&lt;/h1&gt;
&lt;p&gt;Normally, named ranges are rectangular with cells continuous and adjacent to each other. But sometimes, you may need to use a non-sequential cell range in which cells are not adjacent. Aspose.Cells supports creating a named range with non-adjacent cells.&lt;/p&gt;
&lt;p&gt;The code sample below shows how to create a named non-sequential range with Aspose.Cells for .NET.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Copy Range Style Only</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy&#43;range&#43;style&#43;only/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy&#43;range&#43;style&#43;only/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--copy-range-style-only&#34;&gt;Aspose.Cells for .NET : Copy Range Style Only&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy+range+data+only&#34;&gt;Copy Range Data Only&lt;/a&gt; and &lt;a href=&#34;https://docs2.aspose.com/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy+range+data+with+style&#34;&gt;Copy Range Data with Style&lt;/a&gt; explained how to copy data from a range to another on its own or complete with formatting. It is also possible to copy only the formatting. This article shows how.&lt;/p&gt;
&lt;p&gt;This example creates a workbook, populates it with data and copies a range&amp;rsquo;s style only.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a range.&lt;/li&gt;
&lt;li&gt;Create a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object with specified formatting attributes.&lt;/li&gt;
&lt;li&gt;Apply the style formatting to the range.&lt;/li&gt;
&lt;li&gt;Create a second range of cells.&lt;/li&gt;
&lt;li&gt;Copy the first range&amp;rsquo;s formatting to the second range.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Copy Range Data Only</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy&#43;range&#43;data&#43;only/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy&#43;range&#43;data&#43;only/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--copy-range-data-only&#34;&gt;Aspose.Cells for .NET : Copy Range Data Only&lt;/h1&gt;
&lt;p&gt;Sometimes, you need to copy data from one range of cells to another, copying the data only, not the formatting. Aspose.Cells offers this feature.&lt;/p&gt;
&lt;p&gt;This article provides a sample code that uses Aspose.Cells to copy a range of data.&lt;/p&gt;
&lt;p&gt;This example shows how to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a workbook.&lt;/li&gt;
&lt;li&gt;Add data to cells in the first worksheet.&lt;/li&gt;
&lt;li&gt;Create a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range&#34;&gt;Range&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object with specified formatting attributes.&lt;/li&gt;
&lt;li&gt;Apply the style formatting to the range.&lt;/li&gt;
&lt;li&gt;Create another range of cells.&lt;/li&gt;
&lt;li&gt;Copy data of the first range to this second range.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Copy Range Data with Style</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy&#43;range&#43;data&#43;with&#43;style/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy&#43;range&#43;data&#43;with&#43;style/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--copy-range-data-with-style&#34;&gt;Aspose.Cells for .NET : Copy Range Data with Style&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy+range+data+only&#34;&gt;Copy Range Data Only&lt;/a&gt; explained how to copy the data from a range of cells to another range. Specifically, it process applied a new set of styles to the copied cells. Aspose.Cells can also copy a range complete with formatting. This article explains how.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides a range of classes and methods for working with ranges, for example, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/createrange/index&#34;&gt;CreateRange()&lt;/a&gt;, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/styleflag&#34;&gt;StyleFlag&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/applystyle&#34;&gt;ApplyStyle()&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This example:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creates a workbook.&lt;/li&gt;
&lt;li&gt;Fills a number of cells in the first worksheet with data.&lt;/li&gt;
&lt;li&gt;Creates a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range&#34;&gt;Range&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Creates a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style&#34;&gt;Style&lt;/a&gt; object with specified formatting attributes.&lt;/li&gt;
&lt;li&gt;Applies the style to the data range.&lt;/li&gt;
&lt;li&gt;Creates a second range of cells.&lt;/li&gt;
&lt;li&gt;Copies data with the formatting from the first range to the second range.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Detect Merged Cells in a Worksheet</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/detect&#43;merged&#43;cells&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/detect&#43;merged&#43;cells&#43;in&#43;a&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--detect-merged-cells-in-a-worksheet&#34;&gt;Aspose.Cells for .NET : Detect Merged Cells in a Worksheet&lt;/h1&gt;
&lt;p&gt;This article provides information on how to get merged cell areas in a worksheet.&lt;/p&gt;
&lt;p&gt;Aspose.Cells allows you to get merged cell areas in a worksheet. You can unmerge (split) them too. This article shows the simplest code using &lt;strong&gt;Aspose.Cells API&lt;/strong&gt; to perform the task.&lt;/p&gt;
&lt;p&gt;The component provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/mergedcells&#34;&gt;Cells.MergedCells&lt;/a&gt; attribute which can get an ArrayList of merged cell areas. The following code sample shows you how to detect merged cells in a worksheet.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Sort Data</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/sort&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/sort&#43;data/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--sort-data&#34;&gt;Aspose.Cells for .NET : Sort Data&lt;/h1&gt;
&lt;p&gt;This article is designed to provide developers with a detailed understanding of how to sort data in a worksheet.&lt;/p&gt;
&lt;p&gt;Data sorting is a handy and versatile feature of Microsoft Excel. Generally, sorting is performed on a list, which is defined as a contiguous group of data where the data is displayed in columns. Aspose.Cells allows you to sort worksheet data alphabetically or numerically. It sorts data in the same way as Microsoft Excel does.&lt;/p&gt;
&lt;p&gt;You might work with Office Automation for data sorting but Office Automation has its drawbacks. There are several reasons and issues involved: security, stability, scalability/speed, price, and features. In short, there are many reasons to look for a different solution, with the top one being that Microsoft themselves strongly recommends against Office Automation from software solutions.&lt;/p&gt;
&lt;p&gt;In this article, we create a console application in Visual Studio.NET, and sort data with a few simple lines of code using the &lt;strong&gt;Aspose.Cells API&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;using-asposecells-to-sort-data-in-a-worksheet&#34;&gt;Using Aspose.Cells to Sort Data in a Worksheet&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a Microsoft Excel file with different data sets or contents.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download and install Aspose.Cells:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aspose.com/community/files/51/.net-components/aspose.cells-for-.net/default.aspx&#34;&gt;Download&lt;/a&gt; Aspose.Cells for .NET.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install it on your development computer.&lt;/p&gt;
&lt;p&gt;All &lt;a href=&#34;http://www.aspose.com/&#34;&gt;Aspose&lt;/a&gt; components, when installed, work in evaluation mode. The evaluation mode has no time limit and it only injects watermarks into produced documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a project:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Start Visual Studio .NET.&lt;/li&gt;
&lt;li&gt;Create a new console application.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add a reference to Aspose.Cells in your project:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a reference to …\Program Files\Aspose\ Aspose.Cells for .NET \Bin\Net1.0\Aspose.Cells.dll&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sort the data in the worksheet:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add code to the project.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Copy Rows and Columns</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy&#43;rows&#43;and&#43;columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy&#43;rows&#43;and&#43;columns/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--copy-rows-and-columns&#34;&gt;Aspose.Cells for .NET : Copy Rows and Columns&lt;/h1&gt;
&lt;p&gt;Aspose.Cells APIs provide the facility to copy rows and columns within or between the workbooks. While copying row or column, all the data is copied along with the styling, formulas (with updated references) and resulting values, comments, cell styles, hidden cells, images and drawing objects.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#copying-rows&#34;&gt;Copying Rows&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#copying-single-row&#34;&gt;Copying Single Row&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#copying-multiple-rows&#34;&gt;Copying Multiple Rows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#copying-columns&#34;&gt;Copying Columns&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#copying-single-column&#34;&gt;Copying Single Column&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2.2 &lt;a href=&#34;#copying-multiple-columns&#34;&gt;Copying Multiple Columns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;copying-rows&#34;&gt;Copying Rows&lt;/h2&gt;
&lt;h3 id=&#34;copying-single-row&#34;&gt;Copying Single Row&lt;/h3&gt;
&lt;p&gt;The following example shows how to copy a single row in a worksheet. The example uses a Microsoft Excel spreadsheet as input and copies the first row to the next 10 rows in the same worksheet.&lt;/p&gt;
&lt;h3 id=&#34;copying-multiple-rows&#34;&gt;Copying Multiple Rows&lt;/h3&gt;
&lt;p&gt;You can also copy multiple rows onto a new destination while using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/copyrows/index&#34;&gt;Cells.CopyRows&lt;/a&gt; method which takes an additional parameter of type integer to specify the number of source rows to be copied.&lt;/p&gt;
&lt;h2 id=&#34;copying-columns&#34;&gt;Copying Columns&lt;/h2&gt;
&lt;h3 id=&#34;copying-single-column&#34;&gt;Copying Single Column&lt;/h3&gt;
&lt;p&gt;The following example shows how to copy a column in a worksheet. This example uses an existing spreadsheet as input to the process and copies the first column to the next 10 columns using two different approaches.&lt;/p&gt;
&lt;h3 id=&#34;copying-multiple-columns&#34;&gt;Copying Multiple Columns&lt;/h3&gt;
&lt;p&gt;Similar to &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/copyrows/index&#34;&gt;Cells.CopyRows&lt;/a&gt; method, the Aspose.Cells APIs also provide the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/copycolumns/index&#34;&gt;Cells.CopyColumns&lt;/a&gt; method in order to copy multiple source columns to a new location.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Move Range of Cells in a Worksheet</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/move&#43;range&#43;of&#43;cells&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/move&#43;range&#43;of&#43;cells&#43;in&#43;a&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--move-range-of-cells-in-a-worksheet&#34;&gt;Aspose.Cells for .NET : Move Range of Cells in a Worksheet&lt;/h1&gt;
&lt;p&gt;This article shows how to move a range of cells in a worksheet.&lt;/p&gt;
&lt;p&gt;The following code sample shows you how to move range of cells in a worksheet.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: AutoFit Rows for Merged Cells</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/autofit&#43;rows&#43;for&#43;merged&#43;cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/autofit&#43;rows&#43;for&#43;merged&#43;cells/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--autofit-rows-for-merged-cells&#34;&gt;Aspose.Cells for .NET : AutoFit Rows for Merged Cells&lt;/h1&gt;
&lt;p&gt;Microsoft Excel provides a feature that allows you to auto-size the height of a cell according to its content. The feature is called auto-fit rows. Microsoft Excel doesn&amp;rsquo;t set auto-fit operation on merged cells natively. Sometimes the feature becomes vital for a user who really needs to implement auto-fit rows on merged cells too.&lt;/p&gt;
&lt;p&gt;Aspose.Cells supports this feature through the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/autofitteroptions&#34;&gt;AutoFitterOptions&lt;/a&gt; API. Using this API, it is possible to auto-fit rows in a worksheet including merged cells.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Add a Picture to an Excel Comment</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/add&#43;a&#43;picture&#43;to&#43;an&#43;excel&#43;comment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/add&#43;a&#43;picture&#43;to&#43;an&#43;excel&#43;comment/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--add-a-picture-to-an-excel-comment&#34;&gt;Aspose.Cells for .NET : Add a Picture to an Excel Comment&lt;/h1&gt;
&lt;p&gt;Microsoft Excel lets users customize the look and feel of spreadsheets to a great extent. It is even possible to add background pictures to comments.&lt;/p&gt;
&lt;p&gt;Comments are added to cells to record comments, anything from the details of how a formula is worked, where a value comes from or questions from reviewers. Adding a background image can be an aesthetic choice, or be used to strengthen branding.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#add-picture-to-comment-in-microsoft-excel&#34;&gt;Add Picture to Comment in Microsoft Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#add-picture-to-comment-using-aspose.cells&#34;&gt;Add Picture to Comment using Aspose.Cells&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;add-picture-to-comment-in-microsoft-excel&#34;&gt;Add Picture to Comment in Microsoft Excel&lt;/h2&gt;
&lt;p&gt;With Microsoft Excel 2007, it is possible to have an image as the background to a cell comment. In Excel 2007, this is accomplished (supposing the comment has already been added) this way:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Right-click the cell which contains the comment.&lt;/li&gt;
&lt;li&gt;Choose &lt;strong&gt;Show/Hide Comments&lt;/strong&gt; and clear any text from the comment.&lt;/li&gt;
&lt;li&gt;Click on the border of the comment to select it.&lt;/li&gt;
&lt;li&gt;Choose &lt;strong&gt;Format&lt;/strong&gt;, then &lt;strong&gt;Comment&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;On the Colors and Lines tab, click the arrow for &lt;strong&gt;Color&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Fill Effects&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;On the Picture tab, click &lt;strong&gt;Select Picture&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Locate and select the picture&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;add-picture-to-comment-using-asposecells&#34;&gt;Add Picture to Comment using Aspose.Cells&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides this valuable feature.&lt;/p&gt;
&lt;p&gt;The sample code below creates an XLSX file from scratch, and adds a comment with a picture background to cell A1.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Use Error Checking Options</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/use&#43;error&#43;checking&#43;options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/use&#43;error&#43;checking&#43;options/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--use-error-checking-options&#34;&gt;Aspose.Cells for .NET : Use Error Checking Options&lt;/h1&gt;
&lt;p&gt;Microsoft Excel allows users to define error checking options and rules. Users often see error checks when creating formulas, a small triangle at the top right corner of a cell highlights when there&amp;rsquo;s a problem with a cell. Excel provides information that helps users to correct common problems.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#types-of-errors&#34;&gt;Types of Errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#numbers-stored-as-text&#34;&gt;Numbers Stored as Text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;types-of-errors&#34;&gt;Types of Errors&lt;/h2&gt;
&lt;p&gt;Errors that mean that the formula cannot return a result - such as dividing a number by zero - require immediate attention and an error value is displayed in the cell. Clicking on the green triangle shows an exclamation mark, clicking this opens a list of options.&lt;/p&gt;
&lt;p&gt;The error can be resolved using the options, or be ignored. Ignoring an error means that that error will not appear in further error checks.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides error checking option features. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/errorcheckoption&#34;&gt;ErrorCheckOption&lt;/a&gt; class manages different types of error checks, for example, numbers stored as text, formula calculation errors, and validation errors. Use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/errorchecktype&#34;&gt;ErrorCheckType&lt;/a&gt; enumeration to set the desired error checking.&lt;/p&gt;
&lt;h2 id=&#34;numbers-stored-as-text&#34;&gt;Numbers Stored as Text&lt;/h2&gt;
&lt;p&gt;Occasionally, numbers might be formatted and stored in cells as text. This can cause problems with calculations or produce confusing sort orders. Numbers that are formatted as text are left-aligned instead of right-aligned in the cell. If a formula that should perform a mathematical operation on cells doesn&amp;rsquo;t return a value, check the alignment in the cells that the formula refers to – some or all of those cells might be numbers formatted as text.&lt;/p&gt;
&lt;p&gt;You can use the error checking options to quickly convert numbers stored as text to real numbers. In Microsoft Excel 2003:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;On the &lt;strong&gt;Tools&lt;/strong&gt; menu, click &lt;strong&gt;Options&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Select the Error Checking tab.&lt;br&gt;
&lt;strong&gt;Number stored as text&lt;/strong&gt; option is checked by default.&lt;/li&gt;
&lt;li&gt;Disable it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following sample code shows how to disable the numbers stored as text error checking option for a worksheet in the template XLS file using the Aspose.Cells APIs.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Insert a Picture Based on Cell Reference</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/insert&#43;a&#43;picture&#43;based&#43;on&#43;cell&#43;reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/insert&#43;a&#43;picture&#43;based&#43;on&#43;cell&#43;reference/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--insert-a-picture-based-on-cell-reference&#34;&gt;Aspose.Cells for .NET : Insert a Picture Based on Cell Reference&lt;/h1&gt;
&lt;p&gt;Sometimes you have an empty picture and need to show data or contents in the picture by setting a cell reference in the Formula Bar. Aspose.Cells supports this feature (Microsoft Excel 2010).&lt;/p&gt;
&lt;h2 id=&#34;inserting-a-picture-based-on-cell-reference&#34;&gt;Inserting a Picture Based on Cell Reference&lt;/h2&gt;
&lt;p&gt;Aspose.Cells supports displaying the contents of a worksheet cell in an image shape. You can link the picture to the cell that contains the data that you want to display. Since the cell or cell range is linked to the graphic object, changes that you make to the data in that cell or cell range automatically appear in the graphic object. Add a picture to the worksheet by calling the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.drawing/shapecollection/methods/addpicture/index&#34;&gt;AddPicture&lt;/a&gt; method of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.drawing/shapecollection&#34;&gt;ShapeCollection&lt;/a&gt; collection (encapsulated in the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; object). Specify the cell range by using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.drawing/picture/properties/formula&#34;&gt;Formula&lt;/a&gt; attribute of the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.drawing/picture&#34;&gt;Picture&lt;/a&gt; object.&lt;/p&gt;
&lt;h3 id=&#34;code-example&#34;&gt;Code Example&lt;/h3&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Add Conditional Icons Set with the Cell Text</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/add&#43;conditional&#43;icons&#43;set&#43;with&#43;the&#43;cell&#43;text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/add&#43;conditional&#43;icons&#43;set&#43;with&#43;the&#43;cell&#43;text/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--add-conditional-icons-set-with-the-cell-text&#34;&gt;Aspose.Cells for .NET : Add Conditional Icons Set with the Cell Text&lt;/h1&gt;
&lt;p&gt;Sometimes, you want to add conditional icons next to the text in a cell to make data more meaningful to readers. You want to use some of the conditional formatting icon types but without applying conditional formatting to cells. Aspose.Cells supports the feature.&lt;/p&gt;
&lt;p&gt;The following code sample shows how to add conditional icons set with the Cell Text.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Search and Replace Data in a Range</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/search&#43;and&#43;replace&#43;data&#43;in&#43;a&#43;range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/search&#43;and&#43;replace&#43;data&#43;in&#43;a&#43;range/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--search-and-replace-data-in-a-range&#34;&gt;Aspose.Cells for .NET : Search and Replace Data in a Range&lt;/h1&gt;
&lt;p&gt;Sometimes you need to search for and replace specific data in a range ignoring any cell values outside the desired range. Aspose.Cells allows you to limit a search to a specific range. This article explains how.&lt;/p&gt;
&lt;p&gt;Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/findoptions/methods/setrange&#34;&gt;FindOptions.SetRange()&lt;/a&gt; method for specifying a range when searching data. Below code sample search and replace data in a range.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Reading Cell Values in Multiple Threads Simultaneously</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/reading&#43;cell&#43;values&#43;in&#43;multiple&#43;threads&#43;simultaneously/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/reading&#43;cell&#43;values&#43;in&#43;multiple&#43;threads&#43;simultaneously/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--reading-cell-values-in-multiple-threads-simultaneously&#34;&gt;Aspose.Cells for .NET : Reading Cell Values in Multiple Threads Simultaneously&lt;/h1&gt;
&lt;p&gt;Needing to read cell values in multiple threads simultaneously is a common requirement. This article explains how to use Aspose.Cells for this purpose.&lt;/p&gt;
&lt;p&gt;To read cell values in more than one thread simultaneously, set &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/multithreadreading&#34;&gt;Worksheet.Cells.MultiThreadReading&lt;/a&gt; to &lt;strong&gt;true&lt;/strong&gt;. If you do not, you might get the wrong cell values.&lt;/p&gt;
&lt;p&gt;The following code:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creates a workbook.&lt;/li&gt;
&lt;li&gt;Adds a worksheet.&lt;/li&gt;
&lt;li&gt;Populates the worksheet with string values.&lt;/li&gt;
&lt;li&gt;It then creates two threads that simultaneously read values from random cells.&lt;br&gt;
If the values read are correct, nothing happens. If the values read are incorrect, then a message is displayed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you comment this line:&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_e97addb418&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_e97addb418&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;testWorkbook&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Worksheets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;].&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MultiThreadReading&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;then the following message is displayed:&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_2894486ad3&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_2894486ad3&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;R&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;C&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;col&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;MessageBox&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Show&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;This message box will show up when cells read values are incorrect.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;Otherwise, the program runs without showing any message which means all values read from cells are correct.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Merge or Unmerge Range of Cells</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/merge&#43;or&#43;unmerge&#43;range&#43;of&#43;cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/merge&#43;or&#43;unmerge&#43;range&#43;of&#43;cells/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--merge-or-unmerge-range-of-cells&#34;&gt;Aspose.Cells for .NET : Merge or Unmerge Range of Cells&lt;/h1&gt;
&lt;p&gt;You can use Aspose.Cells to merge or split a range of cells. Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range/methods/merge&#34;&gt;Range.Merge()&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range/methods/unmerge&#34;&gt;Range.UnMerge()&lt;/a&gt; methods for this purpose. This article explains how to merge a range of cells into a single cell.&lt;/p&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;The following sample code first creates a range - A1:D4 - then merges the cells in the range into a single cell using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range/methods/merge&#34;&gt;Range.Merge()&lt;/a&gt; method. Similarly, you can split cells by creating a range and calling the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range/methods/unmerge&#34;&gt;Range.UnMerge()&lt;/a&gt; method.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Get Validation Applied on a Cell</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/get&#43;validation&#43;applied&#43;on&#43;a&#43;cell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/get&#43;validation&#43;applied&#43;on&#43;a&#43;cell/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--get-validation-applied-on-a-cell&#34;&gt;Aspose.Cells for .NET : Get Validation Applied on a Cell&lt;/h1&gt;
&lt;p&gt;You can use Aspose.Cells to get the validation applied to a cell. Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getvalidation&#34;&gt;Cell.GetValidation()&lt;/a&gt; method for this purpose. If there is no validation applied on the cell, it returns null.&lt;/p&gt;
&lt;p&gt;Similarly, you can use &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/validationcollection/methods/getvalidationincell&#34;&gt;Worksheet.Validations.GetValidationInCell&lt;/a&gt; method to acquire the validation applied to a cell by providing its row and column indices.&lt;/p&gt;
&lt;p&gt;Below code sample, shows you how to get validation applied on a cell.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Verify that Cell Value Satisfies Data Validation Rules</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/verify&#43;that&#43;cell&#43;value&#43;satisfies&#43;data&#43;validation&#43;rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/verify&#43;that&#43;cell&#43;value&#43;satisfies&#43;data&#43;validation&#43;rules/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--verify-that-cell-value-satisfies-data-validation-rules&#34;&gt;Aspose.Cells for .NET : Verify that Cell Value Satisfies Data Validation Rules&lt;/h1&gt;
&lt;p&gt;Microsoft Excel allows users to add data validation rules to cells. For example, a decimal validation specifies that only numbers between 10 and 20 can be entered. If a user enters a different number. Microsoft Excel shows an error message and prompts them to enter a number in the correct range. If you copy and paste a number, say 3, into the cell, Excel does not run a validation check or show an error message.&lt;/p&gt;
&lt;p&gt;Sometimes, it is necessary to verify whether a value satisfies the data validation rules applied to the cell programmatically. In the case above, for example, the entry should fail.&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Aspose.Cells provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getvalidationvalue&#34;&gt;Cell.GetValidationValue()&lt;/a&gt; method to validate cell values programmatically. If the value in a cell does not satisfy the data validation rule applied to that cell, it returns &lt;strong&gt;False&lt;/strong&gt;, else &lt;strong&gt;True&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The following sample code illustrates how the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getvalidationvalue&#34;&gt;Cell.GetValidationValue()&lt;/a&gt; method works. First, it enters the value 3 into C1. Because this does not satisfy the data validation rule, the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getvalidationvalue&#34;&gt;Cell.GetValidationValue()&lt;/a&gt; method returns &lt;strong&gt;False&lt;/strong&gt;. Then, it enters the value 15 into C1. Because this value satisfies the data validation rule, the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getvalidationvalue&#34;&gt;Cell.GetValidationValue()&lt;/a&gt; method returns &lt;strong&gt;True&lt;/strong&gt;. Similarly, it returns &lt;strong&gt;False&lt;/strong&gt; for value 30.&lt;/p&gt;
&lt;h3 id=&#34;output&#34;&gt;Output&lt;/h3&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_666610f1e2&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_666610f1e2&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;Is&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Valid&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;False&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Is&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;15&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Valid&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;True&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Is&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Valid&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;False&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
    <item>
      <title>Net: Adding HTML Rich Text inside the Cell</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/adding&#43;html&#43;rich&#43;text&#43;inside&#43;the&#43;cell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/adding&#43;html&#43;rich&#43;text&#43;inside&#43;the&#43;cell/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--adding-html-rich-text-inside-the-cell&#34;&gt;Aspose.Cells for .NET : Adding HTML Rich Text inside the Cell&lt;/h1&gt;
&lt;p&gt;Aspose.Cells supports converting Microsoft Excel oriented HTML into XLS/XLSX format. It means, the HTML generated by Microsoft Excel can be converted back to XLS/XLSX format using Aspose.Cells.&lt;/p&gt;
&lt;p&gt;Similarly, if there is some simple HTML, Aspose.Cells can convert it into HTML Rich Text. Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/htmlstring&#34;&gt;Cell.HtmlString&lt;/a&gt; property which can take such a simple HTML and convert it to formatted cell text.&lt;/p&gt;
&lt;p&gt;Below code sample shows you how to add HTML rich text inside the cell. Please see the screenshot of the output Excel file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/thumbnails/5017640/5112268&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Accessing Table from Cell and Adding Values inside it using Row and Column Offsets</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/accessing&#43;table&#43;from&#43;cell&#43;and&#43;adding&#43;values&#43;inside&#43;it&#43;using&#43;row&#43;and&#43;column&#43;offsets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/accessing&#43;table&#43;from&#43;cell&#43;and&#43;adding&#43;values&#43;inside&#43;it&#43;using&#43;row&#43;and&#43;column&#43;offsets/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--accessing-table-from-cell-and-adding-values-inside-it-using-row-and-column-offsets&#34;&gt;Aspose.Cells for .NET : Accessing Table from Cell and Adding Values inside it using Row and Column Offsets&lt;/h1&gt;
&lt;p&gt;Normally, you add values inside the Table or List Object using &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/putvalue/index&#34;&gt;Cell.PutValue()&lt;/a&gt; method. But sometimes, you might need to add values inside the Table or List Object using the row and column offsets.&lt;/p&gt;
&lt;p&gt;In order to access Table or List Object from a cell, use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/gettable&#34;&gt;Cell.GetTable()&lt;/a&gt; method. To add values inside it using the row and column offsets, use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.tables/listobject/methods/putcellvalue&#34;&gt;ListObject.PutCellValue&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The following screenshot shows the source Excel file used inside the code. It contains the empty table and highlights the cell D5 which lies inside the table. We will access this table from cell D5 using &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/gettable&#34;&gt;Cell.GetTable()&lt;/a&gt;method and then add the values inside it using both &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/putvalue/index&#34;&gt;Cell.PutValue()&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.tables/listobject/methods/putcellvalue&#34;&gt;ListObject.PutCellValue&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5017353/5112295.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The following screenshot shows the output Excel file generated by the code. As you can see cell D5 has a value and cell F6 which is at the offset 2,2 of the table has a value.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5017353/5112294.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;
&lt;p&gt;The following sample code loads the source Excel file as shown in the above screenshot and adds values inside the table and generates the output Excel file as shown above.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Get Cell String Value with and without Formatting</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/get&#43;cell&#43;string&#43;value&#43;with&#43;and&#43;without&#43;formatting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/get&#43;cell&#43;string&#43;value&#43;with&#43;and&#43;without&#43;formatting/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--get-cell-string-value-with-and-without-formatting&#34;&gt;Aspose.Cells for .NET : Get Cell String Value with and without Formatting&lt;/h1&gt;
&lt;p&gt;Aspose.Cells provides a method &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getstringvalue&#34;&gt;Cell.GetStringValue()&lt;/a&gt; which can be used to get the string value of the cell with or without any formatting. Suppose, you have a cell with value 0.012345 and you have formatted it to display two decimal places only. It will then display as 0.01 in Excel. You can retrieve string values both as 0.01 and as 0.012345 using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getstringvalue&#34;&gt;Cell.GetStringValue()&lt;/a&gt; method. It takes &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cellvalueformatstrategy&#34;&gt;CellValueFormatStrategy&lt;/a&gt; enum as a parameter which has the following values&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CellValueFormatStrategy.CellStyle&lt;/li&gt;
&lt;li&gt;CellValueFormatStrategy.DisplayStyle&lt;/li&gt;
&lt;li&gt;CellValueFormatStrategy.None&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following sample code explains the use of &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getstringvalue&#34;&gt;Cell.GetStringValue()&lt;/a&gt; method.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Copy Row Heights of Source Range to Destination Range</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy&#43;row&#43;heights&#43;of&#43;source&#43;range&#43;to&#43;destination&#43;range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/copy&#43;row&#43;heights&#43;of&#43;source&#43;range&#43;to&#43;destination&#43;range/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--copy-row-heights-of-source-range-to-destination-range&#34;&gt;Aspose.Cells for .NET : Copy Row Heights of Source Range to Destination Range&lt;/h1&gt;
&lt;p&gt;Sometime user needs to copy row heights of source range to destination range. Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/pastetype&#34;&gt;PasteType&lt;/a&gt;.RowHeights enum for this purpose. When you will set &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/pasteoptions/properties/pastetype&#34;&gt;PasteOptions.PasteType&lt;/a&gt; property with &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/pastetype&#34;&gt;PasteType&lt;/a&gt;.RowHeights enum then heights of all rows inside the source range will be copied to destination range.&lt;/p&gt;
&lt;p&gt;The following sample code explains how to use &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/pastetype&#34;&gt;PasteType&lt;/a&gt;.RowHeights enum to copy row heights of source range into destination range. Once you will open the output excel file generated by this code in Microsoft Excel, you will see that destination range row heights are exactly the same as source range row heights.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Calculate the Width and Height of the Cell Value in Unit of Pixels</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/calculate&#43;the&#43;width&#43;and&#43;height&#43;of&#43;the&#43;cell&#43;value&#43;in&#43;unit&#43;of&#43;pixels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/calculate&#43;the&#43;width&#43;and&#43;height&#43;of&#43;the&#43;cell&#43;value&#43;in&#43;unit&#43;of&#43;pixels/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--calculate-the-width-and-height-of-the-cell-value-in-unit-of-pixels&#34;&gt;Aspose.Cells for .NET : Calculate the Width and Height of the Cell Value in Unit of Pixels&lt;/h1&gt;
&lt;p&gt;Sometimes you need to calculate the width and height of cell value to fit the cell value inside the cell. Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getwidthofvalue&#34;&gt;Cell.GetWidthOfValue()&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getheightofvalue&#34;&gt;Cell.GetHeightOfValue()&lt;/a&gt; methods for this purpose. By using these methods you can calculate width and height of the cell value and then set the width of the column and height of the row of that cell respectively and this will then adjust or fit the cell value inside the cell.&lt;/p&gt;
&lt;p&gt;Alternatively, you can also &lt;a href=&#34;https://docs2.aspose.com/cells/net/developerguide/rowsandcolumns/autofit+rows+and+columns&#34;&gt;autofit rows and columns of your cell or range of cells&lt;/a&gt; using Aspose.Cells APIs.&lt;/p&gt;
&lt;p&gt;The following code explains the use of &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getwidthofvalue&#34;&gt;Cell.GetWidthOfValue()&lt;/a&gt; and &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/getheightofvalue&#34;&gt;Cell.GetHeightOfValue()&lt;/a&gt; methods.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Find if the cell value starts with single quote mark</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/find&#43;if&#43;the&#43;cell&#43;value&#43;starts&#43;with&#43;single&#43;quote&#43;mark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/find&#43;if&#43;the&#43;cell&#43;value&#43;starts&#43;with&#43;single&#43;quote&#43;mark/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--find-if-the-cell-value-starts-with-single-quote-mark&#34;&gt;Aspose.Cells for .NET : Find if the cell value starts with single quote mark&lt;/h1&gt;
&lt;p&gt;Aspose.Cells now provides the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/quoteprefix&#34;&gt;Style.QuotePrefix&lt;/a&gt; property to find if the cell value starts with a single quote mark. Before this property, there was no way to distinguish between strings like &lt;code&gt;sample&lt;/code&gt; and &lt;code&gt;&#39;sample&lt;/code&gt; etc.&lt;/p&gt;
&lt;p&gt;The following sample code explains that the strings like &lt;code&gt;sample&lt;/code&gt; and &lt;code&gt;&#39;sample&lt;/code&gt; cannot be differentiated with &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/stringvalue&#34;&gt;Cell.StringValue&lt;/a&gt; property. Therefore we must use &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/style/properties/quoteprefix&#34;&gt;Style.QuotePrefix&lt;/a&gt; property to distinguish them.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Update references in other worksheets while deleting blank columns and rows in a worksheet</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/update&#43;references&#43;in&#43;other&#43;worksheets&#43;while&#43;deleting&#43;blank&#43;columns&#43;and&#43;rows&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/update&#43;references&#43;in&#43;other&#43;worksheets&#43;while&#43;deleting&#43;blank&#43;columns&#43;and&#43;rows&#43;in&#43;a&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--update-references-in-other-worksheets-while-deleting-blank-columns-and-rows-in-a-worksheet&#34;&gt;Aspose.Cells for .NET : Update references in other worksheets while deleting blank columns and rows in a worksheet&lt;/h1&gt;
&lt;p&gt;When you delete blank columns and rows in a worksheet, then its references in other worksheets become invalid. If you want to avoid this behavior and want those references of the current worksheet in other worksheets are also updated, then please use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/deleteoptions/properties/updatereference&#34;&gt;DeleteOptions.UpdateReference&lt;/a&gt; property and set it to &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#update-references-in-other-worksheets-while-deleting-blank-columns-and-rows-in-a-worksheet&#34;&gt;Update references in other worksheets while deleting blank columns and rows in a worksheet&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#programming-sample&#34;&gt;Programming Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#console-output&#34;&gt;Console Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;update-references-in-other-worksheets-while-deleting-blank-columns-and-rows-in-a-worksheet&#34;&gt;Update references in other worksheets while deleting blank columns and rows in a worksheet&lt;/h2&gt;
&lt;p&gt;Please see the following sample code and its console output. The cell E3 in the second worksheet has a formula &lt;code&gt;=Sheet1!C3&lt;/code&gt; which is referring to cell C3 in the first worksheet. If you will set &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/deleteoptions/properties/updatereference&#34;&gt;DeleteOptions.UpdateReference&lt;/a&gt; property as &lt;strong&gt;true&lt;/strong&gt;, this formula will be updated and become &lt;code&gt;=Sheet1!A1&lt;/code&gt; on deleting blank columns and rows in the first worksheet. However, if you will set &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/deleteoptions/properties/updatereference&#34;&gt;DeleteOptions.UpdateReference&lt;/a&gt; property as &lt;strong&gt;false&lt;/strong&gt;, the formula in cell E3 of the second worksheet will remain &lt;code&gt;=Sheet1!C3&lt;/code&gt; and become invalid.&lt;/p&gt;
&lt;h3 id=&#34;programming-sample&#34;&gt;Programming Sample&lt;/h3&gt;
&lt;h3 id=&#34;console-output&#34;&gt;Console Output&lt;/h3&gt;
&lt;p&gt;This is the console output of the above sample code when &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/deleteoptions/properties/updatereference&#34;&gt;DeleteOptions.UpdateReference&lt;/a&gt; property has been set as &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_64223c6034&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_64223c6034&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;E3&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;before&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;deleting&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;blank&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;columns&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Sheet1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;--------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Formula&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Sheet1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;C1&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;


&lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;E3&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;after&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;deleting&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;blank&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;columns&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Sheet1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;--------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Formula&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Sheet1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;This is the console output of the above sample code when &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/deleteoptions/properties/updatereference&#34;&gt;DeleteOptions.UpdateReference&lt;/a&gt; property has been set as &lt;strong&gt;false&lt;/strong&gt;. As you can see, the formula in cell E3 of the second worksheet is not updated and its cell value is now 0 instead of 4 which is invalid.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_75762e52b7&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_75762e52b7&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;E3&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;before&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;deleting&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;blank&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;columns&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Sheet1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;--------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;--------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Formula&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Sheet1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;C1&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Cell&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
    <item>
      <title>Net: How and Where to Use Enumerators</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/how&#43;and&#43;where&#43;to&#43;use&#43;enumerators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/mngrowscolumnsandcells/how&#43;and&#43;where&#43;to&#43;use&#43;enumerators/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--how-and-where-to-use-enumerators&#34;&gt;Aspose.Cells for .NET : How and Where to Use Enumerators&lt;/h1&gt;
&lt;p&gt;An enumerator is an object that provides the ability to traverse a container or a collection. Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection, whereas &lt;code&gt;IEnumerable&lt;/code&gt; is an interface that defines one method &lt;code&gt;GetEnumerator&lt;/code&gt; which returns an &lt;code&gt;IEnumerator&lt;/code&gt; interface, this, in turn, allows read-only access to a collection.&lt;/p&gt;
&lt;p&gt;Aspose.Cells APIs provide a bunch of enumerators however, this article mainly discusses the three types as listed below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cells Enumerator&lt;/li&gt;
&lt;li&gt;Rows Enumerator&lt;/li&gt;
&lt;li&gt;Columns Enumerator&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#how-to-use-enumerators&#34;&gt;How to use Enumerators&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#cells-enumerator&#34;&gt;Cells Enumerator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#rows-enumerator&#34;&gt;Rows Enumerator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3 &lt;a href=&#34;#columns-enumerator&#34;&gt;Columns Enumerator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#where-to-use-enumerators&#34;&gt;Where to use Enumerators&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#using-display-range&#34;&gt;Using Display Range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2.2 &lt;a href=&#34;#using-maxdatarow-&amp;amp;-maxdatacolumn&#34;&gt;Using MaxDataRow &amp;amp; MaxDataColumn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;how-to-use-enumerators&#34;&gt;How to use Enumerators&lt;/h1&gt;
&lt;h2 id=&#34;cells-enumerator&#34;&gt;Cells Enumerator&lt;/h2&gt;
&lt;p&gt;There are various ways to access the Cells Enumerator, and one can use any of these methods based on the application requirements. Here are the methods that return the cells enumerator.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/getenumerator&#34;&gt;Cells.GetEnumerator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/row/methods/getenumerator&#34;&gt;Row.GetEnumerator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/range/methods/getenumerator&#34;&gt;Range.GetEnumerator&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;All of the above-mentioned methods return the enumerator that allows traversing the collection of cells which have been initialized.&lt;/p&gt;
&lt;p&gt;While traversing the cells, the collection should not be modified (operations that will cause a new Cell to be instantiated or existing Cell to be deleted). Otherwise, the enumerator may not be able to traverse all cells correctly (some elements may be traversed repeatedly or skipped).&lt;/p&gt;
&lt;p&gt;The following code example demonstrates the implementation of the &lt;code&gt;IEnumerator&lt;/code&gt; interface for a Cells collection.&lt;/p&gt;
&lt;h2 id=&#34;rows-enumerator&#34;&gt;Rows Enumerator&lt;/h2&gt;
&lt;p&gt;The Rows Enumerator can be accessed while using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/rowcollection/methods/getenumerator&#34;&gt;RowCollection.GetEnumerator&lt;/a&gt; method. The following code example demonstrates the implementation of the &lt;code&gt;IEnumerator&lt;/code&gt; interface for &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/rowcollection&#34;&gt;RowCollection&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;columns-enumerator&#34;&gt;Columns Enumerator&lt;/h2&gt;
&lt;p&gt;The Columns Enumerator can be accessed while using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/columncollection&#34;&gt;ColumnCollection.GetEnumerator&lt;/a&gt; method. The following code example demonstrates the implementation of the &lt;code&gt;IEnumerator&lt;/code&gt; interface for &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/columncollection&#34;&gt;ColumnCollection&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;where-to-use-enumerators&#34;&gt;Where to use Enumerators&lt;/h1&gt;
&lt;p&gt;In order to discuss the advantages of using enumerators, let&amp;rsquo;s take a real time example.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scenario&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;An application requirement is to traverse all cells in a given &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/worksheet&#34;&gt;Worksheet&lt;/a&gt; to read their values. There could be several ways to implement this goal. A few are demonstrated below.&lt;/p&gt;
&lt;h2 id=&#34;using-display-range&#34;&gt;Using Display Range&lt;/h2&gt;
&lt;h2 id=&#34;using-maxdatarow--maxdatacolumn&#34;&gt;Using MaxDataRow &amp;amp; MaxDataColumn&lt;/h2&gt;
&lt;p&gt;As you can observe that both of the above-mentioned approaches use more or less similar logic, that is; loop over all cells in the collection to read the cell values. This could be problematic for a number of reasons as discussed below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;APIs such as &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/maxrow&#34;&gt;MaxRow&lt;/a&gt;, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/maxdatarow&#34;&gt;MaxDataRow&lt;/a&gt;, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/maxcolumn&#34;&gt;MaxColumn&lt;/a&gt;, &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/maxdatacolumn&#34;&gt;MaxDataColumn&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cells/properties/maxdisplayrange&#34;&gt;MaxDisplayRange&lt;/a&gt; require extra time to gather the corresponding statistics. In case the data matrix (rows x columns) is large, using these APIs could impose a performance penalty.&lt;/li&gt;
&lt;li&gt;In most of the cases, not all cells in a given range are instantiated. In such situations to check every cell in the matrix is not so efficient as compared to check only the initialized cells.&lt;/li&gt;
&lt;li&gt;Accessing a cell in a loop as Cells row, column will cause all cell objects in a range to be instantiated, which may eventually cause &lt;code&gt;OutOfMemoryException&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Based on above-mentioned facts, the following are the possible scenarios where enumerators should be used.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Read-only access of the cell collection is required, that is; the requirement is to only inspect the cells.&lt;/li&gt;
&lt;li&gt;A large number of cells are to be traversed.&lt;/li&gt;
&lt;li&gt;Only initialized cells/rows/columns to be traversed.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
