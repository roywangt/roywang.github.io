<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – General</title>
    <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/</link>
    <description>Recent content in General on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: Using Your Own Icons Instead of the GridWeb Default Icons</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/using&#43;your&#43;own&#43;icons&#43;instead&#43;of&#43;the&#43;gridweb&#43;default&#43;icons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/using&#43;your&#43;own&#43;icons&#43;instead&#43;of&#43;the&#43;gridweb&#43;default&#43;icons/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--using-your-own-icons-instead-of-the-gridweb-default-icons&#34;&gt;Aspose.Cells for .NET : Using Your Own Icons Instead of the GridWeb Default Icons&lt;/h1&gt;
&lt;p&gt;Sometimes you might want to use your own icons (images) instead of Aspose.Cells.GridWeb control&amp;rsquo;s default icons. This article explains how to do this.&lt;/p&gt;
&lt;p&gt;The control’s default icons are located in the URL path &amp;ldquo;/acw_client/&amp;rdquo;. The file path can be: &amp;ldquo;C:\Program Files\Aspose\Aspose.Cells for .NET\acw_client&amp;rdquo; by default. You find files like submit.gif, save.gif etc. in that folder. If you want to replace these images with your own, add a config section to the web.config file of your web application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XML&lt;/strong&gt;&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_157633c5c7&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_157633c5c7&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;appSettings&amp;gt;&lt;/span&gt;
 &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;add&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;key=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Aspose.Cells.GridWeb.acw_client_path&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/acw_client/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/appSettings&amp;gt;&lt;/span&gt;
 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;You may have noticed that this configuration only affects the control images path and doesn&amp;rsquo;t affect the control’s client-scripts path. For example, if you run your page with the GridWeb control and check the source file in the browser, you may find that the acw_client _path property of the grid’s DIV element still says: “/yourApp/webform1.aspx/”. In some cases, you may need to redefine the client-script path. To force the control to use the redefined image path as the client-script path, add another config setting in the &lt;code&gt;appSettings&lt;/code&gt; section:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XML&lt;/strong&gt;&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_f0d66dc93b&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_f0d66dc93b&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;add&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;key=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Aspose.Cells.GridWeb.force_script_path&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;This config will only take effect with the licensed control.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Using a Common Button to Submit Grid Data</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/using&#43;a&#43;common&#43;button&#43;to&#43;submit&#43;grid&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/using&#43;a&#43;common&#43;button&#43;to&#43;submit&#43;grid&#43;data/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--using-a-common-button-to-submit-grid-data&#34;&gt;Aspose.Cells for .NET : Using a Common Button to Submit Grid Data&lt;/h1&gt;
&lt;p&gt;Aspose.Cells.GridWeb provides some built-in command buttons like &lt;strong&gt;Submit&lt;/strong&gt; and &lt;strong&gt;Save&lt;/strong&gt;. Use these buttons to perform related tasks.&lt;/p&gt;
&lt;p&gt;This article shows how to submit data to a server not just by clicking GridWeb&amp;rsquo;s built-in &lt;strong&gt;Save&lt;/strong&gt; command button, but by clicking a common ASP.NET Button (Web Control). The purpose of this article is to show the flexibility of Aspose.Cells.GridWeb. Moreover, this article also uses special functions exposed by Aspose.Cells.GridWeb to be used in the client side script.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#submitting-grid-data-using-an-asp.net-button&#34;&gt;Submitting Grid Data Using an ASP.NET Button&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#1.-creating-a-test-application&#34;&gt;1. Creating a Test Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#2.-adding-code-to-page_load-event&#34;&gt;2. Adding Code to Page_Load Event&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.2.1 &lt;a href=&#34;#code-example&#34;&gt;Code Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;1.3 &lt;a href=&#34;#3.-running-the-application&#34;&gt;3. Running the Application&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;submitting-grid-data-using-an-aspnet-button&#34;&gt;Submitting Grid Data Using an ASP.NET Button&lt;/h2&gt;
&lt;p&gt;Aspose.Cells.GridWeb provides three built-in buttons (&lt;strong&gt;Submit&lt;/strong&gt;, &lt;strong&gt;Save&lt;/strong&gt; and &lt;strong&gt;Undo&lt;/strong&gt;). After editing in GridWeb, a user may click the &lt;strong&gt;Submit&lt;/strong&gt; or &lt;strong&gt;Save&lt;/strong&gt; button in the Tab Bar to let GridWeb submit data to the server. If the user clicks a Sheet Tab, the GridWeb control performs the same task as that of the built-in command buttons. Aspose.Cells.GridWeb also supports adding this functionality to a common ASP.NET Button control, but you need to add some extra code to the application.&lt;/p&gt;
&lt;h3 id=&#34;1-creating-a-test-application&#34;&gt;1. Creating a Test Application&lt;/h3&gt;
&lt;p&gt;Open your Visual Studio.NET IDE and create a new ASP.NET Web Application project. Once the application is created, a default WebForm1.aspx page will be added to your project. Drag &amp;amp; drop GridWeb control from your Toolbox to Web Form . If you can&amp;rsquo;t find GridWeb control in your Toolbox then refer to this page: &lt;a href=&#34;https://docs2.aspose.com/cells/net/gettingstarted/gridsuiteandvsnet/integrate+aspose.cells+grid+controls+with+visual+studio.net&#34;&gt;Integrate Aspose.Cells Grid Controls with Visual Studio.NET&lt;/a&gt; to learn more about it.After the GridWeb control is added to your Web Form, also add a Button web control from Toolbox to your Web Form.&lt;/p&gt;
&lt;h3 id=&#34;2-adding-code-to-page_load-event&#34;&gt;2. Adding Code to Page_Load Event&lt;/h3&gt;
&lt;p&gt;Now, it&amp;rsquo;s time to add some code to Page_Load event of the Web Form. You can double click on the Web Form in design view and VS.NET IDE will automatically take you to the Page_Load event handler where you would need to use Attributes collection of the Button for overriding its OnClick event.&lt;/p&gt;
&lt;p&gt;ASP.NET Button control is a server side control. Whenever it is clicked, a server side event is triggered but if you want to use this Button control to execute some code on client side (normally using javascript) then you need to modify it&amp;rsquo;s onclick attribute under Page_Load event. Aspose.Cells.GridWeb provides some functions that can be invoked in javascript to deal with GridWeb control from client side. In the example below, we have used updateData &amp;amp; validateAll functions (which are client side funtions) of GridWeb to update and validate Grid data.&lt;/p&gt;
&lt;h4 id=&#34;code-example&#34;&gt;Code Example&lt;/h4&gt;
&lt;h3 id=&#34;3-running-the-application&#34;&gt;3. Running the Application&lt;/h3&gt;
&lt;p&gt;Now, you can compile and run your application by pressing Ctrl+F5 and page will be opened in a new browser window. Let&amp;rsquo;s add some values to GridWeb and press Submit Grid Data to Server button and you would see occuring a postback to update and validate GridWeb data.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Aspose.Cells.GridWeb offers great flexibility for working with GridWeb controls from either server or client side. Developers have wide number of options to use GridWeb control in different kinds of scenarios to provide better solutions to their customers.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Using Show Formulas Feature of GridWeb</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/using&#43;show&#43;formulas&#43;feature&#43;of&#43;gridweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/using&#43;show&#43;formulas&#43;feature&#43;of&#43;gridweb/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--using-show-formulas-feature-of-gridweb&#34;&gt;Aspose.Cells for .NET : Using Show Formulas Feature of GridWeb&lt;/h1&gt;
&lt;p&gt;Sometimes, you need to find an easy way for the cells containing formulas. You need to have an approach to quickly read through all formulas to check for errors. This can help you to trace the data being used in a formula.&lt;/p&gt;
&lt;p&gt;Aspose.Cells.GridWeb provides the feature what is called Show Formulas in Microsoft Excel.&lt;/p&gt;
&lt;h2 id=&#34;using-show-formulas-feature&#34;&gt;Using Show Formulas Feature&lt;/h2&gt;
&lt;p&gt;All you need to use a shortcut &amp;ldquo;CTRL + ~&amp;rdquo; to display all the formulas in the worksheet.&lt;/p&gt;
&lt;p&gt;For example, we load a template file into the GridWeb which has formulas in the C column, here is the code we simply used to load the file.&lt;/p&gt;
&lt;p&gt;The file is loaded into the GridWeb and we can see a sheet with all the values in the picture below.&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5013557/5115165.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;After pressing CTRL + ~, all formulas are displayed.&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5013557/5115166.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Loading GridWeb Data in Async Mode</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/loading&#43;gridweb&#43;data&#43;in&#43;async&#43;mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/loading&#43;gridweb&#43;data&#43;in&#43;async&#43;mode/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--loading-gridweb-data-in-async-mode&#34;&gt;Aspose.Cells for .NET : Loading GridWeb Data in Async Mode&lt;/h1&gt;
&lt;p&gt;When creating a Workbook with large data sets, or reading a big Microsoft Excel file, it will surely take more time and resources to do that. The total memory the process will take is always a concern. There are measures which can be adopted to cope with the challenge. Aspose.Cells.GridWeb provides some relevant options and APIs to lower, reduce and optimize memory usage. Also, it can help the process work more efficiently and run faster. For a worksheet that contains large cells data, you may load the dataset asynchronously that can improve the overall performance for user&amp;rsquo;s experience.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;GridWeb.EnableAsync&lt;/code&gt; option to optimize memory and performance for cells data. When building a large data set for cells. When you set the option to true, the data loading will be based on current visible Windows area only. In short, when you scroll in the worksheet&amp;rsquo;s cells data in GridWeb, it will load new Windows data based on the current scroll position only.&lt;/p&gt;
&lt;p&gt;The following example shows how to enable GridWeb&amp;rsquo;s async mode.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Specify the path where GridWeb stores temporary session files</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/specify&#43;the&#43;path&#43;where&#43;gridweb&#43;stores&#43;temporary&#43;session&#43;files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/specify&#43;the&#43;path&#43;where&#43;gridweb&#43;stores&#43;temporary&#43;session&#43;files/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--specify-the-path-where-gridweb-stores-temporary-session-files&#34;&gt;Aspose.Cells for .NET : Specify the path where GridWeb stores temporary session files&lt;/h1&gt;
&lt;p&gt;When GridWeb session mode is ViewState, it stores its temporary session files inside the Application Base Directory. Sometimes, it is not OK to store temporary session files there because Application Base Directory might not have write permissions on it. In such cases, GridWeb throws such an exception&lt;/p&gt;
&lt;p&gt;[UnauthorizedAccessException: Access tothe path &amp;lsquo;D:\inetpub\wwwroot\AsposeExcelTest\gwb_tempGridWeb1&amp;rsquo; is denied.]&lt;/p&gt;
&lt;p&gt;The solution to above problem is to give write access to Application Base Directory or change the GridWeb temporary session files path having write access using the &lt;code&gt;GridWeb.SessionStorePath&lt;/code&gt; property. This path should be relative to Application Base Directory.&lt;/p&gt;
&lt;h2 id=&#34;specify-the-path-where-gridweb-stores-temporary-session-files&#34;&gt;Specify the path where GridWeb stores temporary session files&lt;/h2&gt;
&lt;p&gt;The following sample code specifies the path where GridWeb stores temporary session files.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Using client side functions to select range or get the selected range in GridWeb</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/using&#43;client&#43;side&#43;functions&#43;to&#43;select&#43;range&#43;or&#43;get&#43;the&#43;selected&#43;range&#43;in&#43;gridweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/using&#43;client&#43;side&#43;functions&#43;to&#43;select&#43;range&#43;or&#43;get&#43;the&#43;selected&#43;range&#43;in&#43;gridweb/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--using-client-side-functions-to-select-range-or-get-the-selected-range-in-gridweb&#34;&gt;Aspose.Cells for .NET : Using client side functions to select range or get the selected range in GridWeb&lt;/h1&gt;
&lt;p&gt;You can use the following client side functions to select a range or to get the selected range in a GridWeb using JavaScript.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;getSelectRange()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setSelectRange()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clearSelections()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;getSelectRange()&lt;/code&gt; returns the last selected range. &lt;code&gt;setSelectRange()&lt;/code&gt; selects the given range. &lt;code&gt;clearSelections()&lt;/code&gt; clears all selection excluding current active cell.&lt;/p&gt;
&lt;h2 id=&#34;using-client-side-functions-to-select-a-range-or-to-get-the-selected-range-in-a-gridweb-using-javascript&#34;&gt;Using client side functions to select a range or to get the selected range in a GridWeb using JavaScript&lt;/h2&gt;
&lt;p&gt;The following code explains the usage of these functions.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Copy and Paste Rows in GridDesktop within the Control and between the Control and Excel</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/copy&#43;and&#43;paste&#43;rows&#43;in&#43;griddesktop&#43;within&#43;the&#43;control&#43;and&#43;between&#43;the&#43;control&#43;and&#43;excel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/copy&#43;and&#43;paste&#43;rows&#43;in&#43;griddesktop&#43;within&#43;the&#43;control&#43;and&#43;between&#43;the&#43;control&#43;and&#43;excel/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--copy-and-paste-rows-in-griddesktop-within-the-control-and-between-the-control-and-excel&#34;&gt;Aspose.Cells for .NET : Copy and Paste Rows in GridDesktop within the Control and between the Control and Excel&lt;/h1&gt;
&lt;p&gt;If you want to enable copy and paste rows in GridDesktop within the control or between control and excel, then please set the &lt;code&gt;GridDesktop.ClipboardCopyPaste&lt;/code&gt; property to true. You can set this property in design time or in code. The default value of this property is false. Currently, it can only copy and paste cell values and it will not copy any other setting of the cell like format, border style and so on.&lt;/p&gt;
&lt;h2 id=&#34;setting-griddesktopclipboardcopypaste-property-in-design-mode-and-run-time&#34;&gt;Setting &lt;code&gt;GridDesktop.ClipboardCopyPaste&lt;/code&gt; property in Design Mode and Run Time&lt;/h2&gt;
&lt;p&gt;The following sample code sets &lt;code&gt;GridDesktop.ClipboardCopyPaste&lt;/code&gt; property in &lt;strong&gt;Run Time&lt;/strong&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Enter Cell Data of GridWeb Worksheet in Percentage Format</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/enter&#43;cell&#43;data&#43;of&#43;gridweb&#43;worksheet&#43;in&#43;percentage&#43;format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/enter&#43;cell&#43;data&#43;of&#43;gridweb&#43;worksheet&#43;in&#43;percentage&#43;format/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--enter-cell-data-of-gridweb-worksheet-in-percentage-format&#34;&gt;Aspose.Cells for .NET : Enter Cell Data of GridWeb Worksheet in Percentage Format&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#enter-cell-data-of-gridweb-worksheet-in-percentage-format&#34;&gt;Enter Cell Data of GridWeb Worksheet in Percentage Format&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;GridWeb now supports users to enter cell data in percentage format like 3% and the data in the cell will automatically be formatted as 3.00%. However, you will have to set the cell style to &lt;code&gt;Percentage Format&lt;/code&gt; which is either &lt;code&gt;GridTableItemStyle.NumberType&lt;/code&gt; a 9 or 10. The number 9 will format 3% as 3% but the number 10 will format 3% as 3.00%.&lt;/p&gt;
&lt;p&gt;If you have not set the cell style to &lt;code&gt;Percentage Format&lt;/code&gt;, then input data 3% will display as 0.03.&lt;/p&gt;
&lt;h2 id=&#34;enter-cell-data-of-gridweb-worksheet-in-percentage-format&#34;&gt;Enter Cell Data of GridWeb Worksheet in Percentage Format&lt;/h2&gt;
&lt;p&gt;The following sample code sets the cell A1 &lt;code&gt;GridTableItemStyle.NumberType&lt;/code&gt; as 10, therefore the input data 3% automatically be formatted as 3.00% as shown in the screenshot.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5013563/5115163.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h3&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Calculate Custom Functions in GridWeb</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/calculate&#43;custom&#43;functions&#43;in&#43;gridweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/gridcontrols/general/calculate&#43;custom&#43;functions&#43;in&#43;gridweb/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--calculate-custom-functions-in-gridweb&#34;&gt;Aspose.Cells for .NET : Calculate Custom Functions in GridWeb&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#calculate-custom-functions-in-gridweb&#34;&gt;Calculate Custom Functions in GridWeb&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Aspose.Cells.GridWeb supports the calculation of custom functions with the &lt;code&gt;GridWeb.CustomCalculationEngine&lt;/code&gt; property. This property takes the instance of &lt;code&gt;GridAbstractCalculationEngine&lt;/code&gt; interface. Please implement &lt;code&gt;GridAbstractCalculationEngine&lt;/code&gt; interface and calculate your custom functions with your own logic.&lt;/p&gt;
&lt;h2 id=&#34;calculate-custom-functions-in-gridweb&#34;&gt;Calculate Custom Functions in GridWeb&lt;/h2&gt;
&lt;p&gt;The following sample code adds a custom function named &lt;code&gt;MYTESTFUNC()&lt;/code&gt; in cell B3. Then we calculate the value of this function by implementing the &lt;code&gt;GridAbstractCalculationEngine&lt;/code&gt; interface. We calculate &lt;code&gt;MYTESTFUNC()&lt;/code&gt; in such a way that it multiplies its parameter with 2 and returns the result. So if its parameter is 9, it will return 2*9 = 18.&lt;/p&gt;
&lt;h3 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h3&gt;

      </description>
    </item>
    
  </channel>
</rss>
