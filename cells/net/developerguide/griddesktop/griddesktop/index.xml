<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – Working with GridDesktop</title>
    <link>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/</link>
    <description>Recent content in Working with GridDesktop on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: Opening an Excel File</title>
      <link>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/opening&#43;an&#43;excel&#43;file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/opening&#43;an&#43;excel&#43;file/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--opening-an-excel-file&#34;&gt;Aspose.Cells for .NET : Opening an Excel File&lt;/h1&gt;
&lt;p&gt;A unique feature of Aspose.Cells Grid Suite is its compatibility with Excel files. In this topic, we will demonstrate that how users can open Excel files in their windows applications using Aspose.Cells.GridDesktop control.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#opening-excel-file&#34;&gt;Opening Excel File&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#opening-from-a-file&#34;&gt;Opening from a File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2.2 &lt;a href=&#34;#opening-a-csv-file&#34;&gt;Opening a CSV file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2.3 &lt;a href=&#34;#opening-from-a-stream&#34;&gt;Opening from a Stream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;To open an Excel file using &lt;code&gt;Aspose.Cells.GridDesktop&lt;/code&gt; you have to create a desktop application with GridDesktop Control in it. If you don&amp;rsquo;t know about how to add Aspose.Cells.GridDesktop control to your windows form then you should refer to &lt;a href=&#34;http://www.aspose.com/docs/display/cellsnet/How+to+Use+Aspose.Cells.GridDesktop&#34;&gt;How to use Aspose.Cells.GridDesktop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Aspose.Cells.GridDesktop&lt;/code&gt; provides three following different ways to open an Excel file.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Opening from a File&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opening a CSV file&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opening from a Stream&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;opening-excel-file&#34;&gt;Opening Excel File&lt;/h2&gt;
&lt;p&gt;In this example create a desktop application and do the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add one GridControl Control to the form.&lt;/li&gt;
&lt;li&gt;Add three buttons with their text properties set as following:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Open Excel File&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Open CSV File&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Open from Stream&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;opening-from-a-file&#34;&gt;Opening from a File&lt;/h3&gt;
&lt;p&gt;To load the content from an Excel file to Aspose.Cells.GridDesktop control, you will have to call a method of the control to specify the path of the Excel file. After that, Aspose.Cells.GridDesktop control will automatically find the file from the specified path and display its contents. The code snippet to load the contents of an Excel file is provided in the below example. Create the &lt;code&gt;Click&lt;/code&gt; event of the &lt;strong&gt;Open Excel File&lt;/strong&gt; button and paste the following code inside it.&lt;/p&gt;
&lt;p&gt;The above code snippet can be used by developers in any way they want. For example, if you want to load an Excel file automatically when a windows form loads then you can add this code under the Load event of your Form.&lt;/p&gt;
&lt;h3 id=&#34;opening-a-csv-file&#34;&gt;Opening a CSV file&lt;/h3&gt;
&lt;p&gt;Aspose.Cells.GridDesktop control supports loading CSV file also. Create the &lt;code&gt;Click&lt;/code&gt; event of the &lt;strong&gt;Open CSV File&lt;/strong&gt; button and paste the following code inside it.&lt;/p&gt;
&lt;h3 id=&#34;opening-from-a-stream&#34;&gt;Opening from a Stream&lt;/h3&gt;
&lt;p&gt;In our above discussion, we have discussed about loading an Excel file by using its file path but Aspose.Cells.GridDesktop control also supports loading Excel file from a stream. Create the &lt;code&gt;Click&lt;/code&gt; event of the &lt;strong&gt;Open from Stream&lt;/strong&gt; button and paste the following code inside it.&lt;/p&gt;
&lt;p&gt;Using file as a stream is a better approach to prohibit any kind of file access or sharing violation problems because this approach ensures closing all connections to the files by closing the stream.&lt;/p&gt;
&lt;p&gt;IMPORTANT: An important point to discuss is that Aspose.Cells.GridDesktop control also contains a method named &lt;code&gt;LoadFromExcel&lt;/code&gt;, which is also used to load the contents of an Excel file to the Grid. But, this method is now obsolete. So, it is recommended for all developers to use the &lt;code&gt;ImportExcelFile&lt;/code&gt; method that is more robust and efficient than the obsolete one.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Saving an Excel File</title>
      <link>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/saving&#43;an&#43;excel&#43;file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/saving&#43;an&#43;excel&#43;file/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--saving-an-excel-file&#34;&gt;Aspose.Cells for .NET : Saving an Excel File&lt;/h1&gt;
&lt;p&gt;Using Aspose.Cells.GridDesktop control, users cannot only create new Excel files but also manage existing ones. But, in both cases, it would be necessary to save the contents of the Aspose.Cells.GridDesktop. So, this is the topic of our discussion now to let our users know about how can they save their Grid contents as an Excel file.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#saving-file&#34;&gt;Saving File&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#saving-as-a-file&#34;&gt;Saving as a File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2.2 &lt;a href=&#34;#saving-as-a-stream&#34;&gt;Saving as a Stream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;To save the content of Aspose.Cells.GridDesktop control as an Excel file, &lt;code&gt;Aspose.Cells.GridDesktop&lt;/code&gt; provides follwoing methods.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Saving as a File&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Saving as a Stream&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;saving-file&#34;&gt;Saving File&lt;/h2&gt;
&lt;p&gt;Create a desktop application and add two buttons with a GridControl control to the form. Set text properties of buttons as &lt;strong&gt;Save as File&lt;/strong&gt; and &lt;strong&gt;Save as Stream&lt;/strong&gt; respectively.&lt;/p&gt;
&lt;h3 id=&#34;saving-as-a-file&#34;&gt;Saving as a File&lt;/h3&gt;
&lt;p&gt;Create the &lt;code&gt;Click&lt;/code&gt; event of the &lt;strong&gt;Save as File&lt;/strong&gt; button and paste the following code inside it.&lt;/p&gt;
&lt;p&gt;IMPORTANT: An important point to discuss is that Aspose.Cells.GridDesktop control also contains a method named &lt;code&gt;SaveToExcel&lt;/code&gt; , which is also used to load the contents of an Excel file to the Grid. But, this method is now obsolete. So, it is recommended for all developers to use &lt;code&gt;ExportExcelFile&lt;/code&gt; method that is more robust and efficient than the obsoleted one.&lt;/p&gt;
&lt;h3 id=&#34;saving-as-a-stream&#34;&gt;Saving as a Stream&lt;/h3&gt;
&lt;p&gt;Sometimes, it might be required by developers to save their Grid contents to a stream (For example, &lt;code&gt;MemoryStream&lt;/code&gt;). To facilitate this task, Aspose.Cells.GridDesktop control also supports saving Grid data to a stream. Create the &lt;code&gt;Click&lt;/code&gt; event of the &lt;strong&gt;Save as Stream&lt;/strong&gt; button and paste the following code inside it.&lt;/p&gt;
&lt;p&gt;IMPORTANT: Microsoft Excel supports Excel sheets can contain 65,536 rows and 256 columns max. Aspose.Cells.GridDesktop also follows the same standards. In the Aspose.Cells.GridDesktop control, developers can create more rows and columns than the standard limit but when saving the grid data to an Excel file, an exception will be thrown. It means that only data contained in the 65,536 rows and 256 columns can be saved to an Excel file using Aspose.Cells.GridDesktop.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with Aspose.Cells.GridDesktop Events</title>
      <link>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/working&#43;with&#43;aspose.cells.griddesktop&#43;events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/working&#43;with&#43;aspose.cells.griddesktop&#43;events/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--working-with-asposecellsgriddesktop-events&#34;&gt;Aspose.Cells for .NET : Working with Aspose.Cells.GridDesktop Events&lt;/h1&gt;
&lt;p&gt;Events are used to send notifications when a change occurs in a control or class. &lt;code&gt;Aspose.Cells.GridDesktop&lt;/code&gt; has several events that are used to perform specific tasks when certain changes occur in the control. This topic provides an introduction to all events supported by the &lt;code&gt;Aspose.Cells.GridDesktop&lt;/code&gt; control and explains how can to handle those events.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#handling-grid-events&#34;&gt;Handling Grid Events&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;Aspose.Cells.GridDesktop&lt;/code&gt; control supports several events that provide more control for performing operations when specific events are triggered. Below is a complete list of events supported by the &lt;code&gt;Aspose.Cells.GridDesktop&lt;/code&gt; control.&lt;/p&gt;
&lt;p&gt;This list doesn&amp;rsquo;t include those events that are inherited by &lt;code&gt;Aspose.Cells.GridDesktop&lt;/code&gt; from Control class.&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Events&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;SelectedSheetIndexChanged&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when a user selects a new worksheet, that is, when the selected sheet changes from one worksheet to another. This event can also be triggered programmatically if the &lt;code&gt;GridDesktop&lt;/code&gt; control&amp;rsquo;s &lt;code&gt;ActiveSheetIndex&lt;/code&gt; property changes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;RowHeaderClick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when the row header is clicked.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;RowHeaderDoubleClick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when the row header is double clicked.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;RowColumnHiddenChanged&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when the row or column hidden status is changed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ColumnHeaderClick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when the column header is clicked.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ColumnHeaderDoubleClick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when the column header is double clicked.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;FocusedCellChanged&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs whenever a cell&amp;rsquo;s focus is changed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CellDataChanged&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when the data or value inside a Grid cell is changed. This event can also be triggered if a cell&amp;rsquo;s value is changed programmatically using the &lt;code&gt;Value&lt;/code&gt; property or the &lt;code&gt;SetCellValue&lt;/code&gt; method of a &lt;code&gt;GridCell&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CellButtonClick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when the cell button is clicked.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CellCheckedChanged&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when the &lt;code&gt;Checked&lt;/code&gt; property of cell checkbox is changed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CellSelectedIndexChanged&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when the &lt;code&gt;SelectedIndex&lt;/code&gt; property of cell combo-box is changed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CellClick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when a Grid cell is clicked.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CellDoubleClick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when a Grid cell is double clicked.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CellKeyPressed&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when a key is pressed while a cell has focus. If you want to create an event handler for CellKeyPressed event then set the Handled property of CellKeyEventArgs argument to true for preventing the GridDesktop control from handling the key event.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;AfterInsertRows&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when a row is inserted. You may get the row index by using the &lt;code&gt;Aspose.Cells.GridDesktop.WorksheetEventArgs&lt;/code&gt; argument&amp;rsquo;s &lt;code&gt;Index&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;AfterInsertColumns&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Occurs when a column is inserted. You may get the column index by using the &lt;code&gt;Aspose.Cells.GridDesktop.WorksheetEventArgs&lt;/code&gt; argument&amp;rsquo;s &lt;code&gt;Index&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;h2 id=&#34;handling-grid-events&#34;&gt;Handling Grid Events&lt;/h2&gt;
&lt;p&gt;To perform a specific operation when a specific event is triggered, create an event handler. An event handler performs a particular task when a certain event is triggered. Below, an event handler is set up to handle a simple Grid event using Visual Studio.NET.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1: Selecting an Event of Aspose.Cells.GridDesktop Control&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In Visual Studio, select the &lt;code&gt;Aspose.Cells.GridDesktop&lt;/code&gt; control and open its &lt;strong&gt;Properties&lt;/strong&gt; dialog.&lt;/li&gt;
&lt;li&gt;Click the &lt;strong&gt;Events&lt;/strong&gt; tab.&lt;/li&gt;
&lt;li&gt;Select an event. (for this example, the &lt;strong&gt;CellClick&lt;/strong&gt; event is selected).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Step 2: Creating an Event Handler&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Double-click a selected event in the &lt;strong&gt;Properties&lt;/strong&gt; dialog.&lt;/li&gt;
&lt;li&gt;When the event is double clicked, an event handler is created by Visual Studio.NET. Following is designer generated code which shows that an event is created for the GridControl Control.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now Add code to perform the desired operation inside the event handler. For this example, we have added a line of code that displays a message box for notifications.&lt;br&gt;
Have a look at the event handler that visual Studio has added to the &lt;code&gt;GridDesktop&lt;/code&gt; control&amp;rsquo;s &lt;code&gt;CellClick&lt;/code&gt; event. It&amp;rsquo;ll look something like the code below.&lt;/p&gt;
&lt;p&gt;**&lt;br&gt;
Step 3: Running the Application**&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Build and run the application.&lt;/li&gt;
&lt;li&gt;Whenever a grid cell is clicked, a message box with the message &amp;ldquo;Cell is Clicked&amp;rdquo; appears.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Managing GridDesktops Context Menu</title>
      <link>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/managing&#43;griddesktops&#43;context&#43;menu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/managing&#43;griddesktops&#43;context&#43;menu/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--managing-griddesktops-context-menu&#34;&gt;Aspose.Cells for .NET : Managing GridDesktops Context Menu&lt;/h1&gt;
&lt;p&gt;Aspose.Cells.GridDesktop has a context menu which has all the commonly used commands. The control allows you to hide/show menu items. Moreover, it is possible to add new menu items with event handlers to the menu.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#managing-the-context-menu&#34;&gt;Managing the Context Menu&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#hiding-context-menu-items&#34;&gt;Hiding Context Menu Items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2.2 &lt;a href=&#34;#adding-new-menu-items&#34;&gt;Adding New Menu Items&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;ContextMenuManager&lt;/code&gt; class is used to manage the context menu items. The &lt;code&gt;GridDesktop.ContextMenuManager&lt;/code&gt; attribute gets the instance of &lt;code&gt;ContextMenuManager&lt;/code&gt; object. For example, the &lt;code&gt;ContextMenuManager.MenuItemAvailable_Copy&lt;/code&gt; attribute gets or sets a value indicating whether the context menu item &lt;strong&gt;Copy&lt;/strong&gt; is available or not. Similarly, we have all the corresponding attributes for different context menu items.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; By default, all the context menu items are visible in the list.&lt;/p&gt;
&lt;h2 id=&#34;managing-the-context-menu&#34;&gt;Managing the Context Menu&lt;/h2&gt;
&lt;h3 id=&#34;hiding-context-menu-items&#34;&gt;Hiding Context Menu Items&lt;/h3&gt;
&lt;p&gt;To perform this task, we first take a look the default context menu the GridDesktop has.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GridDeskop&amp;rsquo;s default menu&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5017852/5113856.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now, hide some menu items using the code below:&lt;/p&gt;
&lt;p&gt;After executing the above code, some menu items will not be visible for the users:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Some menu items are hidden&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5017852/5113857.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;adding-new-menu-items&#34;&gt;Adding New Menu Items&lt;/h3&gt;
&lt;p&gt;Add a new context menu item to the list using the following code snippet.&lt;/p&gt;
&lt;p&gt;We also specify an event handler for the new command/option.&lt;/p&gt;
&lt;p&gt;After executing the above code, a new menu item can be seen in the context menu. A message will also appear when cell is clicked.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A new menu item is added to the list&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5017852/5113858.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Using Aspose.Cells.GridDesktop in WPF Application</title>
      <link>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/using&#43;aspose.cells.griddesktop&#43;in&#43;wpf&#43;application/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/using&#43;aspose.cells.griddesktop&#43;in&#43;wpf&#43;application/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--using-asposecellsgriddesktop-in-wpf-application&#34;&gt;Aspose.Cells for .NET : Using Aspose.Cells.GridDesktop in WPF Application&lt;/h1&gt;
&lt;p&gt;This article demonstrates how to use the Windows Presentation Foundation (WPF) Designer for Visual Studio to host a Windows Forms control such as Aspose.Cells.GridDesktop in a WPF application.&lt;br&gt;
We will be using Visual Studio 2015 to demonstrate the process, however, you can use any version including Visual Studio 2008 or later.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#create-a-wpf-application-using-visual-studio&#34;&gt;Create a WPF application using Visual Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#add-references-to-required-namespaces&#34;&gt;Add references to required namespaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#add-references-to-xaml&#34;&gt;Add references to XAML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#add-aspose.cells.griddesktop-control-to-xaml&#34;&gt;Add Aspose.Cells.GridDesktop control to XAML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;5 &lt;a href=&#34;#use-aspose.cells.griddesktop&#34;&gt;Use Aspose.Cells.GridDesktop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6 &lt;a href=&#34;#build-&amp;amp;-run&#34;&gt;Build &amp;amp; Run&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;This tutorial will walk you through the process of adding Aspose.Cells.GridDesktop control to a WPF application. You need any version of the Visual Studio IDE that supports WPF development in order to try this on your side.&lt;/p&gt;
&lt;h2 id=&#34;create-a-wpf-application-using-visual-studio&#34;&gt;Create a WPF application using Visual Studio&lt;/h2&gt;
&lt;p&gt;First create a WPF application using Visual Studio IDE. Click on &lt;strong&gt;File&lt;/strong&gt; &amp;raquo; &lt;strong&gt;New&lt;/strong&gt; &amp;raquo; &lt;strong&gt;Project&lt;/strong&gt; menu and select &lt;strong&gt;WPF Application&lt;/strong&gt; from Templates, name the project and click &lt;strong&gt;OK&lt;/strong&gt;. You can target your project to any .NET Framework higher than 2.0, however, you cannot use client profile .NET Frameworks.&lt;/p&gt;
&lt;h2 id=&#34;add-references-to-required-namespaces&#34;&gt;Add references to required namespaces&lt;/h2&gt;
&lt;p&gt;Add the references to the following assemblies by right clicking the References from Solution Explorer window and select Add Reference menu.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WindowsFormsIntegration assembly (WindowsFormsIntegration.dll).&lt;/li&gt;
&lt;li&gt;Windows Forms assembly (System.Windows.Forms.dll).&lt;/li&gt;
&lt;li&gt;Aspose.Cells.GridDesktop assembly (Aspose.Cells.GridDesktop.dll).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This action adds the required assemblies to the application, that is; copies the assemblies to the the Bin folder of the application.&lt;/p&gt;
&lt;h2 id=&#34;add-references-to-xaml&#34;&gt;Add references to XAML&lt;/h2&gt;
&lt;p&gt;Next, go to the XAML file and add the following namespaces and assembly references within the Windows tag.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_2b022abe97&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_2b022abe97&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;xmlns&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;wf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;xmlns&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;gridDesktop&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;clr-namespace:Aspose.Cells.GridDesktop;assembly=Aspose.Cells.GridDesktop&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;&lt;strong&gt;The final Windows tag will look similar to as shown below.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5013801/5115200.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;add-asposecellsgriddesktop-control-to-xaml&#34;&gt;Add Aspose.Cells.GridDesktop control to XAML&lt;/h2&gt;
&lt;p&gt;Simply add the below code inside the Grid tag in XAML. The &lt;strong&gt;WindowsFormsHost&lt;/strong&gt; tag is used to host Windows Forms control and &lt;strong&gt;gridDesktop:GridDesktop&lt;/strong&gt; tag represents the Aspose.Cells.GridDesktop control. You can also name the control so that it can be referenced easily in the code.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_73ad72b43d&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_73ad72b43d&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;WindowsFormsHost&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Loaded&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;FrameworkElement_OnLoaded&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;WindowsFormsHost&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Child&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;gridDesktop&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GridDesktop&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;grid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;WindowsFormsHost&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Child&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;WindowsFormsHost&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;&lt;strong&gt;The final XAML will look as follow.&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5013801/5115201.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;use-asposecellsgriddesktop&#34;&gt;Use Aspose.Cells.GridDesktop&lt;/h2&gt;
&lt;p&gt;We can now access &amp;amp; use Aspose.Cells.GridDesktop control in the .cs file as any other Windows Forms applications. In order to keep the demonstration simple, we are just loading a sample spreadsheet in the Aspose.Cells.GridDesktop control and saving it back. Moreover, we have used the &lt;code&gt;FrameworkElement_OnLoaded&lt;/code&gt; event to trigger the following statements.&lt;/p&gt;
&lt;h2 id=&#34;build--run&#34;&gt;Build &amp;amp; Run&lt;/h2&gt;
&lt;p&gt;Now, build and run the application using &lt;strong&gt;F5&lt;/strong&gt; or &lt;strong&gt;Start&lt;/strong&gt; button on the Visual Studio UI.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Find GridDesktop Version at Runtime</title>
      <link>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/find&#43;griddesktop&#43;version&#43;at&#43;runtime/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/find&#43;griddesktop&#43;version&#43;at&#43;runtime/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--find-griddesktop-version-at-runtime&#34;&gt;Aspose.Cells for .NET : Find GridDesktop Version at Runtime&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#find-griddesktop-version-at-runtime&#34;&gt;Find GridDesktop Version at Runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Sometime, it is important to find the GridDesktop version at runtime. For example, you want to make sure that you are using the correct version or you are debugging your application and you want to know the version of GridDesktop currently in use. GridDesktop provides &lt;code&gt;Aspose.Cells.GridDesktop.GridDesktop.GetVersion()&lt;/code&gt; method which returns the GridDesktop version at runtime.&lt;/p&gt;
&lt;h2 id=&#34;find-griddesktop-version-at-runtime&#34;&gt;Find GridDesktop Version at Runtime&lt;/h2&gt;
&lt;p&gt;The following sample code finds the GridDesktop version at runtime. The screenshot shows the result of the execution of this sample code for a reference.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/48136516/48496684.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Default Font and Font Color of the GridDesktop</title>
      <link>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/default&#43;font&#43;and&#43;font&#43;color&#43;of&#43;the&#43;griddesktop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/default&#43;font&#43;and&#43;font&#43;color&#43;of&#43;the&#43;griddesktop/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--default-font-and-font-color-of-the-griddesktop&#34;&gt;Aspose.Cells for .NET : Default Font and Font Color of the GridDesktop&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#change-default-font-and-font-color-at-design-time&#34;&gt;Change Default Font and Font Color at Design Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#change-default-font-and-font-color-at-run-time&#34;&gt;Change Default Font and Font Color at Run Time&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Sometimes, you want to change the default font and font color of the GridDesktop. Please use the following two properties for this purpose. You can access these properties at Design Time or at Runtime depending upon your needs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GridDesktop.DefaultCellFont&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GridDesktop.DefaultCellFontColor&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;change-default-font-and-font-color-at-design-time&#34;&gt;Change Default Font and Font Color at Design Time&lt;/h2&gt;
&lt;p&gt;The following screenshot shows how to change the default font and font color of GridDesktop at Design Time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/50266230/50528264.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;change-default-font-and-font-color-at-run-time&#34;&gt;Change Default Font and Font Color at Run Time&lt;/h2&gt;
&lt;p&gt;The following sample code explains how to change the default font and font color of GridDesktop at Run Time.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_fdba524d3c&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_fdba524d3c&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Assign your desired Font object to DefaultCellFont property
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Drawing&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Font&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fnt&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Drawing&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Font&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Arial Black&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;gridDesktop1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DefaultCellFont&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fnt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Assign your desired Font color to DefaultCellFontColor property
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;gridDesktop1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DefaultCellFontColor&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Drawing&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Color&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Blue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
    <item>
      <title>Net: Handling Events after Deleting Columns and Rows in GridDesktop</title>
      <link>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/handling&#43;events&#43;after&#43;deleting&#43;columns&#43;and&#43;rows&#43;in&#43;griddesktop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/griddesktop/griddesktop/handling&#43;events&#43;after&#43;deleting&#43;columns&#43;and&#43;rows&#43;in&#43;griddesktop/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--handling-events-after-deleting-columns-and-rows-in-griddesktop&#34;&gt;Aspose.Cells for .NET : Handling Events after Deleting Columns and Rows in GridDesktop&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#handling-events-after-deleting-columns-and-rows-in-griddesktop&#34;&gt;Handling Events after Deleting Columns and Rows in GridDesktop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#sample-code&#34;&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Aspose.Cells for GridDesktop&lt;/code&gt; has added two new events i.e. &lt;code&gt;AfterDeleteColumns&lt;/code&gt; and &lt;code&gt;AfterDeleteRows&lt;/code&gt; as shown in the following screenshot. These events are fired when you delete columns and rows respectively.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/61540698/61767759.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;handling-events-after-deleting-columns-and-rows-in-griddesktop&#34;&gt;Handling Events after Deleting Columns and Rows in GridDesktop&lt;/h2&gt;
&lt;p&gt;The following sample code explains how to make use of &lt;code&gt;AfterDeleteColumns&lt;/code&gt; and &lt;code&gt;AfterDeleteRows&lt;/code&gt; events. Whenever you delete some columns or rows, the given function will be called and show a message box that displays the index of the deleted column or row.&lt;/p&gt;
&lt;h2 id=&#34;sample-code&#34;&gt;Sample Code&lt;/h2&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_e0a83989ae&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_e0a83989ae&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;gridDesktop1_AfterDeleteColumnsAndRows&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;object&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;sender&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GridDesktop&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;WorksheetEventArgs&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SheetEvents&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GridDesktop&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;WorksheetEvents&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ColumnDeleted&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;MessageBox&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Show&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Deleted Column Index: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Index&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SheetEvents&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GridDesktop&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;WorksheetEvents&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;RowDeleted&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;MessageBox&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Show&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Deleted Row Index: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Index&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
  </channel>
</rss>
