<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – Release Notes - 2017</title>
    <link>https://roywangt.github.io/cpp/releasenotes/2017/</link>
    <description>Recent content in Release Notes - 2017 on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://roywangt.github.io/cpp/releasenotes/2017/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Cpp: Aspose.Cells for CPP 17.4.0 Release Notes</title>
      <link>https://roywangt.github.io/cpp/releasenotes/2017/aspose.cells&#43;for&#43;cpp&#43;17.4.0&#43;release&#43;notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cpp/releasenotes/2017/aspose.cells&#43;for&#43;cpp&#43;17.4.0&#43;release&#43;notes/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-c--asposecells-for-cpp-1740-release-notes&#34;&gt;Aspose.Cells for C++ : Aspose.Cells for CPP 17.4.0 Release Notes&lt;/h1&gt;
&lt;p&gt;This page contains release notes for &lt;a href=&#34;https://downloads.aspose.com/cells/cpp/new-releases/aspose.cells-for-c---17.4.0/&#34;&gt;Aspose.Cells for CPP 17.4.0&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Key&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Summary&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Category&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CELLSCPP-62&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Support 64-bit versions of Windows&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;New Feature&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;h3 id=&#34;public-api-and-backwards-incompatible-changes&#34;&gt;Public API and Backwards Incompatible Changes&lt;/h3&gt;
&lt;p&gt;The following is a list of any changes made to the public API such as added, renamed, removed or deprecated members as well as any non-backward compatible change made to Aspose.Cells for C++. If you have concerns about any change listed, please raise it on the Aspose.Cells support forum.&lt;/p&gt;
&lt;p&gt;There are no public API changes in Aspose.Cells for C++ 17.4.0.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Cpp: Aspose.Cells for CPP 17.3.0 Release Notes</title>
      <link>https://roywangt.github.io/cpp/releasenotes/2017/aspose.cells&#43;for&#43;cpp&#43;17.3.0&#43;release&#43;notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cpp/releasenotes/2017/aspose.cells&#43;for&#43;cpp&#43;17.3.0&#43;release&#43;notes/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-c--asposecells-for-cpp-1730-release-notes&#34;&gt;Aspose.Cells for C++ : Aspose.Cells for CPP 17.3.0 Release Notes&lt;/h1&gt;
&lt;p&gt;This page contains release notes for &lt;a href=&#34;https://downloads.aspose.com/cells/cpp/new-releases/aspose.cells-for-c---17.3.0/&#34;&gt;Aspose.Cells for CPP 17.3.0&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Key&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Summary&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Category&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CELLSCPP-51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Improved performance of writing XLSX file&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Improvement&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;h3 id=&#34;public-api-and-backwards-incompatible-changes&#34;&gt;Public API and Backwards Incompatible Changes&lt;/h3&gt;
&lt;p&gt;The following is a list of any changes made to the public API such as added, renamed, removed or deprecated members as well as any non-backward compatible change made to Aspose.Cells for C++. If you have concerns about any change listed, please raise it on the Aspose.Cells support forum.&lt;/p&gt;
&lt;p&gt;There are no public API changes in Aspose.Cells for C++ 17.3.0.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Cpp: Aspose.Cells for CPP 17.02.0 Release Notes</title>
      <link>https://roywangt.github.io/cpp/releasenotes/2017/aspose.cells&#43;for&#43;cpp&#43;17.02.0&#43;release&#43;notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cpp/releasenotes/2017/aspose.cells&#43;for&#43;cpp&#43;17.02.0&#43;release&#43;notes/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-c--asposecells-for-cpp-17020-release-notes&#34;&gt;Aspose.Cells for C++ : Aspose.Cells for CPP 17.02.0 Release Notes&lt;/h1&gt;
&lt;p&gt;This page contains release notes for &lt;a href=&#34;https://downloads.aspose.com/cells/cpp/new-releases/aspose.cells-for-c---17.02.0/&#34;&gt;Aspose.Cells for CPP 17.02.0&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Key&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Summary&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Category&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CELLSCPP-41&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Calculate formulas in Excel spreadsheets&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;New Feature &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CELLSCPP-42&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Improved performance in reading XLSX files &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Improvement&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;h3 id=&#34;public-api-and-backwards-incompatible-changes&#34;&gt;Public API and Backwards Incompatible Changes&lt;/h3&gt;
&lt;p&gt;The following is a list of any changes made to the public API such as added, renamed, removed or deprecated members as well as any non-backward compatible change made to Aspose.Cells for C++. If you have concerns about any change listed, please raise it on the Aspose.Cells support forum.&lt;/p&gt;
&lt;h4 id=&#34;adds-iworkbookcalculateformula-method&#34;&gt;Adds IWorkbook::CalculateFormula() method&lt;/h4&gt;
&lt;p&gt;The recent version 17.02.0 of Aspose.Cells for CPP API has added the IWorkbook::CalculateFormula() method. It helps developers to calculate the result of formulas and store in the appropriate cell of a worksheet. Developers can also calculate the custom formulas.&lt;/p&gt;
&lt;p&gt;This code example demonstrates how to calculate the formulas in an Excel:&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_7bf05d1493&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_7bf05d1493&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*create a new workbook*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IWorkbook&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Factory&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CreateIWorkbook&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*get the first worksheet*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IWorksheetCollection&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;wsc&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetIWorksheets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IWorksheet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;wsc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*get cells*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ICells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cells&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetICells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*set value to cell(0,0) and cell(1,0)*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PutValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PutValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*set formula*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetFormula&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;=SUM(A1,A2)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*formula calculation*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CalculateFormula&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*check result*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;EXPECT_TRUE&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;B1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetIntValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*save this workbook to resultFile*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Save&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;resultPath&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;StringAppend&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;book5.xlsx&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)));&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h4 id=&#34;adds-iworkbookcalculateformulabool-ignoreerror-method&#34;&gt;Adds IWorkbook::CalculateFormula(bool ignoreError) method&lt;/h4&gt;
&lt;p&gt;Developers can calculate formulas in various ways. IWorkbook::CalculateFormula(bool ignoreError) method allows developers to calculate the result of formulas as well as hides the error in calculating formulas. An error can occur due to the unsupported function, external links, etc.&lt;/p&gt;
&lt;p&gt;This code example demonstrates how to calculate the formulas and ignore errors in an Excel:&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_3dbb9c26db&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_3dbb9c26db&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*create a new workbook*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IWorkbook&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Factory&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CreateIWorkbook&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*get the first worksheet*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IWorksheetCollection&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;wsc&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetIWorksheets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IWorksheet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;wsc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*get cells*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ICells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cells&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetICells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*set value to cell(0,0) and cell(1,0)*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PutValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PutValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*set formula*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetFormula&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;=SUM(A1,A2)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*formula calculation*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CalculateFormula&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*check result*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;EXPECT_TRUE&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;B1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetIntValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*save this workbook to resultFile*/&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Save&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;resultPath&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;StringAppend&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;book5.xlsx&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)));&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h4 id=&#34;adds-iworkbookcalculateformulaintrusive_ptrasposecellsicalculationoptions-options-method&#34;&gt;Adds IWorkbook::CalculateFormula(intrusive_ptr&lt;a href=&#34;Aspose::Cells::ICalculationOptions&#34;&gt;Aspose::Cells::ICalculationOptions&lt;/a&gt; options) method&lt;/h4&gt;
&lt;p&gt;It calculates formulas in the workbook.&lt;/p&gt;
&lt;h4 id=&#34;adds-iworkbookcalculateformulabool-ignoreerrorintrusive_ptrasposecellsicustomfunction-customfunction-method&#34;&gt;Adds IWorkbook::CalculateFormula(bool ignoreError,intrusive_ptr&lt;a href=&#34;Aspose::Cells::ICustomFunction&#34;&gt;Aspose::Cells::ICustomFunction&lt;/a&gt; customFunction) method&lt;/h4&gt;
&lt;p&gt;Aspose.Cells for CPP API offers ICustomFunction interface. Developers can call the IWorkbook.CalculateFormula(false, ICustomFunction) method to invoke the implementation of ICustomFunction.CalculateCustomFunction() method. ICustomFunction.CalculateCustomFunction() method allows to manipulate the return values of custom functions. In the code example below, implementation of ICustomFunction interface evaluates and returns the values of two custom functions, i.e. MySampleFunc() and YourSampleFunc(). These custom functions are inside the cells A1 and A2 respectively. It prints the values of A1 and A2 on a console, which are actually the values returned by ICustomFunction.CalculateCustomFunction().&lt;/p&gt;
&lt;p&gt;This code example demonstrates how to calculate the formulas, ignore errors and manipulate the return values of custom functions in an Excel:&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_1d131fb3a7&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_1d131fb3a7&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Implement ICustomFunction interface
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CustomFunction&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ICustomFunction&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Evalaute and return the values of your custom functions
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Object&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 
        &lt;span style=&#34;color:#000&#34;&gt;CalculateCustomFunction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;functionName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; 
        &lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Collections&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ArrayList&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;paramsList&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; 
        &lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Collections&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ArrayList&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contextObjects&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;functionName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Equals&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;MySampleFunc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;MY sample function was called successfully.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
 
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;functionName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Equals&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;YourSampleFunc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;YOUR sample function was called successfully.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
 
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
 
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Call this function to run the code
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Run&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Create workbook
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IWorkbook&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Factory&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CreateIWorkbook&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
 
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Access first worksheet in the workbook
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IWorksheet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetIWorksheets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
 
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Adding custom formulas to Cell A1 and A2
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetICells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;A1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetFormula&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;=MySampleFunc()&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetICells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;A2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetFormula&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;=YourSampleFunc()&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
 
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Calcualting Formulas
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CustomFunction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;custFunc&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CustomFunction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CalculateFormula&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;custFunc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
 
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Print the value of cell A1 and A2 after the calculation of custom function implemented by us.
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;valA1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetICells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;A1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetStringValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;valA2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetICells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;A2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetStringValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
 
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Print the values on console
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;printf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Value of A1: %s\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;valA1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;charValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;printf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Value of A2: %s\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;valA2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;charValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h4 id=&#34;adds-iworksheetcalculateformulaintrusive_ptrasposecellssystemstring-formula-method&#34;&gt;Adds IWorksheet::CalculateFormula(intrusive_ptr&lt;a href=&#34;Aspose::Cells::System::String&#34;&gt;Aspose::Cells::System::String&lt;/a&gt; formula) method&lt;/h4&gt;
&lt;p&gt;IWorksheet::CalculateFormula(intrusive_ptr&lt;a href=&#34;Aspose::Cells::System::String&#34;&gt;Aspose::Cells::System::String&lt;/a&gt; formula) method allows developers to calculate the formula results directly without adding them into a worksheet. The values of cells used in the formula already exist in a worksheet and developers only need to find the result of those values based on some Microsoft Excel formula without adding the formula in a worksheet.&lt;/p&gt;
&lt;p&gt;This code example demonstrates how to calculate the formulas directly without adding them into a worksheet in an Excel:&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_df03b0a568&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_df03b0a568&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Create workbook
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IWorkbook&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Factory&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CreateIWorkbook&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Access first worksheet in the workbook
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IWorksheet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;wb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetIWorksheets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Put 20 in cell A1
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ICell&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cellA1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetICells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;A1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;cellA1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PutValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Put 30 in cell A2
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ICell&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cellA2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetICells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetObjectByIndex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;A2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;cellA2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PutValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Calculate the Sum of A1 and A2
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;intrusive_ptr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Object&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;results&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ws&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CalculateFormula&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;=Sum(A1:A2)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
 
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Print the output
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;printf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Value of A1: %s\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cellA1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetStringValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;charValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;printf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Value of A2: %s\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cellA2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetStringValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;charValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;printf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Result of Sum(A1:A2): %s\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;results&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ToString&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;charValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h4 id=&#34;adds-iworksheetcalculateformulaintrusive_ptrasposecellssystemstring-formula-intrusive_ptrasposecellsicalculationoptions-opts-method&#34;&gt;Adds IWorksheet::CalculateFormula(intrusive_ptr&lt;a href=&#34;Aspose::Cells::System::String&#34;&gt;Aspose::Cells::System::String&lt;/a&gt; formula, intrusive_ptr&lt;a href=&#34;Aspose::Cells::ICalculationOptions&#34;&gt;Aspose::Cells::ICalculationOptions&lt;/a&gt; opts) method&lt;/h4&gt;
&lt;p&gt;It calculates a formula in a more flexible way.&lt;/p&gt;
&lt;h4 id=&#34;adds-iworksheetcalculateformulabool-recursive-bool-ignoreerror-intrusive_ptrasposecellsicustomfunction-customfunction-method&#34;&gt;Adds IWorksheet::CalculateFormula(bool recursive, bool ignoreError, intrusive_ptr&lt;a href=&#34;Aspose::Cells::ICustomFunction&#34;&gt;Aspose::Cells::ICustomFunction&lt;/a&gt; customFunction) method&lt;/h4&gt;
&lt;p&gt;It calculates all formulas in the worksheet.&lt;/p&gt;
&lt;h4 id=&#34;adds-iworksheetcalculateformulaintrusive_ptrasposecellsicalculationoptions-options-bool-recursive-method&#34;&gt;Adds IWorksheet::CalculateFormula(intrusive_ptr&lt;a href=&#34;Aspose::Cells::ICalculationOptions&#34;&gt;Aspose::Cells::ICalculationOptions&lt;/a&gt; options, bool recursive) method&lt;/h4&gt;
&lt;p&gt;It calculates all formulas in the worksheet.&lt;/p&gt;
&lt;h4 id=&#34;adds-icellcalculateintrusive_ptrasposecellsicalculationoptions-options-method&#34;&gt;Adds ICell::Calculate(intrusive_ptr&lt;a href=&#34;Aspose::Cells::ICalculationOptions&#34;&gt;Aspose::Cells::ICalculationOptions&lt;/a&gt; options) method&lt;/h4&gt;
&lt;p&gt;It calculates the formula of cell in the worksheet.&lt;/p&gt;
&lt;h4 id=&#34;adds-icellcalculatebool-ignoreerror--intrusive_ptrasposecellsicustomfunction-customfunction-method&#34;&gt;Adds ICell::Calculate(bool ignoreError , intrusive_ptr&lt;a href=&#34;Aspose::Cells::ICustomFunction&#34;&gt;Aspose::Cells::ICustomFunction&lt;/a&gt; customFunction) method&lt;/h4&gt;
&lt;p&gt;It calculates the formula of cell in the worksheet.&lt;/p&gt;
&lt;h3 id=&#34;usage-examples&#34;&gt;Usage Examples&lt;/h3&gt;
&lt;p&gt;Please check the list of help topics added in the Aspose.Cells Wiki docs:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/cpp/developerguide/formulas/ways+to+calculate+formulas#waystocalculateformulas-addingformulas&amp;amp;calculatingresults&#34;&gt;Adding Formulas and Calculating Results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/cpp/developerguide/formulas/ways+to+calculate+formulas#waystocalculateformulas-directcalculationofformula&#34;&gt;Direct Calculation of Formula&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/cpp/developerguide/formulas/ways+to+calculate+formulas#waystocalculateformulas-calculatingformulasonceonly&#34;&gt;Calculating Formulas Once Only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/cpp/developerguide/formulas/using+icustomfunction+feature#usingicustomfunctionfeature-usingicustomfunctionfeature&#34;&gt;Using ICustomFunction Feature&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Cpp: Aspose.Cells for CPP 17.1.0 Release Notes</title>
      <link>https://roywangt.github.io/cpp/releasenotes/2017/aspose.cells&#43;for&#43;cpp&#43;17.1.0&#43;release&#43;notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cpp/releasenotes/2017/aspose.cells&#43;for&#43;cpp&#43;17.1.0&#43;release&#43;notes/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-c--asposecells-for-cpp-1710-release-notes&#34;&gt;Aspose.Cells for C++ : Aspose.Cells for CPP 17.1.0 Release Notes&lt;/h1&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Key&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Summary&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Category&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CELLSCPP-35&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Read / Write XLSM file format &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;New Feature &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CELLSCPP-36&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Read / Write CSV file format &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;New Feature &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CELLSCPP-37&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Read / Write XLSB file format &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;New Feature &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CELLSCPP-38&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Create and manipulate Named Ranges&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;New Feature &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CELLSCPP-39&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Read / Write Tab Delimited file format &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;New Feature &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;h3 id=&#34;public-api-and-backwards-incompatible-changes&#34;&gt;Public API and Backwards Incompatible Changes&lt;/h3&gt;
&lt;p&gt;The following is a list of any changes made to the public API such as added, renamed, removed or deprecated members as well as any non-backward compatible change made to Aspose.Cells for C++. If you have concerns about any change listed, please raise it on the Aspose.Cells support forum.&lt;/p&gt;
&lt;h4 id=&#34;removes-ipagesetupgetdraftsetdraft-method&#34;&gt;Removes IPageSetup::GetDraft()/SetDraft() method&lt;/h4&gt;
&lt;p&gt;Use IPageSetup::GetPrintDraft()/SetPrintDraft() method instead.&lt;/p&gt;
&lt;h4 id=&#34;removes-icellgetconditionalistyle-method&#34;&gt;Removes ICell::GetConditionalIStyle() method&lt;/h4&gt;
&lt;p&gt;Use ICell::GetIConditionalFormattingResult() instead.&lt;/p&gt;
&lt;h4 id=&#34;removes-icellsmaxdatarowincolumn-method&#34;&gt;Removes ICells::MaxDataRowInColumn() method&lt;/h4&gt;
&lt;p&gt;Use ICells::GetLastDataRow() instead.&lt;/p&gt;
&lt;h4 id=&#34;deletes-ipanecollectiongetacitvepanetypesetacitvepanetype-method&#34;&gt;Deletes IPaneCollection::GetAcitvePaneType()/SetAcitvePaneType() method&lt;/h4&gt;
&lt;p&gt;Unnecessary,deleted.&lt;/p&gt;
&lt;h4 id=&#34;deletes-irangetostring-method&#34;&gt;Deletes IRange::ToString() method&lt;/h4&gt;
&lt;p&gt;Unnecessary,deleted.&lt;/p&gt;
&lt;h4 id=&#34;deletes-irowequals-method&#34;&gt;Deletes IRow::Equals() method&lt;/h4&gt;
&lt;p&gt;Unnecessary,deleted.&lt;/p&gt;
&lt;h4 id=&#34;deletes-iworkbooksetisettings-method&#34;&gt;Deletes IWorkbook::SetISettings() method&lt;/h4&gt;
&lt;p&gt;Unnecessary,deleted.&lt;/p&gt;
&lt;h4 id=&#34;deletes-icelltostring-method&#34;&gt;Deletes ICell::ToString() method&lt;/h4&gt;
&lt;p&gt;Unnecessary,deleted.&lt;/p&gt;
&lt;h4 id=&#34;deletes-icellequalsobjectptr-method&#34;&gt;Deletes ICell::Equals(ObjectPtr) method&lt;/h4&gt;
&lt;p&gt;Unnecessary,deleted.&lt;/p&gt;
&lt;h4 id=&#34;deletes-icellgethashcode-method&#34;&gt;Deletes ICell::GetHashCode() method&lt;/h4&gt;
&lt;p&gt;Unnecessary,deleted.&lt;/p&gt;
&lt;h4 id=&#34;deletes-iworksheettostring-method&#34;&gt;Deletes IWorksheet::ToString() method&lt;/h4&gt;
&lt;p&gt;Unnecessary,deleted.&lt;/p&gt;
&lt;h4 id=&#34;adds-ibuiltindocumentpropertycollectiongetscalecropsetscalecrop-method&#34;&gt;Adds IBuiltInDocumentPropertyCollection::GetScaleCrop()/SetScaleCrop() method&lt;/h4&gt;
&lt;p&gt;Indicates the display mode of the document thumbnail.&lt;/p&gt;
&lt;h4 id=&#34;adds-ibuiltindocumentpropertycollectiongetlinksuptodatesetlinksuptodate-method&#34;&gt;Adds IBuiltInDocumentPropertyCollection::GetLinksUpToDate()/SetLinksUpToDate() method&lt;/h4&gt;
&lt;p&gt;Indicates whether hyperlinks in a document are up-to-date.&lt;/p&gt;
&lt;h4 id=&#34;adds-iexternallinkisvisible-method&#34;&gt;Adds IExternalLink::IsVisible() method&lt;/h4&gt;
&lt;p&gt;Indicates whether this external link is visible in MS Excel.&lt;/p&gt;
&lt;h4 id=&#34;adds-ilistcolumngetformulasetformula-method&#34;&gt;Adds IListColumn::GetFormula()/SetFormula() method&lt;/h4&gt;
&lt;p&gt;Gets and sets the formula of the list column.&lt;/p&gt;
&lt;h4 id=&#34;addsiworkbookgetabsolutepathsetabsolutepath-method&#34;&gt;Adds IWorkbook::GetAbsolutePath()/SetAbsolutePath() method&lt;/h4&gt;
&lt;p&gt;Gets and sets the absolute path of the file,only used for external links.&lt;/p&gt;
&lt;h4 id=&#34;adds-iworkbooksettingsgetcheckcompatibilitysetcheckcompatibility-method&#34;&gt;Adds IWorkbookSettings::GetCheckCompatibility()/SetCheckCompatibility() method&lt;/h4&gt;
&lt;p&gt;Indicates whether check compatiliblity when saving workbook, the default value is true.&lt;/p&gt;
&lt;h4 id=&#34;adds-iworksheetcollectioncreateirange-method&#34;&gt;Adds IWorksheetCollection::CreateIRange() method&lt;/h4&gt;
&lt;p&gt;Creates a IRange,object from an address of the range.&lt;/p&gt;
&lt;h4 id=&#34;adds-iworkbooksettingsclearpivottables-method&#34;&gt;Adds IWorkbookSettings::ClearPivottables() method&lt;/h4&gt;
&lt;p&gt;Clears pivot tables from the spreadsheet.&lt;/p&gt;
&lt;h4 id=&#34;adds-iloadoptionsgetcultureinfosetcultureinfo-method&#34;&gt;Adds ILoadOptions::GetCultureInfo/SetCultureInfo() method&lt;/h4&gt;
&lt;p&gt;Gets the system culture info at the time the file was loaded.&lt;/p&gt;
&lt;h4 id=&#34;adds-iloadoptionsgetilightcellsdatahandlersetilightcellsdatahandler-method&#34;&gt;Adds ILoadOptions::GetILightCellsDataHandler()/SetILightCellsDataHandler() method&lt;/h4&gt;
&lt;p&gt;Denotes the data handler for processing cells data when reading template file.&lt;/p&gt;
&lt;h4 id=&#34;adds-iworksheetgetiprotectedrangecollection-method&#34;&gt;Adds IWorksheet::GetIProtectedRangeCollection() method&lt;/h4&gt;
&lt;p&gt;Gets the allow edit range collection in the worksheet.&lt;/p&gt;
&lt;h4 id=&#34;adds-iworksheetdispose-method&#34;&gt;Adds IWorksheet::Dispose() method&lt;/h4&gt;
&lt;p&gt;Disposes worksheet.&lt;/p&gt;
&lt;h4 id=&#34;adds-icellsimporttwodimensionarray-method&#34;&gt;Adds ICells::ImportTwoDimensionArray() method&lt;/h4&gt;
&lt;p&gt;Imports a two-dimension array of data into a worksheet&lt;/p&gt;
&lt;h4 id=&#34;adds-icellsimportcsv-method&#34;&gt;Adds ICells::ImportCSV() method&lt;/h4&gt;
&lt;p&gt;Imports a CSV file to the cells.&lt;/p&gt;
&lt;h4 id=&#34;adds-icellslinktoxmlmap-method&#34;&gt;Adds ICells::LinkToXmlMap() method&lt;/h4&gt;
&lt;p&gt;Links to a xml map.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
