<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Worksheets on Aspose.Cells Product Family</title>
    <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/</link>
    <description>Recent content in Worksheets on Aspose.Cells Product Family</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://192.168.1.240:1313/cellsnet/developerguide/worksheets/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Copying and Moving Worksheets</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/copying&#43;and&#43;moving&#43;worksheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/copying&#43;and&#43;moving&#43;worksheets/</guid>
      <description>Sometimes, you do need a number of worksheets with common formatting and data. For example, if you work with quarterly budgets, you might want to create a workbook with sheets that contain the same column headings, row headings, and formulas. There is a way to do this: by creating one sheet and then copying it.
Aspose.Cells supports copying and moving worksheets within or between workbooks. Worksheet, complete with data, formatting, tables, matrices, charts, images and other objects, are copied with the highest degree of precision.</description>
    </item>
    
    <item>
      <title>Manage Worksheets</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/manage&#43;worksheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/manage&#43;worksheets/</guid>
      <description>Developers can easily create and manage worksheets in Microsoft Excel files programmatically using Aspose.Cells&amp;rsquo; flexible API. This topic describes approaches for adding and removing worksheets in Microsoft Excel files.
   Contents Summary
1 Adding Worksheets to a New Excel File
2 Adding Worksheets to a Designer Spreadsheet
3 Accessing Worksheets using Sheet Name
4 Removing Worksheets using Sheet Name
5 Removing Worksheets using Sheet Index
 |     Aspose.</description>
    </item>
    
    <item>
      <title>Managing Page Breaks</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/managing&#43;page&#43;breaks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/managing&#43;page&#43;breaks/</guid>
      <description>According to the definition, a page break is a place in a flow of text where one page ends and the next begins. Microsoft Excel lets users add page breaks into any selected cell of a worksheet.
The location of the cell where the page break is added, the page is ended and the rest of the data after the page break is printed on the next page while printing. In simple words, page breaks divide your worksheet into multiple pages according to your specifications.</description>
    </item>
    
    <item>
      <title>Worksheet Views</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/worksheet&#43;views/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/worksheet&#43;views/</guid>
      <description>Contents Summary
1 Page Break Preview 1.1 Controlling View Modes 1.1.1 Enabling Normal View
1.1.2 Enabling Page Break Preview
2 Zoom Factor 2.1 Using Microsoft Excel
2.2 Aspose.Cells &amp;amp; Zoom Factor
3 Freeze Panes 3.1 Using Microsoft Excel
3.2 Aspose.Cells &amp;amp; Freeze Panes
4 Split Panes 4.1 Applying and Removing Split Panes 4.1.1 Splitting Panes
4.1.2 Removing Panes
 |     Page Break Preview     All worksheets can be viewed in two modes:</description>
    </item>
    
    <item>
      <title>Update Days Preserving History of Revision Logs in Shared Workbook</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/update&#43;days&#43;preserving&#43;history&#43;of&#43;revision&#43;logs&#43;in&#43;shared&#43;workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/update&#43;days&#43;preserving&#43;history&#43;of&#43;revision&#43;logs&#43;in&#43;shared&#43;workbook/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Update Days Preserving History of Revision Logs in Shared Workbook
3 Sample Code
 |     Possible Usage Scenarios     When you share a workbook, you get an option saying Keep change history for N days as shown in the following screenshot. You can update the number of days for preserving history using Aspose.Cells with WorksheetCollection.</description>
    </item>
    
    <item>
      <title>Find if the Worksheet is Dialog Sheet</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/find&#43;if&#43;the&#43;worksheet&#43;is&#43;dialog&#43;sheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/find&#43;if&#43;the&#43;worksheet&#43;is&#43;dialog&#43;sheet/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Find if the Worksheet is Dialog Sheet
3 Sample Code
4 Console Output
 |     Possible Usage Scenarios     Dialog Sheet is an old format of sheet that contains a dialog box. Such sheet could be inserted by an older version of Microsoft Excel e.g. 2003 as shown in this screenshot. It can also be inserted with VBA in newer versions e.</description>
    </item>
    
    <item>
      <title>Get Hyperlinks in Range</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/get&#43;hyperlinks&#43;in&#43;range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/get&#43;hyperlinks&#43;in&#43;range/</guid>
      <description>Contents Summary
1 Get Hyperlinks in Range
 |     Get Hyperlinks in Range     The Range class provides a Hyperlinks property which returns all the hyperlinks in the selected range. You may also delete the Hyperlink by calling the Hyperlink.Delete method.
Attachments: outputSheetId.xlsx (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) sampleSheetId.xlsx (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) Get-SheetId-field-of-Excel-worksheet.png (image/png)</description>
    </item>
    
    <item>
      <title>Count number of cells in the Worksheet</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/count&#43;number&#43;of&#43;cells&#43;in&#43;the&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/count&#43;number&#43;of&#43;cells&#43;in&#43;the&#43;worksheet/</guid>
      <description>Contents Summary
1 Count number of cells in the Worksheet
 |     Count number of cells in the Worksheet     You may count the number of cells in the worksheet by using the Cells.Count or Cells.CountLarge properties as shown in the code example given below.
Attachments: Get-SheetId-field-of-Excel-worksheet.png (image/png) outputSheetId.xlsx (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) sampleSheetId.xlsx (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet)</description>
    </item>
    
    <item>
      <title>Get Range with External Links</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/get&#43;range&#43;with&#43;external&#43;links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/get&#43;range&#43;with&#43;external&#43;links/</guid>
      <description>Contents Summary
1 Get Range with External Links
2 Sample Code
 |     Get Range with External Links     A lot of times Excel files access data from other Excel files using external links. Aspose.Cells provides the option to retrieve these external links by using the Name.GetReferredAreas method. The Name.GetReferredAreas method returns an array of type ReferredArea. The ReferredArea class provides an ExternalFileName property which returns the name of the external file.</description>
    </item>
    
    <item>
      <title>Cut and Paste Cells</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/cut&#43;and&#43;paste&#43;cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/cut&#43;and&#43;paste&#43;cells/</guid>
      <description>Contents Summary
1 Cut and Paste Cells
 |     Cut and Paste Cells     Aspose.Cells provides you with the ability to cut and paste cells within a worksheet by using the InsertCutCells method of the Cells collection. The InsertCutCells accepts the following parameters.
 Range: The range of cells to be cut. Row Index: The index of the row to insert cells.</description>
    </item>
    
    <item>
      <title>Threaded Comments</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/threaded&#43;comments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/threaded&#43;comments/</guid>
      <description>Contents Summary
1 Threaded Comments 1.1 Add Threaded Comments 1.1.1 Add Threaded comment with Excel
1.1.2 Add Threaded Comment using Aspose.Cells 1.1.2.1 Sample Code
1.2 Read Threaded Comments 1.2.1 Read Threaded comments with Excel
1.2.2 Read Threaded comments using Aspose.Cells 1.2.2.1 Sample Code
1.2.2.2 Console Output
1.2.3 Read Created Time of threaded comments 1.2.3.1 Sample Code
1.2.3.2 Console Output
1.3 Edit Threaded Comments 1.3.1 Edit Threaded comment with Excel</description>
    </item>
    
    <item>
      <title>Working with Background in ODS Files</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/working&#43;with&#43;background&#43;in&#43;ods&#43;files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/working&#43;with&#43;background&#43;in&#43;ods&#43;files/</guid>
      <description>Contents Summary
1 Background in ODS Files 1.1 Read Background Information from OSD file 1.1.1 Sample Code
1.1.2 Console Output
1.2 Add Colored Background to ODS file 1.2.1 Sample Code
1.3 Add Graphic Background to ODS file 1.3.1 Sample Code
 |     Background in ODS Files     Background can be added to sheets in ODS files. The background can either be a colored background or graphic background.</description>
    </item>
    
    <item>
      <title>Detect Hyperlink Type</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/detect&#43;hyperlink&#43;type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/detect&#43;hyperlink&#43;type/</guid>
      <description>Contents Summary
1 Detect Hyperlink Type
 |     Detect Hyperlink Type     An Excel file can have different types of hyperlinks like external, cell reference, file path, etc. Aspose.Cells supports the feature to detect the type of hyperlink. The types of hyperlinks are represented by the TargetModeType Enumeration. The TargetModeType Enumeration has the following members.
 External: External link FilePath: Local and full path to files\folders.</description>
    </item>
    
    <item>
      <title>Print multiple copies of a worksheet</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/print&#43;multiple&#43;copies&#43;of&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/print&#43;multiple&#43;copies&#43;of&#43;a&#43;worksheet/</guid>
      <description>Contents Summary
1 Print multiple copies of a worksheet
 ||      Print multiple copies of a worksheet      Aspose.Cells provides the ability to print multiple copies of a worksheet by using the SheetRender.ToPrinter(PrintSettings PrinterSettings) method. The following code snippet demonstrates the use of SheetRender.ToPrinter(PrintSettings PrinterSettings) method to print multiple copies of a worksheet. The following code snippet uses this sample excel file.</description>
    </item>
    
    <item>
      <title>Get Cell Validation in ODS Files</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/get&#43;cell&#43;validation&#43;in&#43;ods&#43;files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/get&#43;cell&#43;validation&#43;in&#43;ods&#43;files/</guid>
      <description>Contents Summary
1 Get Cell Validation in ODS Files 1.1 Sample Code
 |     Get Cell Validation in ODS Files     With Aspose.Cells, you can get the validation applied to a cell in ODS files. For this, the API provides the GetValidation method of the Cell class.
The following code sample demonstrates the use of the GetValidation method by loading the source ODS file and reading the validation of the cell A9.</description>
    </item>
    
    <item>
      <title>Get worksheet unique id</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/get&#43;worksheet&#43;unique&#43;id/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/get&#43;worksheet&#43;unique&#43;id/</guid>
      <description>Contents Summary
1 Get worksheet unique id
 ||      Get worksheet unique id      Aspose.Cells provides the ability to get the unique id of a worksheet by using the Worksheet.UniqueId property. The following code snippet demonstrates the use of the Worksheet.UniqueId property to print the unique id of a worksheet. The following code snippet uses this sample excel file.</description>
    </item>
    
    <item>
      <title>Utilize Sheet.SheetId property of OpenXml using Aspose.Cells</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/utilize&#43;sheet.sheetid&#43;property&#43;of&#43;openxml&#43;using&#43;aspose.cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/worksheets/utilize&#43;sheet.sheetid&#43;property&#43;of&#43;openxml&#43;using&#43;aspose.cells/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Utilize Sheet.SheetId property of OpenXml using Aspose.Cells
3 Sample Code
4 Console Output
 |     Possible Usage Scenarios     Sheet.SheetId property is found inside the DocumentFormat.OpenXml.Spreadsheet namespace and is part of OpenXml. You can see this property and its value inside workbook.xml as shown in the following screenshot. Aspose.Cells provides the equivalent property as Worksheet.</description>
    </item>
    
  </channel>
</rss>