<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>General on Aspose.Cells Product Family</title>
    <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/</link>
    <description>Recent content in General on Aspose.Cells Product Family</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Your Own Icons Instead of the GridWeb Default Icons</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/using&#43;your&#43;own&#43;icons&#43;instead&#43;of&#43;the&#43;gridweb&#43;default&#43;icons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/using&#43;your&#43;own&#43;icons&#43;instead&#43;of&#43;the&#43;gridweb&#43;default&#43;icons/</guid>
      <description>Sometimes you might want to use your own icons (images) instead of Aspose.Cells.GridWeb control&amp;rsquo;s default icons. This article explains how to do this.
The controlâ€™s default icons are located in the URL path &amp;ldquo;/acw_client/&amp;quot;. The file path can be: &amp;ldquo;C:\Program Files\Aspose\Aspose.Cells for .NET\acw_client&amp;rdquo; by default. You find files like submit.gif, save.gif etc. in that folder. If you want to replace these images with your own, add a config section to the web.</description>
    </item>
    
    <item>
      <title>Using a Common Button to Submit Grid Data</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/using&#43;a&#43;common&#43;button&#43;to&#43;submit&#43;grid&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/using&#43;a&#43;common&#43;button&#43;to&#43;submit&#43;grid&#43;data/</guid>
      <description>Aspose.Cells.GridWeb provides some built-in command buttons like Submit and Save. Use these buttons to perform related tasks.
This article shows how to submit data to a server not just by clicking GridWeb&amp;rsquo;s built-in Save command button, but by clicking a common ASP.NET Button (Web Control). The purpose of this article is to show the flexibility of Aspose.Cells.GridWeb. Moreover, this article also uses special functions exposed by Aspose.Cells.GridWeb to be used in the client side script.</description>
    </item>
    
    <item>
      <title>Using Show Formulas Feature of GridWeb</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/using&#43;show&#43;formulas&#43;feature&#43;of&#43;gridweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/using&#43;show&#43;formulas&#43;feature&#43;of&#43;gridweb/</guid>
      <description>Sometimes, you need to find an easy way for the cells containing formulas. You need to have an approach to quickly read through all formulas to check for errors. This can help you to trace the data being used in a formula.
Aspose.Cells.GridWeb provides the feature what is called Show Formulas in Microsoft Excel.
Using Show Formulas Feature
All you need to use a shortcut &amp;ldquo;CTRL + ~&amp;rdquo; to display all the formulas in the worksheet.</description>
    </item>
    
    <item>
      <title>Loading GridWeb Data in Async Mode</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/loading&#43;gridweb&#43;data&#43;in&#43;async&#43;mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/loading&#43;gridweb&#43;data&#43;in&#43;async&#43;mode/</guid>
      <description>When creating a Workbook with large data sets, or reading a big Microsoft Excel file, it will surely take more time and resources to do that. The total memory the process will take is always a concern. There are measures which can be adopted to cope with the challenge. Aspose.Cells.GridWeb provides some relevant options and APIs to lower, reduce and optimize memory usage. Also, it can help the process work more efficiently and run faster.</description>
    </item>
    
    <item>
      <title>Specify the path where GridWeb stores temporary session files</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/specify&#43;the&#43;path&#43;where&#43;gridweb&#43;stores&#43;temporary&#43;session&#43;files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/specify&#43;the&#43;path&#43;where&#43;gridweb&#43;stores&#43;temporary&#43;session&#43;files/</guid>
      <description>When GridWeb session mode is ViewState, it stores its temporary session files inside the Application Base Directory. Sometimes, it is not OK to store temporary session files there because Application Base Directory might not have write permissions on it. In such cases, GridWeb throws such an exception
[UnauthorizedAccessException: Access to
the path &amp;lsquo;D:\inetpub\wwwroot\AsposeExcelTest\gwb_tempGridWeb1&amp;rsquo; is denied.]
The solution to above problem is to give write access to Application Base Directory or change the GridWeb temporary session files path having write access using the GridWeb.</description>
    </item>
    
    <item>
      <title>Using client side functions to select range or get the selected range in GridWeb</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/using&#43;client&#43;side&#43;functions&#43;to&#43;select&#43;range&#43;or&#43;get&#43;the&#43;selected&#43;range&#43;in&#43;gridweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/using&#43;client&#43;side&#43;functions&#43;to&#43;select&#43;range&#43;or&#43;get&#43;the&#43;selected&#43;range&#43;in&#43;gridweb/</guid>
      <description>You can use the following client side functions to select a range or to get the selected range in a GridWeb using JavaScript.
 getSelectRange() setSelectRange() clearSelections()  getSelectRange() returns the last selected range. setSelectRange() selects the given range. clearSelections() clears all selection excluding current active cell.
Using client side functions to select a range or to get the selected range in a GridWeb using JavaScript
The following code explains the usage of these functions.</description>
    </item>
    
    <item>
      <title>Copy and Paste Rows in GridDesktop within the Control and between the Control and Excel</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/copy&#43;and&#43;paste&#43;rows&#43;in&#43;griddesktop&#43;within&#43;the&#43;control&#43;and&#43;between&#43;the&#43;control&#43;and&#43;excel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/copy&#43;and&#43;paste&#43;rows&#43;in&#43;griddesktop&#43;within&#43;the&#43;control&#43;and&#43;between&#43;the&#43;control&#43;and&#43;excel/</guid>
      <description>If you want to enable copy and paste rows in GridDesktop within the control or between control and excel, then please set the GridDesktop.ClipboardCopyPaste property to true. You can set this property in design time or in code. The default value of this property is false. Currently, it can only copy and paste cell values and it will not copy any other setting of the cell like format, border style and so on.</description>
    </item>
    
    <item>
      <title>Enter Cell Data of GridWeb Worksheet in Percentage Format</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/enter&#43;cell&#43;data&#43;of&#43;gridweb&#43;worksheet&#43;in&#43;percentage&#43;format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/enter&#43;cell&#43;data&#43;of&#43;gridweb&#43;worksheet&#43;in&#43;percentage&#43;format/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Enter Cell Data of GridWeb Worksheet in Percentage Format 2.1 Sample Code
 ||      \      Possible Usage Scenarios
GridWeb now supports users to enter cell data in percentage format like 3% and the data in the cell will automatically be formatted as 3.00%. However, you will have to set the cell style to Percentage Format which is either GridTableItemStyle.</description>
    </item>
    
    <item>
      <title>Calculate Custom Functions in GridWeb</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/calculate&#43;custom&#43;functions&#43;in&#43;gridweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgridcontrols/general/calculate&#43;custom&#43;functions&#43;in&#43;gridweb/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Calculate Custom Functions in GridWeb 2.1 Sample Code
 ||      \      Possible Usage Scenarios
Aspose.Cells.GridWeb supports the calculation of custom functions with the GridWeb.CustomCalculationEngine property. This property takes the instance of GridAbstractCalculationEngine interface. Please implement GridAbstractCalculationEngine interface and calculate your custom functions with your own logic.
Calculate Custom Functions in GridWeb</description>
    </item>
    
  </channel>
</rss>