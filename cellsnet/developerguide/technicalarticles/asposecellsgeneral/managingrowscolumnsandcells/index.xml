<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Managing Rows, Columns and Cells on Aspose.Cells Product Family</title>
    <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/</link>
    <description>Recent content in Managing Rows, Columns and Cells on Aspose.Cells Product Family</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Populate Data First by Row then by Column</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/populate&#43;data&#43;first&#43;by&#43;row&#43;then&#43;by&#43;column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/populate&#43;data&#43;first&#43;by&#43;row&#43;then&#43;by&#43;column/</guid>
      <description>Populating a spreadsheet with data first by row and then by column improves the overall performance.
Putting data in the sequence A1, B1, A2, B2 is faster than A1, A2, B1, B2. If there are many cells in a worksheet and you follow the second sequence, that is, you&amp;rsquo;re filling the data row by row, this tip can make the program much faster.
\</description>
    </item>
    
    <item>
      <title>Insert or Delete Rows in an Excel Worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/insert&#43;or&#43;delete&#43;rows&#43;in&#43;an&#43;excel&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/insert&#43;or&#43;delete&#43;rows&#43;in&#43;an&#43;excel&#43;worksheet/</guid>
      <description>When creating a new worksheet, or working with an existing worksheet, you might need to add extra rows or columns to accommodate data. At other times, you might need to delete rows or columns from specified positions in the worksheet.
Aspose.Cells offers two methods for inserting and deleting rows: Cells.InsertRows and Cells.DeleteRows. These methods are optimized for performance and do the job very quickly.
To insert or remove a number of rows, we recommend that you always use the Cells.</description>
    </item>
    
    <item>
      <title>Delete Blank Rows and Columns in a Worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/delete&#43;blank&#43;rows&#43;and&#43;columns&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/delete&#43;blank&#43;rows&#43;and&#43;columns&#43;in&#43;a&#43;worksheet/</guid>
      <description>It is possible to delete all blank rows and columns from a worksheet. This is useful when, for example, generating a PDF file from a Microsoft Excel file and want to convert only rows and columns that contain data.
Use the following Aspose.Cells methods to delete empty rows and columns:
 To delete blank rows, use the Cells.DeleteBlankRows() method. To delete blank columns, use the Cells.DeleteBlankColumns() method.     Contents Summary</description>
    </item>
    
    <item>
      <title>Implementing Non-Sequential Ranges</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/implementing&#43;non-sequential&#43;ranges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/implementing&#43;non-sequential&#43;ranges/</guid>
      <description>Normally, named ranges are rectangular with cells continuous and adjacent to each other. But sometimes, you may need to use a non-sequential cell range in which cells are not adjacent. Aspose.Cells supports creating a named range with non-adjacent cells.
The code sample below shows how to create a named non-sequential range with Aspose.Cells for .NET.
\</description>
    </item>
    
    <item>
      <title>Copy Range Style Only</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/copy&#43;range&#43;style&#43;only/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/copy&#43;range&#43;style&#43;only/</guid>
      <description>Copy Range Data Only and Copy Range Data with Style explained how to copy data from a range to another on its own or complete with formatting. It is also possible to copy only the formatting. This article shows how.
This example creates a workbook, populates it with data and copies a range&amp;rsquo;s style only.
 Create a range. Create a Style object with specified formatting attributes. Apply the style formatting to the range.</description>
    </item>
    
    <item>
      <title>Copy Range Data Only</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/copy&#43;range&#43;data&#43;only/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/copy&#43;range&#43;data&#43;only/</guid>
      <description>Sometimes, you need to copy data from one range of cells to another, copying the data only, not the formatting. Aspose.Cells offers this feature.
This article provides a sample code that uses Aspose.Cells to copy a range of data.
This example shows how to:
 Create a workbook. Add data to cells in the first worksheet. Create a Range. Create a Style object with specified formatting attributes. Apply the style formatting to the range.</description>
    </item>
    
    <item>
      <title>Copy Range Data with Style</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/copy&#43;range&#43;data&#43;with&#43;style/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/copy&#43;range&#43;data&#43;with&#43;style/</guid>
      <description>Copy Range Data Only explained how to copy the data from a range of cells to another range. Specifically, it process applied a new set of styles to the copied cells. Aspose.Cells can also copy a range complete with formatting. This article explains how.
Aspose.Cells provides a range of classes and methods for working with ranges, for example, CreateRange(), StyleFlag and ApplyStyle().
This example:
 Creates a workbook. Fills a number of cells in the first worksheet with data.</description>
    </item>
    
    <item>
      <title>Detect Merged Cells in a Worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/detect&#43;merged&#43;cells&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/detect&#43;merged&#43;cells&#43;in&#43;a&#43;worksheet/</guid>
      <description>This article provides information on how to get merged cell areas in a worksheet.
Aspose.Cells allows you to get merged cell areas in a worksheet. You can unmerge (split) them too. This article shows the simplest code using Aspose.Cells API to perform the task.
The component provides the Cells.MergedCells attribute which can get an ArrayList of merged cell areas. The following code sample shows you how to detect merged cells in a worksheet.</description>
    </item>
    
    <item>
      <title>Sort Data</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/sort&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/sort&#43;data/</guid>
      <description>This article is designed to provide developers with a detailed understanding of how to sort data in a worksheet.
Data sorting is a handy and versatile feature of Microsoft Excel. Generally, sorting is performed on a list, which is defined as a contiguous group of data where the data is displayed in columns. Aspose.Cells allows you to sort worksheet data alphabetically or numerically. It sorts data in the same way as Microsoft Excel does.</description>
    </item>
    
    <item>
      <title>Copy Rows and Columns</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/copy&#43;rows&#43;and&#43;columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/copy&#43;rows&#43;and&#43;columns/</guid>
      <description>Aspose.Cells APIs provide the facility to copy rows and columns within or between the workbooks. While copying row or column, all the data is copied along with the styling, formulas (with updated references) and resulting values, comments, cell styles, hidden cells, images and drawing objects.
   Contents Summary
1 Copying Rows 1.1 Copying Single Row
1.2 Copying Multiple Rows
2 Copying Columns 2.1 Copying Single Column
2.2 Copying Multiple Columns</description>
    </item>
    
    <item>
      <title>Move Range of Cells in a Worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/move&#43;range&#43;of&#43;cells&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/move&#43;range&#43;of&#43;cells&#43;in&#43;a&#43;worksheet/</guid>
      <description>This article shows how to move a range of cells in a worksheet.
The following code sample shows you how to move range of cells in a worksheet.
\
Attachments: Move Range of Cells in a Worksheet-001.png (image/png) Move Range of Cells in a Worksheet-002.png (image/png)</description>
    </item>
    
    <item>
      <title>AutoFit Rows for Merged Cells</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/autofit&#43;rows&#43;for&#43;merged&#43;cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/autofit&#43;rows&#43;for&#43;merged&#43;cells/</guid>
      <description>Microsoft Excel provides a feature that allows you to auto-size the height of a cell according to its content. The feature is called auto-fit rows. Microsoft Excel doesn&amp;rsquo;t set auto-fit operation on merged cells natively. Sometimes the feature becomes vital for a user who really needs to implement auto-fit rows on merged cells too.
Aspose.Cells supports this feature through the AutoFitterOptions API. Using this API, it is possible to auto-fit rows in a worksheet including merged cells.</description>
    </item>
    
    <item>
      <title>Add a Picture to an Excel Comment</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/add&#43;a&#43;picture&#43;to&#43;an&#43;excel&#43;comment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/add&#43;a&#43;picture&#43;to&#43;an&#43;excel&#43;comment/</guid>
      <description>Microsoft Excel lets users customize the look and feel of spreadsheets to a great extent. It is even possible to add background pictures to comments.
Comments are added to cells to record comments, anything from the details of how a formula is worked, where a value comes from or questions from reviewers. Adding a background image can be an aesthetic choice, or be used to strengthen branding.
   Contents Summary</description>
    </item>
    
    <item>
      <title>Use Error Checking Options</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/use&#43;error&#43;checking&#43;options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/use&#43;error&#43;checking&#43;options/</guid>
      <description>Microsoft Excel allows users to define error checking options and rules. Users often see error checks when creating formulas, a small triangle at the top right corner of a cell highlights when there&amp;rsquo;s a problem with a cell. Excel provides information that helps users to correct common problems.
   Contents Summary
1 Types of Errors
2 Numbers Stored as Text
 ||      Types of Errors      Errors that mean that the formula cannot return a result - such as dividing a number by zero - require immediate attention and an error value is displayed in the cell.</description>
    </item>
    
    <item>
      <title>Insert a Picture Based on Cell Reference</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/insert&#43;a&#43;picture&#43;based&#43;on&#43;cell&#43;reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/insert&#43;a&#43;picture&#43;based&#43;on&#43;cell&#43;reference/</guid>
      <description>Sometimes you have an empty picture and need to show data or contents in the picture by setting a cell reference in the Formula Bar. Aspose.Cells supports this feature (Microsoft Excel 2010).
Inserting a Picture Based on Cell Reference
Aspose.Cells supports displaying the contents of a worksheet cell in an image shape. You can link the picture to the cell that contains the data that you want to display. Since the cell or cell range is linked to the graphic object, changes that you make to the data in that cell or cell range automatically appear in the graphic object.</description>
    </item>
    
    <item>
      <title>Add Conditional Icons Set with the Cell Text</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/add&#43;conditional&#43;icons&#43;set&#43;with&#43;the&#43;cell&#43;text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/add&#43;conditional&#43;icons&#43;set&#43;with&#43;the&#43;cell&#43;text/</guid>
      <description>Sometimes, you want to add conditional icons next to the text in a cell to make data more meaningful to readers. You want to use some of the conditional formatting icon types but without applying conditional formatting to cells. Aspose.Cells supports the feature.
The following code sample shows how to add conditional icons set with the Cell Text.
\
Attachments: addcondiconsset.png (image/png) addcondiconsset.png (image/png)</description>
    </item>
    
    <item>
      <title>Search and Replace Data in a Range</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/search&#43;and&#43;replace&#43;data&#43;in&#43;a&#43;range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/search&#43;and&#43;replace&#43;data&#43;in&#43;a&#43;range/</guid>
      <description>Sometimes you need to search for and replace specific data in a range ignoring any cell values outside the desired range. Aspose.Cells allows you to limit a search to a specific range. This article explains how.
Aspose.Cells provides the FindOptions.SetRange() method for specifying a range when searching data. Below code sample search and replace data in a range.
\
Attachments: Search-Data-Within-Range-1.PNG (image/png) Search-Data-Within-Range-2.PNG (image/png)</description>
    </item>
    
    <item>
      <title>Reading Cell Values in Multiple Threads Simultaneously</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/reading&#43;cell&#43;values&#43;in&#43;multiple&#43;threads&#43;simultaneously/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/reading&#43;cell&#43;values&#43;in&#43;multiple&#43;threads&#43;simultaneously/</guid>
      <description>Needing to read cell values in multiple threads simultaneously is a common requirement. This article explains how to use Aspose.Cells for this purpose.
To read cell values in more than one thread simultaneously, set Worksheet.Cells.MultiThreadReading to true. If you do not, you might get the wrong cell values.
The following code:
 Creates a workbook. Adds a worksheet. Populates the worksheet with string values. It then creates two threads that simultaneously read values from random cells.</description>
    </item>
    
    <item>
      <title>Merge or Unmerge Range of Cells</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/merge&#43;or&#43;unmerge&#43;range&#43;of&#43;cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/merge&#43;or&#43;unmerge&#43;range&#43;of&#43;cells/</guid>
      <description>You can use Aspose.Cells to merge or split a range of cells. Aspose.Cells provides the Range.Merge() and Range.UnMerge() methods for this purpose. This article explains how to merge a range of cells into a single cell.
Example
The following sample code first creates a range - A1:D4 - then merges the cells in the range into a single cell using the Range.Merge() method. Similarly, you can split cells by creating a range and calling the Range.</description>
    </item>
    
    <item>
      <title>Get Validation Applied on a Cell</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/get&#43;validation&#43;applied&#43;on&#43;a&#43;cell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/get&#43;validation&#43;applied&#43;on&#43;a&#43;cell/</guid>
      <description>You can use Aspose.Cells to get the validation applied to a cell. Aspose.Cells provides the Cell.GetValidation() method for this purpose. If there is no validation applied on the cell, it returns null.
Similarly, you can use Worksheet.Validations.GetValidationInCell method to acquire the validation applied to a cell by providing its row and column indices.
Below code sample, shows you how to get validation applied on a cell.
\
Attachments: Validation-applied-on-cell-C1.PNG (image/png)</description>
    </item>
    
    <item>
      <title>Verify that Cell Value Satisfies Data Validation Rules</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/verify&#43;that&#43;cell&#43;value&#43;satisfies&#43;data&#43;validation&#43;rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/verify&#43;that&#43;cell&#43;value&#43;satisfies&#43;data&#43;validation&#43;rules/</guid>
      <description>Microsoft Excel allows users to add data validation rules to cells. For example, a decimal validation specifies that only numbers between 10 and 20 can be entered. If a user enters a different number. Microsoft Excel shows an error message and prompts them to enter a number in the correct range. If you copy and paste a number, say 3, into the cell, Excel does not run a validation check or show an error message.</description>
    </item>
    
    <item>
      <title>Adding HTML Rich Text inside the Cell</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/adding&#43;html&#43;rich&#43;text&#43;inside&#43;the&#43;cell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/adding&#43;html&#43;rich&#43;text&#43;inside&#43;the&#43;cell/</guid>
      <description>Aspose.Cells supports converting Microsoft Excel oriented HTML into XLS/XLSX format. It means, the HTML generated by Microsoft Excel can be converted back to XLS/XLSX format using Aspose.Cells.
Similarly, if there is some simple HTML, Aspose.Cells can convert it into HTML Rich Text. Aspose.Cells provides Cell.HtmlString property which can take such a simple HTML and convert it to formatted cell text.
Below code sample shows you how to add HTML rich text inside the cell.</description>
    </item>
    
    <item>
      <title>Accessing Table from Cell and Adding Values inside it using Row and Column Offsets</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/accessing&#43;table&#43;from&#43;cell&#43;and&#43;adding&#43;values&#43;inside&#43;it&#43;using&#43;row&#43;and&#43;column&#43;offsets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/accessing&#43;table&#43;from&#43;cell&#43;and&#43;adding&#43;values&#43;inside&#43;it&#43;using&#43;row&#43;and&#43;column&#43;offsets/</guid>
      <description>Normally, you add values inside the Table or List Object using Cell.PutValue() method. But sometimes, you might need to add values inside the Table or List Object using the row and column offsets.
In order to access Table or List Object from a cell, use the Cell.GetTable() method. To add values inside it using the row and column offsets, use the ListObject.PutCellValue method.
The following screenshot shows the source Excel file used inside the code.</description>
    </item>
    
    <item>
      <title>Get Cell String Value with and without Formatting</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/get&#43;cell&#43;string&#43;value&#43;with&#43;and&#43;without&#43;formatting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/get&#43;cell&#43;string&#43;value&#43;with&#43;and&#43;without&#43;formatting/</guid>
      <description>Aspose.Cells provides a method Cell.GetStringValue() which can be used to get the string value of the cell with or without any formatting. Suppose, you have a cell with value 0.012345 and you have formatted it to display two decimal places only. It will then display as 0.01 in Excel. You can retrieve string values both as 0.01 and as 0.012345 using the Cell.GetStringValue() method. It takes CellValueFormatStrategy enum as a parameter which has the following values</description>
    </item>
    
    <item>
      <title>Copy Row Heights of Source Range to Destination Range</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/copy&#43;row&#43;heights&#43;of&#43;source&#43;range&#43;to&#43;destination&#43;range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/copy&#43;row&#43;heights&#43;of&#43;source&#43;range&#43;to&#43;destination&#43;range/</guid>
      <description>Sometime user needs to copy row heights of source range to destination range. Aspose.Cells provides PasteType.RowHeights enum for this purpose. When you will set PasteOptions.PasteType property with PasteType.RowHeights enum then heights of all rows inside the source range will be copied to destination range.
The following sample code explains how to use PasteType.RowHeights enum to copy row heights of source range into destination range. Once you will open the output excel file generated by this code in Microsoft Excel, you will see that destination range row heights are exactly the same as source range row heights.</description>
    </item>
    
    <item>
      <title>Calculate the Width and Height of the Cell Value in Unit of Pixels</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/calculate&#43;the&#43;width&#43;and&#43;height&#43;of&#43;the&#43;cell&#43;value&#43;in&#43;unit&#43;of&#43;pixels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/calculate&#43;the&#43;width&#43;and&#43;height&#43;of&#43;the&#43;cell&#43;value&#43;in&#43;unit&#43;of&#43;pixels/</guid>
      <description>Sometimes you need to calculate the width and height of cell value to fit the cell value inside the cell. Aspose.Cells provides Cell.GetWidthOfValue() and Cell.GetHeightOfValue() methods for this purpose. By using these methods you can calculate width and height of the cell value and then set the width of the column and height of the row of that cell respectively and this will then adjust or fit the cell value inside the cell.</description>
    </item>
    
    <item>
      <title>Find if the cell value starts with single quote mark</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/find&#43;if&#43;the&#43;cell&#43;value&#43;starts&#43;with&#43;single&#43;quote&#43;mark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/find&#43;if&#43;the&#43;cell&#43;value&#43;starts&#43;with&#43;single&#43;quote&#43;mark/</guid>
      <description>Aspose.Cells now provides the Style.QuotePrefix property to find if the cell value starts with a single quote mark. Before this property, there was no way to distinguish between strings like sample and &amp;lsquo;sample etc.
The following sample code explains that the strings like sample and &amp;lsquo;sample cannot be differentiated with Cell.StringValue property. Therefore we must use Style.QuotePrefix property to distinguish them.
\</description>
    </item>
    
    <item>
      <title>Update references in other worksheets while deleting blank columns and rows in a worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/update&#43;references&#43;in&#43;other&#43;worksheets&#43;while&#43;deleting&#43;blank&#43;columns&#43;and&#43;rows&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/update&#43;references&#43;in&#43;other&#43;worksheets&#43;while&#43;deleting&#43;blank&#43;columns&#43;and&#43;rows&#43;in&#43;a&#43;worksheet/</guid>
      <description>When you delete blank columns and rows in a worksheet, then its references in other worksheets become invalid. If you want to avoid this behavior and want those references of the current worksheet in other worksheets are also updated, then please use the DeleteOptions.UpdateReference property and set it to true.
   Contents Summary
1 Update references in other worksheets while deleting blank columns and rows in a worksheet 1.</description>
    </item>
    
    <item>
      <title>How and Where to Use Enumerators</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/how&#43;and&#43;where&#43;to&#43;use&#43;enumerators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/technicalarticles/asposecellsgeneral/managingrowscolumnsandcells/how&#43;and&#43;where&#43;to&#43;use&#43;enumerators/</guid>
      <description>An enumerator is an object that provides the ability to traverse a container or a collection. Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection, whereas IEnumerable is an interface that defines one method GetEnumerator which returns an IEnumerator interface, this, in turn, allows read-only access to a collection.
Aspose.Cells APIs provide a bunch of enumerators however, this article mainly discusses the three types as listed below.</description>
    </item>
    
  </channel>
</rss>