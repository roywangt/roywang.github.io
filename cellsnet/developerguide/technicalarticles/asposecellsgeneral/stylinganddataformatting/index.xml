<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Styling and Data Formatting on Aspose.Cells Product Family</title>
    <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/</link>
    <description>Recent content in Styling and Data Formatting on Aspose.Cells Product Family</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Change Text Direction of the Comment</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/change&#43;text&#43;direction&#43;of&#43;the&#43;comment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/change&#43;text&#43;direction&#43;of&#43;the&#43;comment/</guid>
      <description>Microsoft Excel allows users to add comments to cells to add additional information and highlight data. Developers may need to customize the comment to specify alignment settings and text direction. Aspose.Cells provides APIs to accomplish the task.
Aspose.Cells provides a Shape.TextDirection property to set text direction for a comment. The following sample code demonstrates the use of Shape.TextDirection property to set text direction for a comment.
\
Attachments: changecommenttextdirection1.png (image/png)</description>
    </item>
    
    <item>
      <title>Format Worksheet Cells in a Workbook</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/format&#43;worksheet&#43;cells&#43;in&#43;a&#43;workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/format&#43;worksheet&#43;cells&#43;in&#43;a&#43;workbook/</guid>
      <description>This article shows how to:
 Use styles to quickly format data. Format cells in rows and columns. Use borders and colors to emphasize data. Apply number formats to emphasize data. Use fonts and attributes to highlight data. Format data in a named range. Change data alignment and orientation. Set row height and column width.  The example project performs all of these tasks and provides developers with a detailed description of how to create a workbook, add data into and apply formatting using Aspose.</description>
    </item>
    
    <item>
      <title>Reusing Style Objects</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/reusing&#43;style&#43;objects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/reusing&#43;style&#43;objects/</guid>
      <description>Reusing style objects can save memory and make a program faster.
To apply some formatting to a large range of cells in a worksheet:
 Create a style object. Specify the attributes. Apply the style to the cells in the range.  \
Because the Cell.GetStyle/Cell.SetStyle approach uses a lot less memory, and is efficient, the older Cell.Style property which consumed a lot of unnecessary memory, was removed with the release of Aspose.</description>
    </item>
    
    <item>
      <title>Modify an Existing Style</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/modify&#43;an&#43;existing&#43;style/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/modify&#43;an&#43;existing&#43;style/</guid>
      <description>To apply the same formatting options to cells, create a new formatting style object. A formatting style object is a combination of formatting characteristics, such as font, font size, indentation, number, border, patterns etc., named and stored as a set. When applied, all of the formatting in that style are applied.
You can also use an existing style, save it with the workbook and use to format information with the same attributes.</description>
    </item>
    
    <item>
      <title>Evaluating Cell.GetStyle and SetStyle Methods against Cell.Style Property</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/evaluating&#43;cell.getstyle&#43;and&#43;setstyle&#43;methods&#43;against&#43;cell.style&#43;property/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/evaluating&#43;cell.getstyle&#43;and&#43;setstyle&#43;methods&#43;against&#43;cell.style&#43;property/</guid>
      <description>Aspose.Cells for .NET 4.4.2 introduced two new methods for formatting cells: Cell.GetStyle and Cell.SetStyle. This article examines the Cell.GetStyle/SetStyle approach Vs the Cell.Style approach to help you judge which technique best suits you.
   Contents Summary
1 Formatting Cells 1.1 Using GetStyle()
1.2 Using SetStyle()
2 Conclusion
 ||      Formatting Cells      There are two ways to format a cell, illustrated below.</description>
    </item>
    
    <item>
      <title>Line Breaks and Text Wrapping</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/line&#43;breaks&#43;and&#43;text&#43;wrapping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/line&#43;breaks&#43;and&#43;text&#43;wrapping/</guid>
      <description>To ensure that text in a cell can be read, explicit line breaks and text wrapping can be applied. Text wrapping turns one line into several in a cell, which explicit line breaks put in breaks exactly where you want them.
   Contents Summary
1 To Wrap Text in a Cell
2 To Use Explicit Line Breaks
 ||      To Wrap Text in a Cell      To wrap text in a cell, use the Aspose.</description>
    </item>
    
    <item>
      <title>Implement 1904 Date System</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/implement&#43;1904&#43;date&#43;system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/implement&#43;1904&#43;date&#43;system/</guid>
      <description>Microsoft Excel supports two date systems: 1900 date system (the default date system implemented in Excel for Windows) and 1904 date system. The 1904 date system is normally used to provide compatibility with Macintosh Excel files and is the default system if you are using Excel for Macintosh. You can set the 1904 date system for Excel files using Aspose.Cells.
To implement 1904 date system in Microsoft Excel (for example Microsoft Excel 2003):</description>
    </item>
    
    <item>
      <title>Apply Superscript and Subscript Effects on Fonts</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/apply&#43;superscript&#43;and&#43;subscript&#43;effects&#43;on&#43;fonts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/apply&#43;superscript&#43;and&#43;subscript&#43;effects&#43;on&#43;fonts/</guid>
      <description>Aspose.Cells provides the functionality to apply superscript (text above the baseline) and subscript (text below the baseline) effects to text.
   Contents Summary
1 Working with Superscript and Subscript 1.1 Applying Superscript
1.2 Applying Subscript
 ||      Working with Superscript and Subscript      Apply the superscript effect by setting the Style.Font object&amp;rsquo;s IsSuperscript property to true. To apply subscript, set the Style.</description>
    </item>
    
    <item>
      <title>Convert Text Numeric Data to Number</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/convert&#43;text&#43;numeric&#43;data&#43;to&#43;number/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/convert&#43;text&#43;numeric&#43;data&#43;to&#43;number/</guid>
      <description>Sometimes, you want to convert numeric data entered as text to numbers. You can enter numbers as text in Microsoft Excel by putting an apostrophe before a number, for example &amp;lsquo;12345. Excel then treats the number as a string. Aspose.Cells allows you to convert strings to numbers.
Aspose.Cells provides the Cells.ConvertStringToNumericValue() method which can be used to convert all string or text numeric data into numbers.
The following screenshot shows string numbers in cells A1:A17.</description>
    </item>
    
    <item>
      <title>Applying Subtotal and Changing Direction of Outline Summary Rows below Detail</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/applying&#43;subtotal&#43;and&#43;changing&#43;direction&#43;of&#43;outline&#43;summary&#43;rows&#43;below&#43;detail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/applying&#43;subtotal&#43;and&#43;changing&#43;direction&#43;of&#43;outline&#43;summary&#43;rows&#43;below&#43;detail/</guid>
      <description>This article will explain how to apply Subtotal to data and changing the direction of Outline Summary Rows below Detail.
You can apply Subtotal to data using Worksheet.Cells.Subtotal() method. It takes the following parameters.
 CellArea - The range to apply subtotal on GroupBy - The field to group by, as a zero-based integer offset Function - The subtotal function. TotalList - An array of zero-based field offsets, indicating the fields to which the subtotals are added.</description>
    </item>
    
    <item>
      <title>Specify Custom Number Decimal and Group Separators for Workbook</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/specify&#43;custom&#43;number&#43;decimal&#43;and&#43;group&#43;separators&#43;for&#43;workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/specify&#43;custom&#43;number&#43;decimal&#43;and&#43;group&#43;separators&#43;for&#43;workbook/</guid>
      <description>In Microsoft Excel, you can specify the Custom Decimal and Thousands Separators instead of using System Separators from the Advanced Excel Options as shown in the screenshot below.
Aspose.Cells provides the WorkbookSettings.NumberDecimalSeparator and WorkbookSettings.NumberGroupSeparator properties to set the custom separators for formatting/parsing numbers.
   Contents Summary
1 Specifying Custom Separators using Microsoft Excel
2 Specifying Custom Separators using Aspose.Cells 2.1 Sample Code
 ||      Specifying Custom Separators using Microsoft Excel      The following screenshot shows the Advanced Excel Options and highlights the section to specify the Custom Separators.</description>
    </item>
    
    <item>
      <title>Extract Theme Data from Excel File</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/extract&#43;theme&#43;data&#43;from&#43;excel&#43;file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/extract&#43;theme&#43;data&#43;from&#43;excel&#43;file/</guid>
      <description>Aspose.Cells allows the users to extract Theme related data from Excel file. For example, you can extract Theme Name applied to workbook and Theme Color applied to cell or borders of the cell, etc.
You can apply Theme to your workbook using Microsoft Excel via Page Layout &amp;gt; Themes command.
The following sample code extracts the Theme name applied to source workbook and then it extracts the Theme color applied to cell A1 and Theme color applied to the bottom border of the cell.</description>
    </item>
    
    <item>
      <title>Display Bullets by setting Cell Value using HTML</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/display&#43;bullets&#43;by&#43;setting&#43;cell&#43;value&#43;using&#43;html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/display&#43;bullets&#43;by&#43;setting&#43;cell&#43;value&#43;using&#43;html/</guid>
      <description>Aspose.Cells supports showing bullets with HTML code. This article will explain how to display bullets by setting cell value using HTML. We will use Cell.HtmlString property to set the cell value with our HTML.
The following code uses the HTML code to set the cell value. Once, you will run this code, you will get the output as shown in the image below.
\
Output
The following screenshot shows the output of the above sample code.</description>
    </item>
    
    <item>
      <title>Access and Update the Portions of Rich Text of Cell</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/access&#43;and&#43;update&#43;the&#43;portions&#43;of&#43;rich&#43;text&#43;of&#43;cell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/access&#43;and&#43;update&#43;the&#43;portions&#43;of&#43;rich&#43;text&#43;of&#43;cell/</guid>
      <description>Aspose.Cells allows you to access and update the portions of the rich text of the cell. For this purpose, you can use Cell.GetCharacters() and Cell.SetCharacters() methods. These methods will return and accept the array of FontSetting objects which you can use to access and update various properties of font like font name, font color, boldness, etc.
   Contents Summary
1 Access and Update the Portions of Rich Text of Cell 1.</description>
    </item>
    
    <item>
      <title>Using Built-in Styles</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/using&#43;built-in&#43;styles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/using&#43;built-in&#43;styles/</guid>
      <description>Aspose.Cells provides a vast collection of re-usable styles to format a cell in spreadsheet document. We can use built-in styles in our workbook and also create custom styles.
How to use Built-in Styles
The method Workbook.CreateBuiltinStyle and class BuiltinStyleType, make it convenient to create re-usable styles. Here is a list of all possible built-in styles:
 TWENTY_PERCENT_ACCENT_1 TWENTY_PERCENT_ACCENT_2 TWENTY_PERCENT_ACCENT_3 TWENTY_PERCENT_ACCENT_4 TWENTY_PERCENT_ACCENT_5 TWENTY_PERCENT_ACCENT_6 FORTY_PERCENT_ACCENT_1 FORTY_PERCENT_ACCENT_2 FORTY_PERCENT_ACCENT_3 FORTY_PERCENT_ACCENT_4 FORTY_PERCENT_ACCENT_5 FORTY_PERCENT_ACCENT_6 SIXTY_PERCENT_ACCENT_1 SIXTY_PERCENT_ACCENT_2 SIXTY_PERCENT_ACCENT_3 SIXTY_PERCENT_ACCENT_4 SIXTY_PERCENT_ACCENT_5 SIXTY_PERCENT_ACCENT_6 ACCENT_1 ACCENT_2 ACCENT_3 ACCENT_4 ACCENT_5 ACCENT_6 BAD CALCULATION CHECK_CELL COMMA COMMA_1 CURRENCY CURRENCY_1 EXPLANATORY_TEXT GOOD HEADER_1 HEADER_2 HEADER_3 HEADER_4 HYPERLINK FOLLOWED_HYPERLINK INPUT LINKED_CELL NEUTRAL NORMAL NOTE OUTPUT PERCENT TITLE TOTAL WARNING_TEXT ROW_LEVEL COLUMN_LEVEL  \</description>
    </item>
    
    <item>
      <title>Render Custom Date Format Pattern g and ge mm dd</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/render&#43;custom&#43;date&#43;format&#43;pattern&#43;g&#43;and&#43;ge&#43;mm&#43;dd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/render&#43;custom&#43;date&#43;format&#43;pattern&#43;g&#43;and&#43;ge&#43;mm&#43;dd/</guid>
      <description>Aspose.Cells is now able to render the custom date format pattern like g, ge.mm.dd and similar. Please check the attached source excel file and the converted pdf by Aspose.Cells for your reference.
The following sample code converts the source excel file which contains date values with custom format patterns like g and ge.mm.dd into output pdf.
\
Attachments: DateFormat.xlsx (image/png) DateFormat.xlsx.out.pdf (image/png)</description>
    </item>
    
    <item>
      <title>Check Custom Number Format when Setting Style.Custom Property</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/check&#43;custom&#43;number&#43;format&#43;when&#43;setting&#43;style.custom&#43;property/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/check&#43;custom&#43;number&#43;format&#43;when&#43;setting&#43;style.custom&#43;property/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Check Custom Number Format when setting Style.Custom property
3 Sample Code
 ||      Possible Usage Scenarios      If you assign invalid custom number format to Style.Custom property, then Aspose.Cells will not throw any exception. But if you want that Aspose.Cells should check if the assigned custom number format is valid or not, then please set the Workbook.</description>
    </item>
    
    <item>
      <title>How to change the Comment Font Color</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/how&#43;to&#43;change&#43;the&#43;comment&#43;font&#43;color/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/technicalarticles/asposecellsgeneral/stylinganddataformatting/how&#43;to&#43;change&#43;the&#43;comment&#43;font&#43;color/</guid>
      <description>Microsoft Excel allows users to add comments to cells to add additional information and highlight data. Developers may need to customize the comment to specify alignment settings, text direction Font Color, etc. Aspose.Cells provides APIs to accomplish the task.
Aspose.Cells provides a Shape.TextBody property to the font color of the comment. The following sample code demonstrates the use of Shape.TextBody property to set text direction for a comment.
\
The output file generated by the above code is attached for your reference.</description>
    </item>
    
  </channel>
</rss>