<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Migration from Microsoft Office Automation to Aspose on Aspose.Cells Product Family</title>
    <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/</link>
    <description>Recent content in Migration from Microsoft Office Automation to Aspose on Aspose.Cells Product Family</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Adding New Worksheets to Workbook and Activating a Sheet</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/adding&#43;new&#43;worksheets&#43;to&#43;workbook&#43;and&#43;activating&#43;a&#43;sheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/adding&#43;new&#43;worksheets&#43;to&#43;workbook&#43;and&#43;activating&#43;a&#43;sheet/</guid>
      <description>When working with a template file, sometimes, there&amp;rsquo;s a need to add extra worksheets into the workbook to collect data. The new cells will be filled with data at specified positions and locations in each worksheet.
Similarly, you may need a specific worksheet to be active and viewed first when the file is opened in Microsoft Excel. An &amp;ldquo;active sheet&amp;rdquo; is the sheet that you&amp;rsquo;re working on in a workbook. The name on the tab of the active sheet is bold by default.</description>
    </item>
    
    <item>
      <title>Protecting and Unprotecting Workbooks</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/protecting&#43;and&#43;unprotecting&#43;workbooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/protecting&#43;and&#43;unprotecting&#43;workbooks/</guid>
      <description>To prevent someone from accidentally or deliberately changing, moving, or deleting worksheets, you can protect workbook elements with or without a password. To protect a workbook&amp;rsquo;s structure so that worksheets in the workbook can&amp;rsquo;t be moved, deleted, hidden, unhidden, or renamed, and new worksheets can&amp;rsquo;t be inserted, specify the ProtectionType as Structure.
To protect Windows so that they are the same size and position each time the workbook is opened, specify the ProtectionType as Windows.</description>
    </item>
    
    <item>
      <title>Inserting and Removing Cell Comments in a Worksheet</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/inserting&#43;and&#43;removing&#43;cell&#43;comments&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/inserting&#43;and&#43;removing&#43;cell&#43;comments&#43;in&#43;a&#43;worksheet/</guid>
      <description>Generally, comments are used to add additional information to cells in a worksheet. We use them every now and then and we delete them when we do not need them any longer. Comments are useful if you need to document a particular value or to help you remember what a formula does. When you move the mouse pointer over a cell that has a comment, the comment pops up in a small box.</description>
    </item>
    
    <item>
      <title>Merge or UnMerge Cells in a Worksheet</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/merge&#43;or&#43;unmerge&#43;cells&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/merge&#43;or&#43;unmerge&#43;cells&#43;in&#43;a&#43;worksheet/</guid>
      <description>While working with worksheets, you often need to create a title / heading in a single cell that spans the top of your worksheet. You might be creating an invoice, and want a fewer columns for the total or summary values. When you want to make one cell from two or more cells, you merge the cells. We carry out the task using VSTO and Aspose.Cells for .NET independently.
Description</description>
    </item>
    
    <item>
      <title>Add Borders to Cells in a Worksheet</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/add&#43;borders&#43;to&#43;cells&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/add&#43;borders&#43;to&#43;cells&#43;in&#43;a&#43;worksheet/</guid>
      <description>Aspose.Cells for .NET allows you to perform almost any tasks through your application that a user can perform in Microsoft Excel. Aspose.Cells is performant and robust and has the added benefit of working independently of Microsoft Automation. This article shows how to add borders to cells in a worksheet using Aspose.Cells for .NET compared to VSTO.
Adding Borders to Cells
To add borders to cells in a spreadsheet, take the following steps:</description>
    </item>
    
    <item>
      <title>Add Hyperlinks to Cells</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/add&#43;hyperlinks&#43;to&#43;cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/add&#43;hyperlinks&#43;to&#43;cells/</guid>
      <description>Aspose.Cells for .NET allows you to perform almost any tasks through your application that a user can perform in Microsoft Excel. This article compares how to add a hyperlink to a cell in a worksheet using VSTO and Aspose.Cells for .NET.
Adding Hyperlinks to Cells
To add hyperlinks to cells in a spreadsheet, take the following steps:
 Set up the worksheet:  Instantiate an Application object. (VSTO only.) Add a Workbook.</description>
    </item>
    
    <item>
      <title>Creating a Named Range</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/creating&#43;a&#43;named&#43;range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/creating&#43;a&#43;named&#43;range/</guid>
      <description>Aspose.Cells for .NET lets developers perform most of the the tasks that users can perform in Microsoft Excel through their applications. This article explains how to apply a named range programmatically.
A named range is an Excel feature that lets you assign a name to a cell, or a range of cells, in an Excel spreadsheet. You can then use the name in formulas to refer to the cell (or range).</description>
    </item>
    
    <item>
      <title>Hide and Unhide Worksheets in a Workbook</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/hide&#43;and&#43;unhide&#43;worksheets&#43;in&#43;a&#43;workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/hide&#43;and&#43;unhide&#43;worksheets&#43;in&#43;a&#43;workbook/</guid>
      <description>When presenting workbooks to customers, or doing a presentation, it can be useful to hide worksheets in a workbook. A structured approach to spreadsheet modelling suggests that data, formulas and visualizations such as charts are kept on separate sheets. This approach keeps the layout clean and simple and makes the workbook easier to navigate. When presenting results, you might want to hide the data or formula sheets from view to avoid distraction.</description>
    </item>
    
    <item>
      <title>Set Background Picture of a Worksheet</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/set&#43;background&#43;picture&#43;of&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/set&#43;background&#43;picture&#43;of&#43;a&#43;worksheet/</guid>
      <description>Background images sit behind the text and lines in a spreadsheet. They are used to give information about a workbook, for example when used as status watermarks, but can also add company branding, or decoration. Microsoft Excel allows users to add background images manually.
Developers can also add background images through their applications, using either Aspose.Cells for .NET or VSTO. This article compares the two approaches.
Setting a Background Picture on a Worksheet</description>
    </item>
    
    <item>
      <title>Rotating Cell Text</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/rotating&#43;cell&#43;text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/rotating&#43;cell&#43;text/</guid>
      <description>Sometimes, a column header is much wider than the data in the cells below. This can cause unnecessary whitespace on the page. One solution is to rotate the text vertically so that it takes less horizontal space. In Microsoft Excel, rotating text is easy. Luckily, it is possible to rotate text programmatically too, so that developers can rotate labels in the spreadsheets they create within their applications.
This article looks at how to rotate text in cells using Aspose.</description>
    </item>
    
    <item>
      <title>Create a Pie Chart</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/create&#43;a&#43;pie&#43;chart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/create&#43;a&#43;pie&#43;chart/</guid>
      <description>Charts present data in an easy to understand way. Users who work with Microsoft Excel can create a number of different charts and customize them. The same features are available for developers who work with Aspose.Cells for .NET.
Creating a Pie Chart
This article compares how to create a pie chart using Office Automation and VSTO to using Aspose.Cells for .NET. The steps for creating a pie chart are:
 Creating a workbook and worksheet.</description>
    </item>
    
    <item>
      <title>Auto Filter Data</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/auto&#43;filter&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/auto&#43;filter&#43;data/</guid>
      <description>To get an understanding of what data is in a range, it is often easier to sort and filter the data than to look at columns of unordered data. Sorting organizes data in either ascending or descending order, making it easier to find specific values. Filtering the data, allows you to show only certain values. It helps focus in on particular items in sales records, for example.
Users of Microsoft Excel can apply auto-filtering to columns.</description>
    </item>
    
    <item>
      <title>Wrapping Cell Text</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/wrapping&#43;cell&#43;text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/wrapping&#43;cell&#43;text/</guid>
      <description>Wrapping text makes it easier to read: a cell with wrapped text expands to fit the text so that the text isn&amp;rsquo;t displayed over other cells.
With Aspose.Cells for .NET, developers can perform most of the tasks in their applications that users can perform with Microsoft Excel, including wrapping text in cells. This article explains how, and compares the task using VSTO and Aspose.Cells. Aspose.Cells is optimized for efficient coding and works without Microsoft Automation.</description>
    </item>
    
    <item>
      <title>Use Formulas Functions to Process Data</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/use&#43;formulas&#43;functions&#43;to&#43;process&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/knowledgebase/migrationfrommicrosoftofficeautomationtoaspose/use&#43;formulas&#43;functions&#43;to&#43;process&#43;data/</guid>
      <description>This technical tip will illustrate how you can use formulas/functions to process data with VSTO and Aspose.Cells for .NET through code.
***Description ***
\
***Using Formulas/Functions to Process Data ***
\
***1) VSTO ***
C#
//Note: To help you better, the code uses full namespacing
void AddingCellFormula()
{
//Access vsto application
Microsoft.Office.Interop.Excel.Application app = Globals.ThisAddIn.Application;
//Access workbook
Microsoft.Office.Interop.Excel.Workbook workbook = app.ActiveWorkbook;
//Access worksheet
Microsoft.Office.Interop.Excel.Worksheet m_sheet = workbook.Worksheets[1];
//Access vsto worksheet</description>
    </item>
    
  </channel>
</rss>