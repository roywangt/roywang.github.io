<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTML on Aspose.Cells Product Family</title>
    <link>http://192.168.1.240:1313/cellsnet/developerguide/html/</link>
    <description>Recent content in HTML on Aspose.Cells Product Family</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://192.168.1.240:1313/cellsnet/developerguide/html/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Convert Excel to HTML with headings</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/convert&#43;excel&#43;to&#43;html&#43;with&#43;headings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/convert&#43;excel&#43;to&#43;html&#43;with&#43;headings/</guid>
      <description>Contents Summary
1 Convert Excel to HTML with headings
2 Sample Code
 |     Convert Excel to HTML with headings     Aspose.Cells provides the option to export headings while converting Excel to HTML. For this, you may set the HtmlSaveOptions.ExportHeadings property to true. The default value of HtmlSaveOptions.ExportHeadings property is false. The following image shows the output file generated by the following code.</description>
    </item>
    
    <item>
      <title>Disable Downlevel Revealed Comments while saving to HTML</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/disable&#43;downlevel&#43;revealed&#43;comments&#43;while&#43;saving&#43;to&#43;html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/disable&#43;downlevel&#43;revealed&#43;comments&#43;while&#43;saving&#43;to&#43;html/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Disable Downlevel Revealed Comments while saving to HTML
3 Sample Code
 |     Possible Usage Scenarios     When you save your Excel file to HTML, then Aspose.Cells reveals Downlevel Conditional Comments. These conditional comments are mostly relevant to older versions of Internet Explorer and are irrelevant to modern Web Browsers. You can read about them in detail at the following link.</description>
    </item>
    
    <item>
      <title>Exclude Unused Styles during Excel to HTML conversion</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/exclude&#43;unused&#43;styles&#43;during&#43;excel&#43;to&#43;html&#43;conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/exclude&#43;unused&#43;styles&#43;during&#43;excel&#43;to&#43;html&#43;conversion/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Exclude Unused Styles during Excel to HTML conversion
3 Sample Code
 |     Possible Usage Scenarios     Microsoft Excel file may contain many unused styles. When you export the Excel file to HTML format, these unused styles are also exported. This can increase the size of HTML. You can exclude the unused styles during the conversion of Excel file to HTML using the HtmlSaveOptions.</description>
    </item>
    
    <item>
      <title>Export Comments while Saving Excel file to Html</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/export&#43;comments&#43;while&#43;saving&#43;excel&#43;file&#43;to&#43;html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/export&#43;comments&#43;while&#43;saving&#43;excel&#43;file&#43;to&#43;html/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Export Comments while Saving Excel file to Html
3 Sample Code
 |     Possible Usage Scenarios     When you save your Excel file into HTML, comments are not exported. However, Aspose.Cells provides this feature using the HtmlSaveOptions.IsExportComments property. If you set it true, then HTML will also display comments present in your Excel file.</description>
    </item>
    
    <item>
      <title>Export Document Workbook and Worksheet Properties in Excel to HTML conversion</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/export&#43;document&#43;workbook&#43;and&#43;worksheet&#43;properties&#43;in&#43;excel&#43;to&#43;html&#43;conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/export&#43;document&#43;workbook&#43;and&#43;worksheet&#43;properties&#43;in&#43;excel&#43;to&#43;html&#43;conversion/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Export Document, Workbook and Worksheet Properties in Excel to HTML conversion
3 Sample Code
 |     Possible Usage Scenarios     When Microsoft Excel file is exported to HTML using Microsoft Excel or Aspose.Cells, it also exports various types of Document, Workbook and Worksheet properties as shown in the following screenshot. You can avoid exporting these properties by setting the HtmlSaveOptions.</description>
    </item>
    
    <item>
      <title>Export print area range to HTML</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/export&#43;print&#43;area&#43;range&#43;to&#43;html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/export&#43;print&#43;area&#43;range&#43;to&#43;html/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
 |     Possible Usage Scenarios     This is a common scenario where we need to export only print area i.e. selected range of cells instead of the entire sheet to HTML. This feature is already available for PDF rendering, however, now you can perform this task for HTML as well. First set the print area in the page setup object of the worksheet.</description>
    </item>
    
    <item>
      <title>Export similar Border Style when Border Style is not supported by Web Browsers</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/export&#43;similar&#43;border&#43;style&#43;when&#43;border&#43;style&#43;is&#43;not&#43;supported&#43;by&#43;web&#43;browsers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/export&#43;similar&#43;border&#43;style&#43;when&#43;border&#43;style&#43;is&#43;not&#43;supported&#43;by&#43;web&#43;browsers/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Export similar Border Style when Border Style is not supported by Web Browsers
3 Sample Code
 |     Possible Usage Scenarios     Microsoft Excel supports some type of dashed borders which are not supported by Web Browsers. When you convert such an Excel file into HTML using Aspose.Cells, such borders are removed. However, Aspose.</description>
    </item>
    
    <item>
      <title>Export Worksheet CSS Separately in Output HTML</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/export&#43;worksheet&#43;css&#43;separately&#43;in&#43;output&#43;html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/export&#43;worksheet&#43;css&#43;separately&#43;in&#43;output&#43;html/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Export Worksheet CSS Separately in Output HTML
3 Sample Code
4 Export single sheet workbook to HTML
5 Sample Code
 |     Possible Usage Scenarios     Aspose.Cells provides the feature to export worksheet CSS separately when you convert your Excel file to HTML. Please use HtmlSaveOptions.ExportWorksheetCSSSeparately property for this purpose and set it to true while saving Excel file to HTML format.</description>
    </item>
    
    <item>
      <title>Get HTML5 string from Cell</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/get&#43;html5&#43;string&#43;from&#43;cell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/get&#43;html5&#43;string&#43;from&#43;cell/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Get HTML5 string from Cell
3 Sample Code
4 Console Output
 |     Possible Usage Scenarios     Aspose.Cells returns the HTML string of the cell using the GetHtmlString method which accepts a boolean parameter. If you pass false as a parameter, it will return Normal HTML but if you pass true as a parameter, it will return HTML5 string.</description>
    </item>
    
    <item>
      <title>Hiding Overlaid Content with CrossHideRight while saving to Html</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/hiding&#43;overlaid&#43;content&#43;with&#43;crosshideright&#43;while&#43;saving&#43;to&#43;html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/hiding&#43;overlaid&#43;content&#43;with&#43;crosshideright&#43;while&#43;saving&#43;to&#43;html/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Hiding Overlaid Content with CrossHideRight while saving to Html
3 Sample Code
 |     Possible Usage Scenarios     When you save your Excel file to HTML, you can specify different cross types for cell strings. By default, Aspose.Cells generates HTML as per Microsoft Excel but when you change the cross type to CrossHideRight, then it hides all the strings at the right side of the cell which are overlaid or overlapping with cell string.</description>
    </item>
    
    <item>
      <title>Prefix Table Elements Styles with HtmlSaveOptions.TableCssId property</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/prefix&#43;table&#43;elements&#43;styles&#43;with&#43;htmlsaveoptions.tablecssid&#43;property/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/prefix&#43;table&#43;elements&#43;styles&#43;with&#43;htmlsaveoptions.tablecssid&#43;property/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Prefix Table Elements Styles with HtmlSaveOptions.TableCssId property
3 Sample Code
 |     Possible Usage Scenarios     Aspose.Cells allows you to prefix table elements styles with HtmlSaveOptions.TableCssId property. Suppose, you set this property with some value like MyTest_TableCssId, then you will find table elements styles like shown below
table#MyTest_TableCssId
#MyTest_TableCssId tr
#MyTest_TableCssId col
#MyTest_TableCssId br</description>
    </item>
    
    <item>
      <title>Recognise self closing tags</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/recognise&#43;self&#43;closing&#43;tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/recognise&#43;self&#43;closing&#43;tags/</guid>
      <description>HTML can have variety of tags formatting for empty tags like  or . Aspose.Cells supports both these formats now whereas earlier it was supporting only  like tags. This feature can be tested by converting the attached sample HTML file to Excel file. The sample HTML file and output Excel file can be downloaded from the following links for testing.
sampleSelfClosingTags.html
outsampleSelfClosingTags.xlsx
Sample Code
Attachments: sampleSelfClosingTags.html (text/html) outsampleSelfClosingTags.xlsx (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet)</description>
    </item>
    
    <item>
      <title>Set column width to scalable unit like em or percent</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/set&#43;column&#43;width&#43;to&#43;scalable&#43;unit&#43;like&#43;em&#43;or&#43;percent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/set&#43;column&#43;width&#43;to&#43;scalable&#43;unit&#43;like&#43;em&#43;or&#43;percent/</guid>
      <description>Generating an HTML file from a spreadsheet is very common. The size of the columns is defined in &amp;ldquo;pt&amp;rdquo; which works in many cases. However, there can be a case where this fixed size may not be required. For example, if a container panel width is 600px where this HTML page is being displayed. In this case, you may get a horizontal scrollbar if the generated table width is bigger. It was required that this fixed size shall be changed into a scalable unit like em or percent to get a better presentation.</description>
    </item>
    
    <item>
      <title>Specify how to cross string in output HTML using HtmlCrossType</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/html/specify&#43;how&#43;to&#43;cross&#43;string&#43;in&#43;output&#43;html&#43;using&#43;htmlcrosstype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/html/specify&#43;how&#43;to&#43;cross&#43;string&#43;in&#43;output&#43;html&#43;using&#43;htmlcrosstype/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Specify how to cross string in output HTML using HtmlCrossType
3 Sample Code
 |     Possible Usage Scenarios     When cell contains text or string but it is larger than the width of the cell, then the string overflows if the next cell in next column is null or empty. When you save your Excel file into HTML, you can control this overflow by specifying the cross type using the HtmlCrossType enumeration.</description>
    </item>
    
  </channel>
</rss>