<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Working with Worksheet on Aspose.Cells Product Family</title>
    <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/</link>
    <description>Recent content in Working with Worksheet on Aspose.Cells Product Family</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Accessing Worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/accessing&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/accessing&#43;worksheet/</guid>
      <description>A worksheet is an integral part of an Excel file. In fact, an Excel file is composed of one or more worksheets. Each worksheet can be composed of up tp 65,536 rows and 256 columns only. It is the worksheet that holds data in an Excel file.
Aspose.Cells.GridDesktop can create and manipulate existing and new Excel files so there is, of course, a way to access worksheets using Aspose.Cells.GridDesktop. This topic discusses how.</description>
    </item>
    
    <item>
      <title>Add or Insert a Worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/add&#43;or&#43;insert&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/add&#43;or&#43;insert&#43;a&#43;worksheet/</guid>
      <description>In this topic, we will discuss the techniques to add or insert worksheets in an Excel file using Aspose.Cells.GridDesktop. The difference between adding and inserting worksheets is that in addition, a worksheet is simply added at the end of the worksheets collection of the Excel file however insertion means adding a worksheet to a specific position in the worksheets collection.
   Contents Summary
1 Adding a Worksheet
2 Inserting a Worksheet</description>
    </item>
    
    <item>
      <title>Remove a Worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/remove&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/remove&#43;a&#43;worksheet/</guid>
      <description>This topic discusses removing worksheets using the Aspose.Cells.GridDesktop control. There are a few simple approaches to accomplish this basic task.
   Contents Summary
1 Removing a Worksheet 1.1 Using Worksheet Index
1.2 Using Worksheet Name
 ||      Removing a Worksheet      To remove a worksheet using Aspose.Cells.GridDesktop control, please follow the steps below:
 Add the Aspose.Cells.GridDesktop control to a form.</description>
    </item>
    
    <item>
      <title>Rename a Worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/rename&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/rename&#43;a&#43;worksheet/</guid>
      <description>This topic discusses how to change the name of a worksheet using Aspose.Cells.GridDesktop.
Example
Renaming a worksheet is a simple task that can be very useful. For example, if you want to label worksheets so that it is obvious what each one contains. For example, a model might have 12 worksheets, each named by month, to hold expense information.
To rename a worksheet using Aspose.Cells.GridDesktop control:
 Add a Aspose.Cells.GridDesktop control to a form.</description>
    </item>
    
    <item>
      <title>Importing Data from a DataTable to Grid</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/importing&#43;data&#43;from&#43;a&#43;datatable&#43;to&#43;grid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/importing&#43;data&#43;from&#43;a&#43;datatable&#43;to&#43;grid/</guid>
      <description>Since the release of the .NET Framework, Microsoft has provided an excellent way to store data in offline mode in the form of a DataTable object. Understanding the needs of developers, Aspose.Cells.GridDesktop also supports importing data from a data table. This topic discusses how to do this.
Example
To import the contents of a data table using Aspose.Cells.GridDesktop control:
 Add Aspose.Cells.GridDesktop control to a form. Create a DataTable object that contains the data to be imported.</description>
    </item>
    
    <item>
      <title>Exporting Data from Grid</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/exporting&#43;data&#43;from&#43;grid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/exporting&#43;data&#43;from&#43;grid/</guid>
      <description>In our previous topic, we have talked about importing the contents of a DataTable to Aspose.Cells.GridDesktop control but we purposely didn&amp;rsquo;t mention that Aspose.Cells.GridDesktop supports the reverse process too. So, in this topic, we will discuss about exporting the data inside Aspose.Cells.GridDesktop control to a DataTable.
   Contents Summary
1 Exporting Grid Contents 1.1 Exporting To a Specific DataTable
1.2 Exporting To a New DataTable
 ||      Exporting Grid Contents      Exporting To a Specific DataTable</description>
    </item>
    
    <item>
      <title>Working with Validations in Worksheets</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/working&#43;with&#43;validations&#43;in&#43;worksheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/working&#43;with&#43;validations&#43;in&#43;worksheets/</guid>
      <description>Aspose.Cells.GridDesktop also supports adding validations (or validation rules) to the cells of a worksheet. By applying validation rules to cells, developers can restrict users to enter data into Grid in a specific format. Different modes of validations are supported by Aspose.Cells.GridDesktop. In this topic, we will not only discuss about those validation modes but also explain the manipulation of these validations.
   Contents Summary
1 Validation Modes 1.1 Is Required Validation Mode</description>
    </item>
    
    <item>
      <title>Sorting Worksheet Data</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/sorting&#43;worksheet&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/sorting&#43;worksheet&#43;data/</guid>
      <description>Sorting is an important routine task that we mostly use while processing data. In this topic, we will discuss with the help of a simple example that how can we sort data in a worksheet.
Sorting Worksheet Data
To sort data in a worksheet using the API of Aspose.Cells.GridDesktop, please follow the steps below:
 First of all create a global object of CellRange so that it can be accessed anywhere in the scope of your class Create an event handler for SelectedCellRangeChanged event of GridDesktop.</description>
    </item>
    
    <item>
      <title>Managing Hyperlinks in a Worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/managing&#43;hyperlinks&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/managing&#43;hyperlinks&#43;in&#43;a&#43;worksheet/</guid>
      <description>Using Aspose.Cells.GridDesktop, it is also possible to add hyperlinks to simple values stored in cells of a worksheet. Let&amp;rsquo;s say that in some cells, you might have some values that you would like to link with more detailed information on a webpage. In that case, it would be desirable to add a hyperlink to that cell so that if a user click on the cell then he would be directed to that webpage.</description>
    </item>
    
    <item>
      <title>Managing Pictures in a Worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/managing&#43;pictures&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/managing&#43;pictures&#43;in&#43;a&#43;worksheet/</guid>
      <description>Most of the people believe that a picture can explain things better than words. That&amp;rsquo;s why Aspose.Cells.GridDesktop supports adding pictures to worksheets to execute this belief of the people. In this topic, we will discuss about adding and manipulating pictures in worksheets.
   Contents Summary
1 Adding Pictures
2 Accessing Pictures
3 Removing Pictures
 ||      Adding Pictures      To add a hyperlink to a cell using Aspose.</description>
    </item>
    
    <item>
      <title>Managing Comments in a Worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/managing&#43;comments&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/managing&#43;comments&#43;in&#43;a&#43;worksheet/</guid>
      <description>In MS Excel, you must be familiar with the comments feature that allows users to add comments to cells. This feature is helpful in those cases when it is required to provide some information to the users when they are about to enter values into the cells. Whenever a user places his mouse cursor on a commented cell, a small popup message is appeared to provide some information to the user.</description>
    </item>
    
    <item>
      <title>Adding Cell Controls in Worksheets</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/adding&#43;cell&#43;controls&#43;in&#43;worksheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/adding&#43;cell&#43;controls&#43;in&#43;worksheets/</guid>
      <description>Cell controls are in fact those controls that can be added to worksheets. We call them Cell Controls because these controls are displayed in cells. In this topic, we will discuss about adding and handling the events of these cell controls.
   Contents Summary
1 Introduction 1.1 Adding Button 1.1.1 Event Handling of Button
1.1.2 Specifying a Background Image for the Button Control
1.2 Adding CheckBox 1.2.1 Event Handling of CheckBox</description>
    </item>
    
    <item>
      <title>Managing Cell Controls in Worksheets</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/managing&#43;cell&#43;controls&#43;in&#43;worksheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/managing&#43;cell&#43;controls&#43;in&#43;worksheets/</guid>
      <description>This topic discusses some important concepts about managing cell controls using the API of Aspose.Cells.GridDesktop. We will explain that how can developer access, modify and remove cell controls from their worksheets. Let&amp;rsquo;s have a look into it.
   Contents Summary
1 Accessing Cell Controls
2 Removing Cell Controls
 ||      Accessing Cell Controls      To access and modify an existing cell control in the worksheet, developers can access a specific cell control from the Controls collection of the Worksheet by specifying the cell (using cell name or its location in terms of row and column numbers) in which the cell control is being displayed.</description>
    </item>
    
    <item>
      <title>Display and Hide Scroll Bars</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/display&#43;and&#43;hide&#43;scroll&#43;bars/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/display&#43;and&#43;hide&#43;scroll&#43;bars/</guid>
      <description>Scroll bars are useful for navigating the contents of spreadsheets that are wide and deep, that is, that have many rows and columns. Most applications support two types of scroll bar:
 Vertical scroll bar Horizontal scroll bar  Both of these are found in Microsoft Excel.
Aspose.Cell&amp;rsquo;s GridDesktop API provides horizontal and vertical scroll bars for scrolling through the contents of a worksheet. With the Aspose.Cells.GridDesktop APIs, developers can control the visibility of both of these scroll bars.</description>
    </item>
    
    <item>
      <title>Moving Worksheets</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/moving&#43;worksheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/moving&#43;worksheets/</guid>
      <description>Aspose.Cells.GridDesktop supports moving worksheets within the workbook.
Move Worksheets within a Workbook
Aspose.Cells.GridDesktop provides a method, Aspose.Cells.GridDesktop.WorksheetCollection.MoveTo(), that is used to move a worksheet to the specified index. It takes the indexes (zero-based) of the source worksheet and destination worksheet as parameters. It is basically used to move a worksheet to another location in the same spreadsheet.
The following example shows how to move a worksheet to another location within the workbook.</description>
    </item>
    
    <item>
      <title>Zooming In or Out On the Worksheet in GridDesktop</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/zooming&#43;in&#43;or&#43;out&#43;on&#43;the&#43;worksheet&#43;in&#43;griddesktop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/zooming&#43;in&#43;or&#43;out&#43;on&#43;the&#43;worksheet&#43;in&#43;griddesktop/</guid>
      <description>Sometimes, when working with your data, you may want to enlarge the contents on the screen without actually changing the font size. For instance, you may have formatted your text so that it uses a small font. (This is often necessary to get all your information on a printout.) When working in the worksheet, however, the font is difficult to read because it is so small.
In Microsoft Excel, a zoom slider is available for zooming in and out of documents quickly and easily.</description>
    </item>
    
    <item>
      <title>Reading Data Validations in Excel file using Aspose.Cells.GridDesktop</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/reading&#43;data&#43;validations&#43;in&#43;excel&#43;file&#43;using&#43;aspose.cells.griddesktop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/reading&#43;data&#43;validations&#43;in&#43;excel&#43;file&#43;using&#43;aspose.cells.griddesktop/</guid>
      <description>Aspose.Cells.GridDesktop can read and apply Data Validations in your Excel file. Please load your Excel file in GridDesktop and all the Data Validations inside it will start working as they do in Microsoft Excel.
Reading Data Validations in Excel file using Aspose.Cells.GridDesktop
The following sample code imports the sample excel file which contains some Data Validations inside the GridDesktop.
\
After importing the file into GridDesktop when we try to change the value of cell A2 greater than 100 which pops up the Validation Error message box.</description>
    </item>
    
    <item>
      <title>Split Panes in GridDesktop Worksheet</title>
      <link>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/split&#43;panes&#43;in&#43;griddesktop&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cellsnet/developerguide/asposecellsgriddesktop/workingwithworksheet/split&#43;panes&#43;in&#43;griddesktop&#43;worksheet/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Split Panes in GridDesktop Worksheet 2.1 GridDesktop Before Split Panes
2.2 GridDesktop After Split Panes
 |     Possible Usage Scenarios     Microsoft Excel allows you to split panes using View &amp;gt; Split menu command. Aspose.Cells also provides this feature. Please use GridDesktop.DoSplit() and GridDesktop.UnDoSplit() methods to split and unsplit panes in GridDesktop worksheet.</description>
    </item>
    
  </channel>
</rss>