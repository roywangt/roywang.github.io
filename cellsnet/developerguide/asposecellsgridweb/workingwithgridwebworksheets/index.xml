<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Working with GridWeb Worksheets on Aspose.Cells Product Family</title>
    <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/</link>
    <description>Recent content in Working with GridWeb Worksheets on Aspose.Cells Product Family</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Access Worksheets</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/access&#43;worksheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/access&#43;worksheets/</guid>
      <description>This topic discusses accessing worksheets in the Aspose.Cells.GridWeb control. We&amp;rsquo;ll refer to them as &amp;lsquo;web worksheets&amp;rsquo; because of they belong to Aspose.Cells.GridWeb and are used in web applications.
   Contents Summary
1 Accessing a Worksheet 1.1 Using Sheet Index
1.2 Using Sheet Name
 |     Accessing a Worksheet     All worksheets contained in Aspose.Cells.GridWeb, are stored in the GridWeb control&amp;rsquo;s GridWorksheetCollection. There are two ways to access a worksheet: by its sheet index or by its sheet name.</description>
    </item>
    
    <item>
      <title>Add Worksheets</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/add&#43;worksheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/add&#43;worksheets/</guid>
      <description>Worksheets are an integral part of Aspose.Cells.GridWeb. All data is managed and stored in the form of worksheets. Aspose.Cells.GridWeb allows developers to add one or more worksheets to the Aspose.Cells.GridWeb control. This topic shows simple approaches to adding worksheets to Aspose.Cells.GridWeb.
   Contents Summary
1 Adding a Worksheet 1.1 Without Specifying Sheet Name
1.2 With Specified Sheet Name
 |     Adding a Worksheet     Without Specifying Sheet Name</description>
    </item>
    
    <item>
      <title>Remove Worksheets</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/remove&#43;worksheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/remove&#43;worksheets/</guid>
      <description>This topic provides information about how to remove worksheets from Microsoft Excel files using the Aspose.Cells.GridWeb API.It is possible to either remove a worksheet by specifying its sheet index or name.
   Contents Summary
1 Removing a Worksheet 1.1 Using Sheet Index
1.2 Using Sheet Name
 |     Removing a Worksheet     Using Sheet Index
The code below shows how to remove a worksheet by specifying its sheet index in the GridWorksheetCollection&amp;rsquo;s RemoveAt method.</description>
    </item>
    
    <item>
      <title>Rename Worksheets</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/rename&#43;worksheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/rename&#43;worksheets/</guid>
      <description>Renaming a worksheet can be very useful when working with many worksheets in Aspose.Cells.GridWeb and decide to change their names to make them more meaningful. For example, a worksheet containing an invoice can be renamed Invoice instead of Sheet1. This topic describes this simple but useful feature.
Renaming a Worksheet
All worksheets contain a Name property that allows developers to access or modify worksheets&amp;rsquo; names. To rename a worksheet:
 Access a worksheet from the GridWorksheetCollection.</description>
    </item>
    
    <item>
      <title>Copy a Worksheet</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/copy&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/copy&#43;a&#43;worksheet/</guid>
      <description>Add Worksheets describes how to add new worksheets to Aspose.Cells.GridWeb. It&amp;rsquo;s also possible to add a copy (or replica) of another worksheet to the Aspose.Cells.GridWeb control. This feature can be useful when identical or similar data in one worksheet is also required in another worksheet. When that&amp;rsquo;s the case, it&amp;rsquo;s easier to copy an existing worksheet and add it to Aspose.Cells.GridWeb as a new worksheet instead of creating it from scratch.</description>
    </item>
    
    <item>
      <title>Import DataView to GridWeb</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/import&#43;dataview&#43;to&#43;gridweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/import&#43;dataview&#43;to&#43;gridweb/</guid>
      <description>With the release of the Microsoft .NET Framework, a new way of storing data was introduced. Now DataSet, DataTable and DataView objects that store data in offline mode. These objects are very handy as data repositories. Using Aspose.Cells.GridWeb, it&amp;rsquo;s possible to import data from either DataTable or DataView objects into worksheets. Aspose.Cells.GridWeb only supports importing data from a DataView. object but a DataTable object can also be used indirectly. Let&amp;rsquo;s discuss this feature in detail.</description>
    </item>
    
    <item>
      <title>Export DataTable from GridWeb</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/export&#43;datatable&#43;from&#43;gridweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/export&#43;datatable&#43;from&#43;gridweb/</guid>
      <description>Import DataView to GridWeb talked about importing the contents of a DataView to the Aspose.Cells.GridWeb control. This topic discusses exporting the data in from the Aspose.Cells.GridWeb control to a DataTable.
   Contents Summary
1 Exporting Worksheet Data 1.1 To a Specific DataTable
1.2 To a New DataTable
 |     Exporting Worksheet Data     To a Specific DataTable
To export worksheet data to a specific DataTable object:</description>
    </item>
    
    <item>
      <title>Sort Worksheet Data</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/sort&#43;worksheet&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/sort&#43;worksheet&#43;data/</guid>
      <description>Sorting is a very valuable feature when it comes to data processing. Unsorted data is a pain for users when searching for specific information. Aspose.Cells.GridWeb supports powerful sorting features. This topic discusses sorting data using the Aspose.Cells.GridWeb API.
   Contents Summary
1 Sorting Data 1.1 From Top to Bottom
1.2 From Left to Right
 |     Sorting Data     Aspose.Cells.GridWeb allows developers to sort data horizontally and vertically so that developers can sort data from top to bottom or left to right.</description>
    </item>
    
    <item>
      <title>Search and Replace in GridWeb</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/search&#43;and&#43;replace&#43;in&#43;gridweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/search&#43;and&#43;replace&#43;in&#43;gridweb/</guid>
      <description>One of the fastest ways to make repetitive changes in a large spreadsheet is to use the find and replace feature. Find helps you locate a text string or data and replace substitutes it with a new value. Aspose.Cells.GridWeb provides this feature. It enables you to search for and replace with a specific text string or value in the worksheet client-side through a simple dialog. It even allows you to look for partial data.</description>
    </item>
    
    <item>
      <title>Manage Hyperlinks in Worksheet</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/manage&#43;hyperlinks&#43;in&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/manage&#43;hyperlinks&#43;in&#43;worksheet/</guid>
      <description>This topic discusses what types of hyperlinks are supported in Aspose.Cells.GridWeb and how to manage them programmatically. Hyperlinks can be used for either creating links to web URLs or to perform postback to a server.
   Contents Summary
1 Working with Hyperlinks 1.1 Types of Hyperlinks
1.2 Adding Hyperlinks 1.2.1 URL Hyperlinks 1.2.1.1 Text Hyperlinks
1.2.1.2 Image Hyperlinks
1.2.2 Cell Command Hyperlinks 1.2.2.1 Event Handling of Cell Command Hyperlinks</description>
    </item>
    
    <item>
      <title>Manage Comments in Worksheet</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/manage&#43;comments&#43;in&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/manage&#43;comments&#43;in&#43;worksheet/</guid>
      <description>This topic discusses adding, accessing and removing comments from worksheets. Comments are useful for adding notes or useful information for users who will work with the sheet. Developers have the flexibility to add comments to any cell of the worksheet.
   Contents Summary
1 Working with Comments 1.1 Adding Comments
1.2 Accessing Comments
1.3 Removing Comments
 |     Working with Comments     Adding Comments</description>
    </item>
    
    <item>
      <title>Add and Reference Named Ranges</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/add&#43;and&#43;reference&#43;named&#43;ranges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/add&#43;and&#43;reference&#43;named&#43;ranges/</guid>
      <description>Normally, column and row labels are used to uniquely refer to cells. But you can create descriptive names to represent cells, ranges of cells, formulas, or constant values. The word Name may refer to a string of characters that represents a cell, range of cells, formula, or constant value. For example, use easy-to-understand names, such as Products, to refer to hard to understand ranges, such as Sales!C20:C30. Labels can be used in formulas that refer to data on the same worksheet; if you want to represent a range on another worksheet, you may use a name.</description>
    </item>
    
    <item>
      <title>Binding Worksheet to a Customized Collection Object using GridWeb</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/binding&#43;worksheet&#43;to&#43;a&#43;customized&#43;collection&#43;object&#43;using&#43;gridweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/binding&#43;worksheet&#43;to&#43;a&#43;customized&#43;collection&#43;object&#43;using&#43;gridweb/</guid>
      <description>The Microsoft .NET Framework offers many collection classes but sometimes they don&amp;rsquo;t fulfill the development requirements so developers create custom collections, and may require to bind such custom collections with Aspose.Cells.GridWeb.
Binding a Worksheet with a Custom Collection
To illustrate this feature, this article goes through how to create a sample application, step by step. First, create a custom collection and then use that collection to binding with a worksheet.</description>
    </item>
    
    <item>
      <title>Validate entire worksheet instead of only the updated cells</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/validate&#43;entire&#43;worksheet&#43;instead&#43;of&#43;only&#43;the&#43;updated&#43;cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/validate&#43;entire&#43;worksheet&#43;instead&#43;of&#43;only&#43;the&#43;updated&#43;cells/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Validate entire worksheet instead of only the updated cells
 |     Possible Usage Scenarios     By default, GridWeb validates only the updated cells and does not validate the entire worksheet. However, if you want to validate entire worksheet on client side before GridWeb posts request to server, then you should set the needValidateall variable inside the acwmain.</description>
    </item>
    
    <item>
      <title>Change the decimal separator from Numeric keypad</title>
      <link>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/change&#43;the&#43;decimal&#43;separator&#43;from&#43;numeric&#43;keypad/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellsnet/developerguide/asposecellsgridweb/workingwithgridwebworksheets/change&#43;the&#43;decimal&#43;separator&#43;from&#43;numeric&#43;keypad/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Change the decimal separator from Numeric keypad
3 Sample Code
 |     Possible Usage Scenarios     By default, Aspose.Cells.GridWeb displays numeric data accordingly based on the locale/regional settings on the machine. You can change the decimal separator from Numeric keypad programmatically using Aspose.Cells.GridWeb API. So, when a file is imported into GridWeb matrix or you input some numeric data (from the numeric keypad) into a new worksheet cell, it should have your desired decimal separator set visually.</description>
    </item>
    
  </channel>
</rss>