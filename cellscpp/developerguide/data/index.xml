<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data on Aspose.Cells Product Family</title>
    <link>http://192.168.1.240:1313/cellscpp/developerguide/data/</link>
    <description>Recent content in Data on Aspose.Cells Product Family</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://192.168.1.240:1313/cellscpp/developerguide/data/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Accessing Cells of a Worksheet</title>
      <link>http://192.168.1.240:1313/cellscpp/developerguide/data/accessing&#43;cells&#43;of&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellscpp/developerguide/data/accessing&#43;cells&#43;of&#43;a&#43;worksheet/</guid>
      <description>We know that all worksheets may contain data that is basically stored in cells (with which a worksheet is made up of). A cell is a basic part of a worksheet that is used to construct the whole worksheet as a sequence of rows and columns. Before we try to access data from a worksheet, we would need to get access to its cells. So, in this topic, we will discuss some basic approaches to access worksheet cells at runtime using Aspose.</description>
    </item>
    
    <item>
      <title>Add and Retrieve Data</title>
      <link>http://192.168.1.240:1313/cellscpp/developerguide/data/add&#43;and&#43;retrieve&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellscpp/developerguide/data/add&#43;and&#43;retrieve&#43;data/</guid>
      <description>In Accessing Cells of a Worksheet, we discussed basic approaches for accessing cells in a worksheet. This article uses one of those approaches to add different types of data to cells.
   Contents Summary
1 Adding Data to Cells 1.1 Improving Efficiency
2 Retrieving Data from Cells
 |     Adding Data to Cells     Aspose.Cells provides a class IWorkbook that represents a Microsoft Excel file.</description>
    </item>
    
    <item>
      <title>Add Hyperlinks to the Cells</title>
      <link>http://192.168.1.240:1313/cellscpp/developerguide/data/add&#43;hyperlinks&#43;to&#43;the&#43;cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellscpp/developerguide/data/add&#43;hyperlinks&#43;to&#43;the&#43;cells/</guid>
      <description>Contents Summary
1 Add Hyperlinks to the Cells
2 Sample Code
 ||      Add Hyperlinks to the Cells      The following sample code shows how to add a hyperlink inside the cell of the worksheet. You can also add a hyperlink in a range of cells in a similar way. Please check the output excel file generated with this code and the following screenshot showing the output excel file in Microsoft Excel.</description>
    </item>
    
    <item>
      <title>Apply Conditional Formatting in Worksheet</title>
      <link>http://192.168.1.240:1313/cellscpp/developerguide/data/apply&#43;conditional&#43;formatting&#43;in&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellscpp/developerguide/data/apply&#43;conditional&#43;formatting&#43;in&#43;worksheet/</guid>
      <description>Contents Summary
1 Possible Usage Scenario
2 Apply Conditional Formatting in Worksheet
3 Sample Code
 ||      Possible Usage Scenario      Aspose.Cells allows you to add all sorts of Conditional Formatting e.g. Formula, Above Average, Color Scale, Data Bar, Icon Set, Top10, etc. It provides the IFormatCondition class which has all the necessary methods to apply conditional formatting of your choice.</description>
    </item>
    
    <item>
      <title>Cells Formatting</title>
      <link>http://192.168.1.240:1313/cellscpp/developerguide/data/cells&#43;formatting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellscpp/developerguide/data/cells&#43;formatting/</guid>
      <description>Contents Summary
1 Format Cell or Range of Cells
2 Sample Code
 ||      Format Cell or Range of Cells      If you want to format cell or range of cells, then Aspose.Cells provides the IStyle class. You can accomplish all the formatting of the cell or range of cells using this class. Some of the things relating to formatting that can be accomplished with IStyle class are following</description>
    </item>
    
    <item>
      <title>Create Named Range in a Workbook</title>
      <link>http://192.168.1.240:1313/cellscpp/developerguide/data/create&#43;named&#43;range&#43;in&#43;a&#43;workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellscpp/developerguide/data/create&#43;named&#43;range&#43;in&#43;a&#43;workbook/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Create Named Range in a Workbook
3 Sample Code
4 Console Output
 ||      Possible Usage Scenarios      Aspose.Cells supports the creation of a named range. There are different ways to create a named range. One of the simplest ways is to first create IRange object and then set its name using IRange.</description>
    </item>
    
    <item>
      <title>Creating Subtotals</title>
      <link>http://192.168.1.240:1313/cellscpp/developerguide/data/creating&#43;subtotals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellscpp/developerguide/data/creating&#43;subtotals/</guid>
      <description>Contents Summary
1 Creating Subtotals
2 Sample Code
 ||      Creating Subtotals      The following sample code shows how to create subtotals using Aspose.Cells. The code loads the sample excel file and creates subtotals on the cell range B13:C19 and saves the output excel file. The following screenshot shows how the sample and output excel file looks after the execution of the code.</description>
    </item>
    
    <item>
      <title>Find or Search Data</title>
      <link>http://192.168.1.240:1313/cellscpp/developerguide/data/find&#43;or&#43;search&#43;data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellscpp/developerguide/data/find&#43;or&#43;search&#43;data/</guid>
      <description>Contents Summary
1 Find or Search Data
2 Sample Code
3 Console Output
 ||      Find or Search Data      You can use Aspose.Cells to find or search data in various ways using the following method. These methods find the data as per their names.
 FindNumber FindFormula FindFormulaContains FindString FindStringContains FindStringStartsWith FindStringEndsWith  The following sample code illustrates the usage of the above methods using the sample excel file as shown in this screenshot.</description>
    </item>
    
    <item>
      <title>Manipulate Named Range in a Workbook</title>
      <link>http://192.168.1.240:1313/cellscpp/developerguide/data/manipulate&#43;named&#43;range&#43;in&#43;a&#43;workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellscpp/developerguide/data/manipulate&#43;named&#43;range&#43;in&#43;a&#43;workbook/</guid>
      <description>Contents Summary
1 Possible Usage Scenarios
2 Manipulate Named Range in a Workbook
3 Sample Code
4 Console Output
 ||      Possible Usage Scenarios      Aspose.Cells supports the manipulation of existing named ranges. All the existing named ranges can be accessed from IWorkbook.GetIWorksheets().GetINames() collection. Once, you access the named range, you can change its various methods e.g. GetFullText and GetRefersTo.</description>
    </item>
    
    <item>
      <title>Precedents and Dependents</title>
      <link>http://192.168.1.240:1313/cellscpp/developerguide/data/precedents&#43;and&#43;dependents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://192.168.1.240:1313/cellscpp/developerguide/data/precedents&#43;and&#43;dependents/</guid>
      <description>Complex financial worksheets, especially ones developed in collaboration, can hide the most embarrassing errors. Checking formulas for accuracy and finding the source of an error can be difficult when the formula uses precedent cells and dependent cells.
   Contents Summary
1 Introduction
2 Tracing Precedent and Dependent Cells: Microsoft Excel
3 Tracing Precedent and Dependent Cells: Aspose.Cells 3.1 Tracing Precedents
3.2 Tracing Dependents
 |     Introduction      Precedent cells are cells that are referred to by a formula in another cell.</description>
    </item>
    
  </channel>
</rss>