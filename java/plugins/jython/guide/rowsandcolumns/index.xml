<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – Working With Rows And Columns in Jython</title>
    <link>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/</link>
    <description>Recent content in Working With Rows And Columns in Jython on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Java: Adjusting Row Height and Column Width in Jython</title>
      <link>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/adjusting&#43;row&#43;height&#43;and&#43;column&#43;width&#43;in&#43;jython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/adjusting&#43;row&#43;height&#43;and&#43;column&#43;width&#43;in&#43;jython/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--adjusting-row-height-and-column-width-in-jython&#34;&gt;Aspose.Cells for Java : Adjusting Row Height and Column Width in Jython&lt;/h1&gt;
&lt;h2 id=&#34;asposecells---adjusting-row-height-and-column-width&#34;&gt;Aspose.Cells - Adjusting Row Height and Column Width&lt;/h2&gt;
&lt;p&gt;To append documents using &lt;strong&gt;Aspose.Cells Java for Jython&lt;/strong&gt;. Here you can see example code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Jython Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;from aspose-cells import Settingsfrom com.aspose.cells import Workbookclass RowsAndColumns:    def __init__(self):                dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns&amp;rsquo;                # Setting the Row Height        self.set_row_height()        # Setting the Width of a Column        self.set_column_width()        def set_row_height(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        cells = worksheet.getCells()        # Setting the height of the second row to 13        cells.setRowHeight(1, 13)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Set Row Height.xls&amp;rdquo;)        print &amp;ldquo;Set Row Height Successfully.&amp;rdquo;         def set_column_width(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        cells = worksheet.getCells()        # Setting the width of the second column to 17.5        cells.setColumnWidth(1, 17.5)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Set Column Width.xls&amp;rdquo;)        print &amp;ldquo;Set Column Width Successfully.&amp;rdquo; if __name__ == &amp;lsquo;__main__&#39;:            RowsAndColumns()&lt;/p&gt;
&lt;h2 id=&#34;download-running-code&#34;&gt;Download Running Code&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Append Documents (Aspose.Cells)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://asposecellsjavajython.codeplex.com/SourceControl/latest#asposecells/WorkingWithRowsAndColumns/RowsAndColumns.py&#34;&gt;CodePlex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-cells/Aspose.Cells-for-Java/blob/master/Plugins/Aspose-Cells-Java-for-Jython/asposecells/WorkingWithRowsAndColumns/RowsAndColumns.py&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Autofit Rows and Columns in Jython</title>
      <link>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/autofit&#43;rows&#43;and&#43;columns&#43;in&#43;jython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/autofit&#43;rows&#43;and&#43;columns&#43;in&#43;jython/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--autofit-rows-and-columns-in-jython&#34;&gt;Aspose.Cells for Java : Autofit Rows and Columns in Jython&lt;/h1&gt;
&lt;h2 id=&#34;asposecells---autofit-rows-and-columns&#34;&gt;Aspose.Cells - Autofit Rows and Columns&lt;/h2&gt;
&lt;p&gt;To append documents using &lt;strong&gt;Aspose.Cells Java for Jython&lt;/strong&gt;. Here you can see example code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Jython Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;from aspose-cells import Settingsfrom com.aspose.cells import Workbookclass RowsAndColumns:    def __init__(self):                dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns&amp;rsquo;              # Auto Fit Row        self.autofit_row()        # Auto Fit Column        self.autofit_column()         def autofit_row(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;        # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        # Auto-fitting the 3rd row of the worksheet        worksheet.autoFitRow(2)        # Auto-fitting the 3rd row of the worksheet based on the contents in a range of        # cells (from 1st to 9th column) within the row        #worksheet.autoFitRow(2,0,8) # Uncomment this line if you to do AutoFit Row in a Range of Cells. Also, comment line 288.        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Autofit Row.xls&amp;rdquo;)        print &amp;ldquo;Autofit Row Successfully.&amp;rdquo;     def autofit_column(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;        # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        # Auto-fitting the 4th column of the worksheet        worksheet.autoFitColumn(3)        # Auto-fitting the 4th column of the worksheet based on the contents in a range of        # cells (from 1st to 9th row) within the column        #worksheet.autoFitColumn(3,0,8) #Uncomment this line if you to do AutoFit Column in a Range of Cells. Also, comment line 310.        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Autofit Column.xls&amp;rdquo;)        print &amp;ldquo;Autofit Column Successfully.&amp;rdquo;    if __name__ == &amp;lsquo;__main__&#39;:            RowsAndColumns()&lt;/p&gt;
&lt;h2 id=&#34;download-running-code&#34;&gt;Download Running Code&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Append Documents (Aspose.Cells)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://asposecellsjavajython.codeplex.com/SourceControl/latest#asposecells/WorkingWithRowsAndColumns/RowsAndColumns.py&#34;&gt;CodePlex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-cells/Aspose.Cells-for-Java/blob/master/Plugins/Aspose-Cells-Java-for-Jython/asposecells/WorkingWithRowsAndColumns/RowsAndColumns.py&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Copying Rows and Columns in Jython</title>
      <link>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/copying&#43;rows&#43;and&#43;columns&#43;in&#43;jython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/copying&#43;rows&#43;and&#43;columns&#43;in&#43;jython/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--copying-rows-and-columns-in-jython&#34;&gt;Aspose.Cells for Java : Copying Rows and Columns in Jython&lt;/h1&gt;
&lt;h2 id=&#34;asposecells---copying-rows-and-columns&#34;&gt;Aspose.Cells - Copying Rows and Columns&lt;/h2&gt;
&lt;p&gt;To append documents using &lt;strong&gt;Aspose.Cells Java for Jython&lt;/strong&gt;. Here you can see example code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Jython Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;from aspose-cells import Settingsfrom com.aspose.cells import Workbookclass RowsAndColumns:    def __init__(self):                dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns&amp;rsquo;              # Copying Rows        self.copy_rows()        # Copying Columns        self.copy_columns()            def copy_rows(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        # Copy the second row with data, formattings, images and drawing objects        # to the 12th row in the worksheet.        worksheet.getCells().copyRow(worksheet.getCells(),1,11)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Copy Rows.xls&amp;rdquo;)        print &amp;ldquo;Copy Rows Successfully.&amp;rdquo;         def copy_columns(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook()        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        # Put some data into header rows (A1:A4)        i = 0        while i &amp;lt; 5:            worksheet.getCells().get(i, 0).setValue(&amp;ldquo;Header Row #i&amp;rdquo;)                            # Put some detail data (A5:A999)        i = 5        while i &amp;lt; 1000:            worksheet.getCells().get(i, 0).setValue(&amp;ldquo;Detail Row #i&amp;rdquo;)                # Create another Workbook.        workbook1 = Workbook()        # Get the first worksheet in the book.        worksheet1 = workbook1.getWorksheets().get(0)        # Copy the first column from the first worksheet of the first workbook into        # the first worksheet of the second workbook.        worksheet1.getCells().copyColumn(worksheet.getCells(),0,2)        # Autofit the column.        worksheet1.autoFitColumn(2)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Copy Columns.xls&amp;rdquo;)        print &amp;ldquo;Copy Columns Successfully.&amp;rdquo;     if __name__ == &amp;lsquo;__main__&#39;:            RowsAndColumns()&lt;/p&gt;
&lt;h2 id=&#34;download-running-code&#34;&gt;Download Running Code&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Append Documents (Aspose.Cells)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://asposecellsjavajython.codeplex.com/SourceControl/latest#asposecells/WorkingWithRowsAndColumns/RowsAndColumns.py&#34;&gt;CodePlex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-cells/Aspose.Cells-for-Java/blob/master/Plugins/Aspose-Cells-Java-for-Jython/asposecells/WorkingWithRowsAndColumns/RowsAndColumns.py&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Grouping and Ungrouping Rows and Columns in Jython</title>
      <link>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/grouping&#43;and&#43;ungrouping&#43;rows&#43;and&#43;columns&#43;in&#43;jython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/grouping&#43;and&#43;ungrouping&#43;rows&#43;and&#43;columns&#43;in&#43;jython/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--grouping-and-ungrouping-rows-and-columns-in-jython&#34;&gt;Aspose.Cells for Java : Grouping and Ungrouping Rows and Columns in Jython&lt;/h1&gt;
&lt;h2 id=&#34;asposecells---grouping-and-ungrouping-rows-and-columns&#34;&gt;Aspose.Cells - Grouping and Ungrouping Rows and Columns&lt;/h2&gt;
&lt;p&gt;To append documents using &lt;strong&gt;Aspose.Cells Java for Jython&lt;/strong&gt;. Here you can see example code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Jython Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;from aspose-cells import Settingsfrom com.aspose.cells import Workbookclass RowsAndColumns:    def __init__(self):                dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns&amp;rsquo;                # Grouping Rows &amp;amp; Columns        self.group_rows_columns()        # Ungrouping Rows &amp;amp; Columns        self.ungroup_rows_columns()                def group_rows_columns(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        cells = worksheet.getCells()        # Grouping first six rows (from 0 to 5) and making them hidden by passing true        cells.groupRows(0,5,True)        # Grouping first three columns (from 0 to 2) and making them hidden by passing true        cells.groupColumns(0,2,True)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Group Rows And Columns.xls&amp;rdquo;)        print &amp;ldquo;Group Rows And Columns Successfully.&amp;rdquo;         def ungroup_rows_columns(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Group Rows And Columns.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        cells = worksheet.getCells()        # Ungrouping first six rows (from 0 to 5)        cells.ungroupRows(0,5)        # Ungrouping first three columns (from 0 to 2)        cells.ungroupColumns(0,2)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Ungroup Rows And Columns.xls&amp;rdquo;)        print &amp;ldquo;Ungroup Rows And Columns Successfully.&amp;rdquo;        if __name__ == &amp;lsquo;__main__&#39;:            RowsAndColumns()&lt;/p&gt;
&lt;h2 id=&#34;download-running-code&#34;&gt;Download Running Code&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Append Documents (Aspose.Cells)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://asposecellsjavajython.codeplex.com/SourceControl/latest#asposecells/WorkingWithRowsAndColumns/RowsAndColumns.py&#34;&gt;CodePlex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-cells/Aspose.Cells-for-Java/blob/master/Plugins/Aspose-Cells-Java-for-Jython/asposecells/WorkingWithRowsAndColumns/RowsAndColumns.py&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Hiding and Showing Rows and Columns in Jython</title>
      <link>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/hiding&#43;and&#43;showing&#43;rows&#43;and&#43;columns&#43;in&#43;jython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/hiding&#43;and&#43;showing&#43;rows&#43;and&#43;columns&#43;in&#43;jython/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--hiding-and-showing-rows-and-columns-in-jython&#34;&gt;Aspose.Cells for Java : Hiding and Showing Rows and Columns in Jython&lt;/h1&gt;
&lt;h2 id=&#34;asposecells---hiding-and-showing-rows-and-columns&#34;&gt;Aspose.Cells - Hiding and Showing Rows and Columns&lt;/h2&gt;
&lt;p&gt;To append documents using &lt;strong&gt;Aspose.Cells Java for Jython&lt;/strong&gt;. Here you can see example code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Jython Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;from aspose-cells import Settingsfrom com.aspose.cells import Workbookclass RowsAndColumns:    def __init__(self):                dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns&amp;rsquo;                # Hiding Rows and Columns        self.hide_rows_columns()        # Showing Rows and Columns        self.unhide_rows_columns()                def hide_rows_columns(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        cells = worksheet.getCells()        # Hiding the 3rd row of the worksheet        cells.hideRow(2)        # Hiding the 2nd column of the worksheet        cells.hideColumn(1)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Hide Rows And Columns.xls&amp;rdquo;)        print &amp;ldquo;Hide Rows And Columns Successfully.&amp;rdquo;         def unhide_rows_columns(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        cells = worksheet.getCells()        # Unhiding the 3rd row and setting its height to 13.5        cells.unhideRow(2,13.5)        # Unhiding the 2nd column and setting its width to 8.5        cells.unhideColumn(1,8.5)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Unhide Rows And Columns.xls&amp;rdquo;)        print &amp;ldquo;Unhide Rows And Columns Successfully.&amp;rdquo; if __name__ == &amp;lsquo;__main__&#39;:            RowsAndColumns()&lt;/p&gt;
&lt;h2 id=&#34;download-running-code&#34;&gt;Download Running Code&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Append Documents (Aspose.Cells)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://asposecellsjavajython.codeplex.com/SourceControl/latest#asposecells/WorkingWithRowsAndColumns/RowsAndColumns.py&#34;&gt;CodePlex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-cells/Aspose.Cells-for-Java/blob/master/Plugins/Aspose-Cells-Java-for-Jython/asposecells/WorkingWithRowsAndColumns/RowsAndColumns.py&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Inserting and Deleting Rows and Columns in Jython</title>
      <link>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/inserting&#43;and&#43;deleting&#43;rows&#43;and&#43;columns&#43;in&#43;jython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/java/plugins/jython/guide/rowsandcolumns/inserting&#43;and&#43;deleting&#43;rows&#43;and&#43;columns&#43;in&#43;jython/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-java--inserting-and-deleting-rows-and-columns-in-jython&#34;&gt;Aspose.Cells for Java : Inserting and Deleting Rows and Columns in Jython&lt;/h1&gt;
&lt;h2 id=&#34;asposecells---inserting-and-deleting-rows-and-columns&#34;&gt;Aspose.Cells - Inserting and Deleting Rows and Columns&lt;/h2&gt;
&lt;p&gt;To append documents using &lt;strong&gt;Aspose.Cells Java for Jython&lt;/strong&gt;. Here you can see example code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Jython Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;from aspose-cells import Settingsfrom com.aspose.cells import Workbookclass RowsAndColumns:    def __init__(self):                dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns&amp;rsquo;                        # Inserting a Row        self.insert_row()        # Inserting Multiple Rows        self.insert_multiple_rows()        # Deleting a Row        self.delete_row()        # Deleting Multiple Rows        self.delete_multiple_rows()        # Inseting one or Multiple Columns        self.insert_column()        # Deleting a Column        self.delete_column()        # Grouping Rows &amp;amp; Columns        self.group_rows_columns()        # Ungrouping Rows &amp;amp; Columns        self.ungroup_rows_columns()            def insert_row(dataDir):            dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;                # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;ldquo;Book1.xls&amp;rdquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        # Inserting a row into the worksheet at 3rd position        worksheet.getCells().insertRows(2,1)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Insert Row.xls&amp;rdquo;)        print &amp;ldquo;Insert Row Successfully.&amp;rdquo;         def insert_multiple_rows(dataDir):            dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;                # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        # Inserting a row into the worksheet at 3rd position        worksheet.getCells().insertRows(2,10)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Insert Multiple Rows.xls&amp;rdquo;)        print &amp;ldquo;Insert Multiple Rows Successfully.&amp;rdquo;         def delete_row(dataDir):                dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        # Deleting 3rd row from the worksheet        worksheet.getCells().deleteRows(2,1,True)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Delete Row.xls&amp;rdquo;)        print &amp;ldquo;Delete Row Successfully.&amp;rdquo;         def delete_multiple_rows(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        # Deleting 10 rows from the worksheet starting from 3rd row        worksheet.getCells().deleteRows(2,10,True)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Delete Multiple Rows.xls&amp;rdquo;)        print &amp;ldquo;Delete Multiple Rows Successfully.&amp;rdquo;         def insert_column(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        # Inserting a column into the worksheet at 2nd position        worksheet.getCells().insertColumns(1,1)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Insert Column.xls&amp;rdquo;)        print &amp;ldquo;Insert Column Successfully.&amp;rdquo;         def delete_column(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        # Deleting a column from the worksheet at 2nd position        worksheet.getCells().deleteColumns(1,1,True)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Delete Column.xls&amp;rdquo;)        print &amp;ldquo;Delete Column Successfully.&amp;rdquo;         def group_rows_columns(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Book1.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        cells = worksheet.getCells()        # Grouping first six rows (from 0 to 5) and making them hidden by passing true        cells.groupRows(0,5,True)        # Grouping first three columns (from 0 to 2) and making them hidden by passing true        cells.groupColumns(0,2,True)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Group Rows And Columns.xls&amp;rdquo;)        print &amp;ldquo;Group Rows And Columns Successfully.&amp;rdquo;         def ungroup_rows_columns(dataDir):        dataDir = Settings.dataDir + &amp;lsquo;WorkingWithRowsAndColumns/RowsAndColumns/&amp;rsquo;            # Instantiating a Workbook object by excel file path        workbook = Workbook(dataDir + &amp;lsquo;Group Rows And Columns.xls&amp;rsquo;)        # Accessing the first worksheet in the Excel file        worksheet = workbook.getWorksheets().get(0)        cells = worksheet.getCells()        # Ungrouping first six rows (from 0 to 5)        cells.ungroupRows(0,5)        # Ungrouping first three columns (from 0 to 2)        cells.ungroupColumns(0,2)        # Saving the modified Excel file in default (that is Excel 2003) format        workbook.save(dataDir + &amp;ldquo;Ungroup Rows And Columns.xls&amp;rdquo;)        print &amp;ldquo;Ungroup Rows And Columns Successfully.&amp;rdquo;        if __name__ == &amp;lsquo;__main__&#39;:            RowsAndColumns()&lt;/p&gt;
&lt;h2 id=&#34;download-running-code&#34;&gt;Download Running Code&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Append Documents (Aspose.Cells)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://asposecellsjavajython.codeplex.com/SourceControl/latest#asposecells/WorkingWithRowsAndColumns/RowsAndColumns.py&#34;&gt;CodePlex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-cells/Aspose.Cells-for-Java/blob/master/Plugins/Aspose-Cells-Java-for-Jython/asposecells/WorkingWithRowsAndColumns/RowsAndColumns.py&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
