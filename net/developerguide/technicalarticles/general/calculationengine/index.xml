<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – Working with Calculation Engine</title>
    <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/</link>
    <description>Recent content in Working with Calculation Engine on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: Setting Shared Formula</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/setting&#43;shared&#43;formula/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/setting&#43;shared&#43;formula/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--setting-shared-formula&#34;&gt;Aspose.Cells for .NET : Setting Shared Formula&lt;/h1&gt;
&lt;p&gt;If you want to add a function in worksheet which will do some calculations. This article explains how to achieve this task using Aspose.Cells.&lt;/p&gt;
&lt;h2 id=&#34;setting-shared-formula-using-asposecells&#34;&gt;Setting Shared Formula using Aspose.Cells&lt;/h2&gt;
&lt;p&gt;Suppose you have a worksheet filled with data in the format that looks like the following sample worksheet.&lt;/p&gt;

&lt;div class=&#34;table table-striped&#34; role=&#34;alert&#34;&gt;
    &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Input file with one column or data&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5017612/5112460.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;p&gt;You want to add a function in B2 that will calculate the sales tax for the first row of data. The tax is &lt;strong&gt;9%&lt;/strong&gt;. The formula that calculates the sales tax is: &lt;strong&gt;&amp;ldquo;=A2*0.09&amp;rdquo;&lt;/strong&gt;. This article explains how to apply this formula with Aspose.Cells.&lt;/p&gt;
&lt;p&gt;Aspose.Cells lets you specify a formula using the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/properties/formula&#34;&gt;Cell.Formula&lt;/a&gt; property. There are two options for adding formulas to the other cells (B3, B4, B5, and so on) in the column.&lt;/p&gt;
&lt;p&gt;Either do what you did for the first cell, effectively setting the formula for each cell, updating the cell reference accordingly (A3*0.09, A4*0.09, A5*0.09 and so on). This requires the cell references for each row to be updated. It also requires Aspose.Cells to parse each formula individually, which can be time-consuming for large spreadsheets and complex formulas. It also adds extra lines of codes although loops can cut them down somewhat.&lt;/p&gt;
&lt;p&gt;Another approach is to use a &lt;strong&gt;shared formula&lt;/strong&gt;. With a shared formula, the formulas are automatically updated for the cell references in each row so that the tax would be calculated properly. The &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/cell/methods/setsharedformula/index&#34;&gt;Cell.SetSharedFormula&lt;/a&gt; method is more efficient than the first method.&lt;/p&gt;
&lt;p&gt;The following example demonstrates how to use it.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Set External Links in Formulas</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/set&#43;external&#43;links&#43;in&#43;formulas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/set&#43;external&#43;links&#43;in&#43;formulas/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--set-external-links-in-formulas&#34;&gt;Aspose.Cells for .NET : Set External Links in Formulas&lt;/h1&gt;
&lt;p&gt;Sometimes, it is necessary to include links to external files in formulas, for example, to evaluate a cell or range value against them. Aspose.Cells provides this feature and this document explains how to use it.&lt;/p&gt;
&lt;p&gt;The sample code below shows how to include external files in formulas.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Using ICustomFunction Feature</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/using&#43;icustomfunction&#43;feature/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/using&#43;icustomfunction&#43;feature/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--using-icustomfunction-feature&#34;&gt;Aspose.Cells for .NET : Using ICustomFunction Feature&lt;/h1&gt;
&lt;p&gt;This article provides a detailed understanding of how to use the &lt;code&gt;ICustomFunction&lt;/code&gt; feature to implement custom functions with Aspose.Cells APIs.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ICustomFunction&lt;/code&gt; interface allows to add custom formula calculation functions to extend the Aspose.Cells&amp;rsquo; core calculation engine in order to meet certain requirements. This feature is useful to define custom (user defined) functions in a template file or in code where the custom function can be implemented and evaluated using Aspose.Cells APIs like any other default Microsoft Excel function.&lt;/p&gt;
&lt;h2 id=&#34;creating-and-evaluating-a-user-defined-function&#34;&gt;Creating and Evaluating a User-defined Function&lt;/h2&gt;
&lt;p&gt;This article demonstrates the implementation of &lt;code&gt;ICustomFunction&lt;/code&gt; interface to write a custom function and use it in the spreadsheet to get the results. We will define a custom function by name &lt;strong&gt;MyFunc&lt;/strong&gt; which will accepts 2 parameters with following details.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1st parameter refers to a single cell&lt;/li&gt;
&lt;li&gt;2nd parameter refers to a range of cells&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The custom function will add all the values from the cell range specified as 2nd parameter and divide the result with value in the 1st parameter.&lt;/p&gt;
&lt;p&gt;Here is how we have implemented the &lt;code&gt;CalculateCustomFunction&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Here is how to use the newly defined function in a spreadsheet&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;The Aspose.Cells APIs just put the &lt;code&gt;ReferredArea&lt;/code&gt; object into the &amp;ldquo;paramsList&amp;rdquo; when the corresponding parameter is a reference or its calculated result is reference. If you need the reference itself then you can use the &lt;code&gt;ReferredArea&lt;/code&gt; directly. If you need to get value of a single cell from the reference corresponding with the formula&amp;rsquo;s position, you can use &lt;code&gt;ReferredArea.GetValue(rowOffset, int colOffset)&lt;/code&gt; method. If you need cell values array for the whole area then you can use &lt;code&gt;ReferredArea.GetValues&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;As the Aspose.Cells APIs give the &lt;code&gt;ReferredArea&lt;/code&gt; in &amp;ldquo;paramsList&amp;rdquo;, the &lt;code&gt;ReferredAreaCollection&lt;/code&gt; in &amp;ldquo;contextObjects&amp;rdquo; will not be needed anymore (in old versions it was not able to give one-to-one map to the parameters of the custom function always) therefore it has been removed from the &amp;ldquo;contextObjects&amp;rdquo;.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_5648c2568a&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_5648c2568a&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;object&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CalculateCustomFunction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;functionName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ArrayList&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;paramsList&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ArrayList&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contextObjects&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;object&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;o&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;paramsList&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ReferredArea&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//fetch data from reference
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;ReferredArea&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ra&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReferredArea&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ra&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IsArea&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;o&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ra&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetValues&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;o&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ra&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
    <item>
      <title>Net: Calculating IFNA function using Aspose.Cells</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/calculating&#43;ifna&#43;function&#43;using&#43;aspose.cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/calculating&#43;ifna&#43;function&#43;using&#43;aspose.cells/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--calculating-ifna-function-using-asposecells&#34;&gt;Aspose.Cells for .NET : Calculating IFNA function using Aspose.Cells&lt;/h1&gt;
&lt;p&gt;Aspose.Cells supports the calculation of IFNA Excel function. IFNA function returns the value you specify if the formula returns the #N/A error value; otherwise returns the result of the formula.&lt;/p&gt;
&lt;h2 id=&#34;calculating-ifna-function-using-asposecells&#34;&gt;Calculating IFNA function using Aspose.Cells&lt;/h2&gt;
&lt;p&gt;The following sample code illustrates the calculation of IFNA function by Aspose.Cells.&lt;/p&gt;
&lt;h2 id=&#34;console-output&#34;&gt;Console Output&lt;/h2&gt;
&lt;p&gt;Here is the console output of the above sample code.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_8267bbab07&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_8267bbab07&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;Not&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;found&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Orange&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
    <item>
      <title>Net: Returning a Range of Values using ICustomFunction</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/returning&#43;a&#43;range&#43;of&#43;values&#43;using&#43;icustomfunction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/returning&#43;a&#43;range&#43;of&#43;values&#43;using&#43;icustomfunction/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--returning-a-range-of-values-using-icustomfunction&#34;&gt;Aspose.Cells for .NET : Returning a Range of Values using ICustomFunction&lt;/h1&gt;
&lt;p&gt;Aspose.Cells provides &lt;code&gt;ICustomFunction&lt;/code&gt; interface which is used to implement user defined or custom functions that are not supported by Microsoft Excel as built-in functions.&lt;/p&gt;
&lt;p&gt;Mostly when you implement &lt;code&gt;ICustomFunction&lt;/code&gt; interface method, you need to return a single cell value. But sometimes, you need to return a range of values. This article will explain how to return range of values from &lt;code&gt;ICustomFunction&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following code implements &lt;code&gt;ICustomFunction&lt;/code&gt; and returns the range of values via its method. Please check the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5017295/5112352.xlsx&#34;&gt;output excel file&lt;/a&gt; and &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5017295/5112353.pdf&#34;&gt;pdf&lt;/a&gt; generated with the code for your reference.&lt;/p&gt;
&lt;p&gt;Create a class with function &lt;code&gt;CalculateCustomFunction&lt;/code&gt;. This class implements &lt;code&gt;ICustomFunction&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now use above function into your program&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Using FormulaText function in Aspose.Cells</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/using&#43;formulatext&#43;function&#43;in&#43;aspose.cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/using&#43;formulatext&#43;function&#43;in&#43;aspose.cells/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--using-formulatext-function-in-asposecells&#34;&gt;Aspose.Cells for .NET : Using FormulaText function in Aspose.Cells&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;FormulaText&lt;/code&gt; is an Excel 2013 and later function. It is not supported by previous versions like Excel 2010 or 2007 etc. As its name suggests, it prints the text of the formula which is present in a given cell. This article will show you how to make use of this function using Aspose.Cells.&lt;/p&gt;
&lt;p&gt;The following sample code shows the usage of &lt;code&gt;FormulaText&lt;/code&gt; with Aspose.Cells. The code first writes a formula in cell A1 and then prints the text of the formula using &lt;code&gt;FormulaText&lt;/code&gt; in cell A2.&lt;/p&gt;
&lt;h2 id=&#34;console-output&#34;&gt;Console Output&lt;/h2&gt;
&lt;p&gt;Here is the console output of the above sample code.&lt;/p&gt;
&lt;p&gt;=SUM(B1:B10)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Calculation of Array Formula of Data Tables</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/calculation&#43;of&#43;array&#43;formula&#43;of&#43;data&#43;tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/calculation&#43;of&#43;array&#43;formula&#43;of&#43;data&#43;tables/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--calculation-of-array-formula-of-data-tables&#34;&gt;Aspose.Cells for .NET : Calculation of Array Formula of Data Tables&lt;/h1&gt;
&lt;p&gt;You can create Data Table in Microsoft Excel using &lt;code&gt;Data &amp;gt; What-If Analysis &amp;gt; Data Table...&lt;/code&gt;. Aspose.Cells now allows you to calculate the array formula of a data table. Please use &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/methods/calculateformula&#34;&gt;Workbook.CalculateFormula()&lt;/a&gt; as normal for calculating any type of formulas.&lt;/p&gt;
&lt;p&gt;In the following sample code, we used the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5023561/5115535.xlsx&#34;&gt;source excel file&lt;/a&gt;. If you change the value of cell B1 to 100, the values of the Data Table which are filled with Yellow color will become 120 as shown in the following images. The sample code generates the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5023561/5115538.pdf&#34;&gt;output PDF&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5023561/5115534.png&#34; alt=&#34;&#34;&gt;&lt;img src=&#34;https://docs2.aspose.com/cells/net/attachments/5023561/5115539.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here is the sample code used to generate the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5023561/5115538.pdf&#34;&gt;output PDF&lt;/a&gt; from the &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5023561/5115535.xlsx&#34;&gt;source excel file&lt;/a&gt;. Please read the comments for more information.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Implement Custom Calculation Engine to extend the Default Calculation Engine of Aspose.Cells</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/implement&#43;custom&#43;calculation&#43;engine&#43;to&#43;extend&#43;the&#43;default&#43;calculation&#43;engine&#43;of&#43;aspose.cells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/implement&#43;custom&#43;calculation&#43;engine&#43;to&#43;extend&#43;the&#43;default&#43;calculation&#43;engine&#43;of&#43;aspose.cells/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--implement-custom-calculation-engine-to-extend-the-default-calculation-engine-of-asposecells&#34;&gt;Aspose.Cells for .NET : Implement Custom Calculation Engine to extend the Default Calculation Engine of Aspose.Cells&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#implement-custom-calculation-engine&#34;&gt;Implement Custom Calculation Engine&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#programming-sample&#34;&gt;Programming Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#console-output&#34;&gt;Console Output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3 &lt;a href=&#34;#related-article&#34;&gt;Related Article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;implement-custom-calculation-engine&#34;&gt;Implement Custom Calculation Engine&lt;/h2&gt;
&lt;p&gt;Aspose.Cells has a powerful calculation engine that can calculate almost all of the Microsoft Excel formulas. Despite this, it also allows you to extend the default calculation engine which provides you greater power and flexibility.&lt;/p&gt;
&lt;p&gt;The following property and classes are used in implementing this feature.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/calculationoptions/properties/customengine&#34;&gt;CalculationOptions.CustomEngine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/abstractcalculationengine&#34;&gt;AbstractCalculationEngine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/calculationdata&#34;&gt;CalculationData&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following code implements the Custom Calculation Engine. It implements the interface &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/abstractcalculationengine&#34;&gt;AbstractCalculationEngine&lt;/a&gt; which has a &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/abstractcalculationengine/methods/calculate&#34;&gt;Calculate(CalculationData data)&lt;/a&gt; method. This method is called against all of your formulas. Inside this method, we capture the &lt;strong&gt;Sum&lt;/strong&gt; formula and increases its value by 30. So if the Aspose.Cells calculated value is 20, then our custom engine will make it 50 by adding 30.&lt;/p&gt;
&lt;h3 id=&#34;programming-sample&#34;&gt;Programming Sample&lt;/h3&gt;
&lt;h3 id=&#34;console-output&#34;&gt;Console Output&lt;/h3&gt;
&lt;p&gt;Here is the console output of the above sample code.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_c74a7c4ecb&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_c74a7c4ecb&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;Without&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Custom&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Engine&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;With&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Custom&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Engine&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;related-article&#34;&gt;Related Article&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/developerguide/technicalarticles/general/calculationengine/direct+calculation+of+custom+function+without+writing+it+in+a+worksheet&#34;&gt;Direct calculation of custom function without writing it in a worksheet&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Direct calculation of custom function without writing it in a worksheet</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/direct&#43;calculation&#43;of&#43;custom&#43;function&#43;without&#43;writing&#43;it&#43;in&#43;a&#43;worksheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/direct&#43;calculation&#43;of&#43;custom&#43;function&#43;without&#43;writing&#43;it&#43;in&#43;a&#43;worksheet/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--direct-calculation-of-custom-function-without-writing-it-in-a-worksheet&#34;&gt;Aspose.Cells for .NET : Direct calculation of custom function without writing it in a worksheet&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#direct-calculation-of-custom-function-without-writing-it-in-a-worksheet&#34;&gt;Direct calculation of custom function without writing it in a worksheet&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#programming-sample&#34;&gt;Programming Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 &lt;a href=&#34;#console-output&#34;&gt;Console Output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.3 &lt;a href=&#34;#related-article&#34;&gt;Related Article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;direct-calculation-of-custom-function-without-writing-it-in-a-worksheet&#34;&gt;Direct calculation of custom function without writing it in a worksheet&lt;/h2&gt;
&lt;p&gt;This topic explains how you can directly calculate your custom functions without first writing them in a worksheet. Please use the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells.worksheet/calculateformula/methods/3&#34;&gt;Worksheet.CalculateFormula(string formula, CalculationOptions opts)&lt;/a&gt; method for this purpose.&lt;/p&gt;
&lt;p&gt;Please see the following sample code that illustrates the usage of this method. We have used a custom function named &lt;code&gt;MyCompany.CustomFunction()&lt;/code&gt; and we calculate its value as &lt;code&gt;&amp;quot;Aspose.Cells.&amp;quot;&lt;/code&gt; by ourselves and then this value is automatically concatenated with the value of cell A1 which is &lt;code&gt;&amp;quot;Welcome to &amp;quot;&lt;/code&gt; by the calculation engine and the final calculated value returns as &lt;code&gt;&amp;quot;Welcome to Aspose.Cells.&amp;quot;&lt;/code&gt;&amp;rdquo;. As you can see in a code that we have not written our custom function anywhere in a worksheet and it is calculated directly by our own custom logic.&lt;/p&gt;
&lt;h3 id=&#34;programming-sample&#34;&gt;Programming Sample&lt;/h3&gt;
&lt;h3 id=&#34;console-output&#34;&gt;Console Output&lt;/h3&gt;
&lt;p&gt;Below is the console output of the above sample code.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_0742fa51f4&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_0742fa51f4&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;Calculated&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Welcome&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;related-article&#34;&gt;Related Article&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://docs2.aspose.com/cells/net/developerguide/technicalarticles/general/calculationengine/implement+custom+calculation+engine+to+extend+the+default+calculation+engine+of+aspose.cells&#34;&gt;Implement Custom Calculation Engine to extend the Default Calculation Engine of Aspose.Cells&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Decrease the Calculation Time of Cell.Calculate method</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/decrease&#43;the&#43;calculation&#43;time&#43;of&#43;cell.calculate&#43;method/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/decrease&#43;the&#43;calculation&#43;time&#43;of&#43;cell.calculate&#43;method/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--decrease-the-calculation-time-of-cellcalculate-method&#34;&gt;Aspose.Cells for .NET : Decrease the Calculation Time of Cell.Calculate method&lt;/h1&gt;
&lt;p&gt;

&lt;div class=&#34;card my-3 border-top-0 border-right-0 border-bottom-0 border-left border-primary rounded&#34; style=&#34;border-width:4px !important;&#34;&gt;
    &lt;div class=&#34;wrap border border-left-0 rounded&#34;&gt;
        
        &lt;div class=&#34;card-header border-0 bg-white pl-3 text-primary&#34;&gt;
            &lt;h3&gt;Contents Summary&lt;/h3&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;card-body pt-1&#34;&gt;
            &lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#decrease-the-calculation-time-of-cell.calculate()-method&#34;&gt;Decrease the Calculation Time of Cell.Calculate() method&lt;/a&gt;method)&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#console-output&#34;&gt;Console Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;possible-usage-scenarios&#34;&gt;Possible Usage Scenarios&lt;/h2&gt;
&lt;p&gt;Normally, we recommend users to call &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbook/methods/calculateformula/index&#34;&gt;Workbook.CalculateFormula()&lt;/a&gt; method once and then get the calculated values of the individual cells. But sometimes, users do not want to calculate entire workbook. They just want to calculate a single cell. Aspose.Cells provides &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/calculationoptions/properties/recursive&#34;&gt;CalculationOptions.Recursive&lt;/a&gt; property which you can set to **false **and it will decrease the calculation time of individual cell significantly. Because when the recursive property is set to &lt;strong&gt;true&lt;/strong&gt;, then all the dependents of cells are recalculated on each call. But when the recursive property is &lt;strong&gt;false&lt;/strong&gt;, then dependent cells are calculated only once and are not calculated again on subsequent calls.&lt;/p&gt;
&lt;h2 id=&#34;decrease-the-calculation-time-of-cellcalculate-method&#34;&gt;Decrease the Calculation Time of Cell.Calculate() method&lt;/h2&gt;
&lt;p&gt;The following sample code illustrates the usage of &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/calculationoptions/properties/recursive&#34;&gt;CalculationOptions.Recursive&lt;/a&gt; property. Please execute this code with the given &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5013541/5113710.xlsx&#34;&gt;sample excel file&lt;/a&gt; and check its console output. You will find that setting the recursive property to **false **has decreased the calculation time significantly. Please also read the comments for a better understanding of this property.&lt;/p&gt;
&lt;h2 id=&#34;console-output&#34;&gt;Console Output&lt;/h2&gt;
&lt;p&gt;This is the console output of the above sample code when executed with the given &lt;a href=&#34;https://docs2.aspose.com/cells/net/attachments/5013541/5113710.xlsx&#34;&gt;sample excel file&lt;/a&gt; on our machine. Please note, your output may differ but the elapsed time after setting the recursive property to **false **will always be less than setting it to &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;






    
    




&lt;div class=&#34;position-relative&#34;&gt;
    &lt;div class=&#34;position-absolute&#34; style=&#34;right:0;&#34;&gt;
        &lt;button class=&#34;btn btn-light&#34; data-clipboard-target=&#34;#clipboard_5e584c057f&#34;&gt;
        Copy
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;clipboard_5e584c057f&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;
&lt;span style=&#34;color:#000&#34;&gt;Recursive&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;96&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;seconds&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Recursive&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;seconds&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





      </description>
    </item>
    
    <item>
      <title>Net: Setting Formula Calculation Mode of Workbook</title>
      <link>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/setting&#43;formula&#43;calculation&#43;mode&#43;of&#43;workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://roywangt.github.io/cells/net/developerguide/technicalarticles/general/calculationengine/setting&#43;formula&#43;calculation&#43;mode&#43;of&#43;workbook/</guid>
      <description>
        
        
        &lt;h1 id=&#34;asposecells-for-net--setting-formula-calculation-mode-of-workbook&#34;&gt;Aspose.Cells for .NET : Setting Formula Calculation Mode of Workbook&lt;/h1&gt;
&lt;p&gt;Microsoft Excel allows you to set the formula calculation mode, that is, the way formulas are calculated. There are three possible values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Automatic - recalculate whenever something is changed, and every time a workbook is opened.&lt;/li&gt;
&lt;li&gt;Automatic except for data tables - recalculate whenever something is changed, but leaving out data tables.&lt;/li&gt;
&lt;li&gt;Manual - recalculate only when the user explicitly requests it by pressing F9 or CTRL+ALT+F9, or when the workbook is saved.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To set the formula calculation mode in Microsoft Excel:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select &lt;strong&gt;Formulas&lt;/strong&gt; and then &lt;strong&gt;Calculation Options&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Select one of the options.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Aspose.Cells also allows you to set the &lt;strong&gt;Formula Calculation Mode&lt;/strong&gt; using &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/workbooksettings/properties/calcmode&#34;&gt;Workbook.Settings.CalcMode&lt;/a&gt; mode property. You can assign it the &lt;a href=&#34;https://apireference.aspose.com/net/cells/aspose.cells/calcmodetype&#34;&gt;CalcModeType&lt;/a&gt; enumeration which has one of the following values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CalcModeType.Automatic&lt;/li&gt;
&lt;li&gt;CalcModeType.AutomaticExceptTable&lt;/li&gt;
&lt;li&gt;CalcModeType.Manual&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
